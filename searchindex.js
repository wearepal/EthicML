Search.setIndex({"docnames": ["404", "ethicml.data", "ethicml.metrics", "ethicml.models/base", "ethicml.models/index", "ethicml.models/inprocess", "ethicml.models/postprocess", "ethicml.models/preprocess", "ethicml.plot", "ethicml.run", "ethicml/index", "ethicml/preprocessing", "ethicml/utility", "index", "tutorials/adult_dataset", "tutorials/migration_guide"], "filenames": ["404.rst", "ethicml.data.rst", "ethicml.metrics.rst", "ethicml.models/base.rst", "ethicml.models/index.rst", "ethicml.models/inprocess.rst", "ethicml.models/postprocess.rst", "ethicml.models/preprocess.rst", "ethicml.plot.rst", "ethicml.run.rst", "ethicml/index.rst", "ethicml/preprocessing.rst", "ethicml/utility.rst", "index.rst", "tutorials/adult_dataset.ipynb", "tutorials/migration_guide.rst"], "titles": ["Missing Page", "ethicml.data", "ethicml.metrics", "Algorithms base", "ethicml.models", "Inprocess algorithms", "Postprocess algorithms", "Preprocess algorithms", "ethicml.plot", "ethicml.run", "ethicml", "Data preprocessing", "Utils", "Welcome to EthicML\u2019s documentation!", "Runnning experiments on the Adult dataset", "Migration guide to 1.0"], "terms": {"oh": 0, "thi": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 14], "doesn": 0, "t": [0, 1, 5, 7, 9, 11, 12], "exist": [0, 1, 9, 12], "mai": [0, 11], "have": [0, 1, 7, 11], "move": 0, "you": [0, 5, 12, 13, 14, 15], "can": [0, 1, 2, 5, 8, 9, 13, 14, 15], "get": [0, 1, 8, 9, 12], "back": 0, "document": [0, 5], "ethicml": [0, 7, 11, 14, 15], "here": [0, 5, 13], "modul": [1, 2, 5, 8, 9, 11, 12, 13], "item": 1, "relat": 1, "raw": 1, "csv": [1, 9, 12], "": [1, 2, 5, 7, 8, 11, 12, 14], "object": [1, 2, 5, 7, 8, 9, 11, 12], "class": [1, 2, 3, 5, 6, 7, 9, 11, 12, 14], "function": [1, 2, 8, 9, 11, 12], "acsemploy": [1, 13], "root": 1, "year": [1, 5], "horizon": 1, "state": 1, "split": [1, 5, 11, 14], "sex": [1, 5], "discrete_onli": 1, "fals": [1, 2, 5, 8, 9, 11, 12], "invert_": 1, "base": [1, 2, 4, 9, 11, 12, 13], "_acsbas": 1, "The": [1, 2, 5, 6, 8, 9, 10, 11, 12, 14], "ac": 1, "employm": 1, "dataset": [1, 2, 5, 7, 8, 9, 11, 12, 13, 15], "from": [1, 2, 5, 7, 9, 11, 12, 13, 14, 15], "eaamo21": 1, "neurips21": 1, "retir": 1, "adult": [1, 11, 13], "paramet": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12], "str": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12], "path": [1, 3, 5, 7, 9, 12], "int": [1, 2, 5, 6, 7, 8, 9, 11, 12], "list": [1, 2, 3, 5, 7, 8, 9, 11, 12], "statelist": 1, "bool": [1, 2, 5, 7, 8, 9, 11, 12], "__len__": [1, 12], "return": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12], "number": [1, 2, 5, 6, 7, 9, 11, 12, 15], "element": [1, 12], "type": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12], "static": [1, 12], "cat_lookup": 1, "kei": [1, 9], "look": [1, 13], "up": [1, 11], "categori": 1, "sequenc": [1, 2, 9, 11, 12], "properti": [1, 2, 3, 5, 6, 7, 9, 12], "class_label": 1, "label": [1, 2, 5, 6, 8, 11, 12, 14], "continuous_featur": 1, "featur": [1, 7, 9, 11, 12, 14], "ar": [1, 2, 3, 5, 7, 8, 9, 11, 12, 13, 15], "continu": [1, 9, 11], "disc_feature_group": 1, "dict": [1, 2, 3, 5, 7, 9, 12], "dictionari": [1, 2, 3, 5, 7, 9], "group": [1, 2, 5, 7], "discrete_featur": 1, "discret": 1, "feature_split": 1, "order": [1, 2], "enum": [1, 2, 5, 7, 12], "auto": [1, 2, 5, 7, 12], "an": [1, 2, 5, 8, 9, 12], "should": [1, 8, 9, 11, 12], "separ": [1, 3, 5, 7], "entri": [1, 8, 9, 12], "sensit": [1, 2, 6, 9, 12, 14], "attribut": [1, 2, 6, 9, 12, 14], "x": [1, 8, 11, 12, 13, 14], "so": [1, 5, 7, 9, 11], "first": [1, 9, 11, 12, 14], "featureord": [1, 13], "featuresplit": [1, 13], "features_to_remov": 1, "remov": [1, 5], "load": [1, 9, 11, 12], "labels_as_featur": 1, "its": [1, 5, 8], "file": [1, 7, 9, 12], "If": [1, 2, 3, 5, 7, 8, 9, 11, 13, 14], "true": [1, 2, 5, 7, 8, 9, 11, 12], "y": [1, 2, 5, 8, 11, 12, 14], "includ": [1, 14], "column": [1, 8, 11, 12], "datafram": [1, 2, 5, 8, 9, 11, 12, 14], "disc_first": 1, "cont_first": 1, "see": [1, 5, 7, 9], "datatupl": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15], "name": [1, 2, 3, 5, 6, 7, 8, 9, 12], "sens_attr": 1, "acsincom": [1, 13], "target_threshold": 1, "50000": 1, "incom": 1, "admiss": [1, 13], "admissionssplit": [1, 13], "gender": 1, "legacydataset": [1, 13], "ufrg": 1, "alia": [1, 12], "without": [1, 5], "discard_non_one_hot": 1, "classvar": [1, 2], "some": [1, 2, 11], "correctli": 1, "one": [1, 12, 14], "hot": [1, 12], "encod": [1, 7, 12], "discard": 1, "those": [1, 9, 11], "filepath": [1, 8], "which": [1, 2, 5, 8, 9, 11, 12, 13, 14], "get_filename_or_path": 1, "filenam": [1, 8, 9], "contain": [1, 8, 10, 12], "get_label_spec": 1, "spec": 1, "labelspecspair": [1, 13], "get_num_sampl": 1, "sampl": [1, 5, 7, 11, 12], "invert_sens_attr": 1, "whether": [1, 2, 5, 12], "invert": [1, 11], "load_aif": 1, "aif360": [1, 7], "experiment": 1, "requir": 1, "librari": 1, "ignor": [1, 12], "check": [1, 2, 5, 12], "i": [1, 2, 3, 5, 6, 7, 9, 11, 12, 14], "yet": [1, 12], "defin": [1, 2, 8], "load_discrete_onli": 1, "onli": [1, 5, 9, 11, 12], "map_to_binari": 1, "convert": [1, 12], "1": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14], "0": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14], "unfiltered_disc_feat_group": 1, "valu": [1, 2, 5, 8, 9, 12, 14], "adultsplit": [1, 13], "binarize_nation": 1, "binarize_rac": 1, "staticcsvdataset": [1, 13], "uci": [1, 14], "drop": 1, "default": [1, 2, 3, 5, 7, 8, 9, 11, 12, 14], "binari": [1, 14], "what": [1, 12], "us": [1, 2, 3, 5, 7, 8, 9, 11, 12, 14], "nation": 1, "usa": 1, "v": [1, 2], "rest": [1, 11], "race": [1, 14], "white": [1, 14], "avail": [1, 9], "csvdataset": [1, 13], "abc": [1, 2, 3, 5, 6, 7, 11, 12], "abstract": [1, 2, 3, 5, 6, 7, 12], "csvdatasetdc": [1, 13], "compa": [1, 5, 9, 13], "compassplit": [1, 13], "propublica": 1, "credit": [1, 13], "creditsplit": [1, 13], "card": 1, "crime": [1, 13], "crimesplit": [1, 13], "race_binari": [1, 14], "commun": 1, "structur": [1, 10, 15], "hold": 1, "all": [1, 2, 5, 6, 7, 8, 9, 11, 15], "inform": [1, 2], "need": [1, 14], "given": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12], "arg": [1, 2, 7, 11, 12], "kwarg": [1, 2, 7, 11, 12], "strenum": [1, 2, 7, 12], "ani": [1, 2, 7, 9, 12], "typeddict": 1, "A": [1, 2, 5, 7, 8, 9, 11, 12], "belong": [1, 12], "len": [1, 12], "self": [1, 2, 5, 6, 7, 11, 12], "clear": 1, "none": [1, 2, 3, 5, 7, 8, 9, 11, 12, 14], "d": 1, "copi": [1, 12], "shallow": 1, "fromkei": 1, "creat": [1, 5, 7, 8, 9, 12], "new": [1, 11, 12], "iter": [1, 5, 9, 12], "set": [1, 2, 5, 6, 7, 9, 11], "els": [1, 11, 12], "like": 1, "provid": [1, 8], "view": 1, "pop": 1, "k": [1, 9], "specifi": [1, 2, 3, 5, 7], "correspond": 1, "found": [1, 5, 8], "otherwis": [1, 8, 9, 12], "rais": [1, 3, 5, 7, 8, 11, 12], "keyerror": 1, "popitem": 1, "pair": [1, 9], "2": [1, 2, 5, 7, 9, 12, 14], "tupl": [1, 5, 7, 8, 9, 11, 12], "lifo": 1, "last": [1, 5], "out": [1, 3, 5, 7, 14], "empti": 1, "setdefault": 1, "insert": 1, "updat": 1, "e": [1, 3, 5, 7, 12], "f": [1, 9], "present": [1, 12], "ha": [1, 8, 11, 14], "method": [1, 2, 4, 6, 8, 12, 13], "doe": [1, 2, 5, 8], "lack": 1, "In": [1, 5, 11, 14], "either": [1, 5, 11], "case": 1, "follow": 1, "german": [1, 13], "germansplit": [1, 13], "health": [1, 13], "healthsplit": [1, 13], "heritag": 1, "labelgroup": [1, 13], "multipli": [1, 5], "namedtupl": [1, 12], "definit": [1, 4], "interpret": 1, "singl": [1, 2], "field": [1, 12], "count": [1, 12], "occurr": [1, 12], "index": [1, 2, 12, 13], "start": [1, 12], "stop": [1, 12], "9223372036854775807": [1, 12], "valueerror": [1, 8, 11, 12], "to_remov": 1, "factori": [1, 5, 7], "map": [1, 2, 9, 12], "build": 1, "becaus": [1, 8, 12], "thei": [1, 2, 9, 11, 14], "block": 1, "law": [1, 13], "lawsplit": [1, 13], "lsac": 1, "school": 1, "filename_or_path": 1, "cont_featur": 1, "sens_attr_spec": 1, "class_label_spec": 1, "num_sampl": 1, "s_feature_group": 1, "class_feature_group": 1, "discrete_feature_group": 1, "consid": [1, 9], "legaci": 1, "now": [1, 5, 15], "pleas": 1, "instead": [1, 2, 5, 9, 11, 12], "labelspec": 1, "lipton": [1, 13], "synthet": [1, 13], "et": [1, 5, 6, 7], "al": [1, 5, 6, 7], "2018": 1, "describ": [1, 11], "section": 1, "4": [1, 9, 14], "mitig": 1, "ml": 1, "impact": 1, "dispar": 1, "treatment": 1, "articl": 1, "lipton2018do": 1, "titl": [1, 2], "author": 1, "zachari": 1, "mcaulei": 1, "julian": 1, "chouldechova": 1, "alexandra": 1, "journal": 1, "advanc": 1, "neural": [1, 12], "process": [1, 3, 5, 6, 7, 9, 11], "system": 1, "volum": 1, "31": 1, "page": [1, 13], "8125": 1, "8135": 1, "nonbinarytoi": [1, 13], "toi": [1, 7, 13], "test": [1, 5, 6, 7, 9, 11, 12], "nurseri": [1, 13], "nurserysplit": [1, 13], "financ": 1, "sqf": [1, 13], "sqfsplit": [1, 13], "question": 1, "frisk": 1, "2016": 1, "sourc": 1, "http": [1, 2, 5, 13], "www1": 1, "nyc": 1, "gov": 1, "site": 1, "nypd": 1, "stat": 1, "report": [1, 5], "analysi": 1, "stopfrisk": 1, "whose": [1, 2], "size": [1, 5, 7, 8], "locat": 1, "depend": [1, 2, 5], "constructor": [1, 12], "argument": [1, 3, 5, 7, 11], "exampl": [1, 2, 11, 14], "how": [1, 2, 9, 11, 12], "subclass": 1, "dataclass": [1, 5], "400": 1, "csv_file": [1, 12], "def": 1, "single_col_spec": [1, 13], "sen": [1, 2], "discfeaturegroup": 1, "disc_1": 1, "a_1": 1, "a_2": 1, "a_3": 1, "disc_2": 1, "b_1": 1, "b_2": 1, "c1": 1, "c2": 1, "scenario": 1, "syntheticscenario": [1, 13], "s1": 1, "target": [1, 2], "synthetictarget": [1, 13], "y3": 1, "fair": [1, 5, 6, 7, 9, 12, 13, 14], "1000": 1, "independ": [1, 11], "ancestor": 1, "causal": 1, "model": [1, 7, 9, 12, 13, 15], "gener": [1, 5, 7, 8, 11], "complet": 1, "x_2": 1, "y_2": 1, "x_1": 1, "y_1": 1, "y_3": 1, "where": [1, 5, 7, 8, 9, 11, 12], "input": 1, "bias": [1, 11], "propog": 1, "through": [1, 8], "3": [1, 5, 9, 14], "both": [1, 9, 11], "directli": [1, 9, 12], "available_tabular": [1, 13], "tabular": 1, "create_data_obj": [1, 13], "s_column": [1, 12], "y_column": [1, 12], "additional_to_drop": 1, "configurabledataset": 1, "repres": [1, 8], "labl": 1, "other": 1, "filter_features_by_prefix": [1, 13], "prefix": [1, 2], "filter": [1, 12], "flatten_dict": [1, 13], "flatten": 1, "join": 1, "big": 1, "from_dummi": [1, 13], "categorical_col": 1, "categor": 1, "panda": [1, 5, 11, 12, 14], "get_dataset_obj_by_nam": [1, 13], "callabl": [1, 2, 12], "construct": [1, 12], "notimplementederror": 1, "get_discrete_featur": [1, 13], "all_feat": 1, "feats_to_remov": 1, "cont_feat": 1, "aren": 1, "mark": 1, "group_disc_feat_indic": [1, 13], "disc_feat_nam": 1, "prefix_sep": 1, "_": 1, "accord": [1, 9], "segment": 1, "slice": 1, "assum": 1, "maintain": 1, "between": [1, 2], "label_spec_to_feature_list": [1, 13], "extract": 1, "specif": 1, "flattend": 1, "occur": 1, "load_data": [1, 13], "backward": 1, "compat": 1, "one_hot_encode_and_combin": [1, 13], "label_spec": 1, "heart": 1, "api": [1, 11], "pd": [1, 11, 12], "mask": 1, "row": [1, 11], "properli": 1, "more": [1, 5], "than": [1, 5], "seri": [1, 11, 12], "were": [1, 15], "reduce_feature_group": [1, 13], "feature_group": 1, "to_keep": 1, "remaining_feature_nam": 1, "except": [1, 2], "ones": [1, 12], "replac": [1, 11, 12], "kept": 1, "dummi": 1, "summar": 1, "modifi": 1, "col": 1, "feature_nam": 1, "spec_from_binary_col": [1, 13], "label_def": 1, "most": [1, 9], "common": [1, 14], "result": [1, 2, 8, 9, 12, 13, 14], "consist": [1, 9], "appli": [2, 9, 12], "predict": [2, 5, 6, 10, 12], "code": [2, 5], "import": [2, 9, 13, 14], "accuraci": [2, 9, 13, 14], "tpr": [2, 13, 14], "run_metr": [2, 13], "test_data": 2, "AS": [2, 13], "metricstaticnam": [2, 13], "anti": 2, "spuriou": 2, "comput": [2, 5, 9], "p": [2, 11], "hat": 2, "neq": 2, "apply_per_sensit": 2, "per": [2, 9], "get_nam": [2, 12], "score": [2, 9, 12], "actual": 2, "labeltupl": [2, 10, 12], "evaltupl": [2, 12], "float": [2, 5, 7, 8, 11, 12], "abscv": [2, 9, 13], "pos_class": 2, "cv": [2, 9, 13, 14], "absolut": [2, 9], "calder": [2, 4, 5, 14], "verwer": 2, "suppos": 2, "make": [2, 5, 6, 7, 8, 11, 12], "easier": 2, "compar": 2, "option": [2, 9], "possibl": [2, 9, 11], "infer": 2, "data": [2, 5, 6, 7, 8, 9, 10, 12, 13, 15], "when": [2, 5, 9], "run": [2, 3, 5, 6, 7, 13, 14, 15], "treat": 2, "being": 2, "posit": [2, 8], "sklearnmetr": [2, 13], "classif": 2, "averageoddsdiff": [2, 13], "cfmmetric": [2, 13], "averag": [2, 9], "odd": [2, 5, 12], "differ": 2, "tfrac": 2, "left": 2, "fpr_": 2, "tpr_": 2, "right": 2, "indic": 2, "equal": [2, 5, 12], "bcr": [2, 13], "balanc": [2, 5, 7, 11], "rate": 2, "balancedaccuraci": [2, 13], "respect": 2, "confus": 2, "matrix": 2, "dependencytarget": [2, 13], "variabl": [2, 3, 5, 7], "similar": 2, "f1": [2, 13], "harmon": 2, "mean": [2, 8, 9, 12, 14], "precis": 2, "recal": 2, "fnr": [2, 13], "neg": 2, "fpr": [2, 13], "hsic": [2, 13], "seed": [2, 5, 6, 7, 9, 11, 14], "888": [2, 5, 6, 7, 11], "we": [2, 5, 14], "add": 2, "abil": 2, "take": [2, 5, 6, 7, 9, 11, 12], "As": 2, "larger": [2, 7], "kill": 2, "your": 2, "machin": [2, 12, 13], "labeloutofboundserror": [2, 13], "Not": 2, "applic": 2, "whole": [2, 11], "with_traceback": 2, "tb": 2, "__traceback__": 2, "metricnotapplicableerror": [2, 13], "instanc": [2, 5, 9, 12], "nmi": [2, 13], "_dependencemeasur": 2, "normal": [2, 11], "mutual": 2, "also": [2, 8], "call": [2, 3, 5, 7], "measur": [2, 9], "paper": [2, 5, 14], "www": 2, "aclweb": 2, "org": [2, 5], "anthologi": 2, "d07": 2, "1043": 2, "pdf": [2, 8], "npv": [2, 13], "ppv": [2, 13], "persen": [2, 13], "aggreg": [2, 12], "frozenset": 2, "per_sensitive_attribut": 2, "min": 2, "min_per_sen": [2, 13], "ratio": 2, "ratio_per_sen": [2, 13], "diff": 2, "diff_per_sen": [2, 13], "max": 2, "max_per_sen": [2, 13], "diffs_ratio": 2, "equival": 2, "maximum": [2, 9], "minimum": 2, "min_max": 2, "probneg": [2, 13], "probabl": [2, 5, 12], "proboutcom": [2, 13], "logit": [2, 12], "probpo": [2, 13, 14], "renyicorrel": [2, 13], "renyi": 2, "correl": 2, "two": [2, 11], "random": [2, 5, 6, 7, 9, 11], "link": 2, "springer": 2, "com": [2, 5], "content": 2, "10": [2, 5, 7], "1007": 2, "bf02024507": 2, "On": 2, "alfr\u00e9d": 2, "r\u00e9nyi": 2, "robustaccuraci": [2, 13], "across": [2, 9], "wrapper": [2, 5], "around": [2, 5], "sklearn": [2, 5, 9, 11], "tnr": [2, 13], "theil": [2, 13], "yanovich": [2, 13], "arxiv": [2, 5], "ab": [2, 5], "1008": 2, "0492": 2, "aggregate_over_sen": [2, 13], "per_sens_r": 2, "infix": 2, "suffix": 2, "over": [2, 9, 12], "string": [2, 3, 5, 7, 8, 9], "displai": 2, "final": [2, 5], "metric_per_sen": [2, 13], "use_sens_nam": 2, "repeatedli": 2, "subset": [2, 9, 11, 12], "share": 2, "senstit": 2, "per_sens_metrics_check": [2, 13], "per_sens_metr": [2, 9, 13, 14], "allow": 2, "abstractset": 2, "perform": [2, 9, 13], "senisit": 2, "refer": 2, "subprocessalgorithmmixin": [3, 4, 5], "mixin": 3, "subprocess": [3, 5, 7], "call_script": [3, 5, 7], "cmd_arg": [3, 5, 7], "env": [3, 5, 7], "cwd": [3, 5, 7], "python": [3, 5, 7], "script": [3, 5, 7], "pass": [3, 5, 7, 11], "commandlin": [3, 5, 7], "execut": [3, 5, 7], "environ": [3, 5, 7], "g": [3, 5, 7, 12], "usr": [3, 5, 7], "bin": [3, 5, 7, 11], "chang": [3, 5, 7, 12, 14, 15], "work": [3, 5, 7], "directori": [3, 5, 7, 9], "befor": [3, 5, 7], "command": [3, 5, 7], "runtimeerror": [3, 5, 7], "fail": [3, 5, 7], "time": [3, 5, 7, 9], "By": [3, 5, 7, 14], "algorithm": [4, 9, 11, 12, 13, 15], "inprocess": [4, 9, 13], "agarw": 4, "distribution": 4, "robust": 4, "optim": [4, 9], "instal": 4, "kamiran": [4, 7, 13, 14], "kamishima": 4, "logist": [4, 12, 14], "regress": [4, 12, 14], "major": [4, 7], "manual": [4, 14], "mlp": 4, "oracl": 4, "svm": [4, 12, 13, 14], "zafar": 4, "postprocess": [4, 13], "dp": [4, 5, 12], "flip": 4, "hardt": 4, "preprocess": [4, 8, 9, 10, 13], "beutel": 4, "upsampl": [4, 13, 14], "vfae": 4, "zemel": 4, "train": [5, 6, 7, 9, 11, 12], "framework": [5, 6, 7], "inalgorithm": [5, 9], "middl": 5, "pipelin": 5, "fit": [5, 6, 7, 11], "initi": [5, 7, 12], "hyperparamet": [5, 9], "hyperparamtyp": [5, 12], "subgrouptupl": [5, 6, 10, 12], "evalu": [5, 9, 13, 15], "run_test": [5, 7], "reduc": [5, 7], "finish": [5, 7, 14], "quicker": [5, 7], "inalgorithmdc": 5, "inalgorithmnoparam": 5, "implement": [5, 7], "dir": [5, 7], "classifi": [5, 12], "ep": 5, "50": [5, 7, 11, 12], "c": [5, 9, 14], "kernel": [5, 12, 14], "inalgorithmsubprocess": 5, "exponenti": 5, "gradient": [5, 12], "fairnesstyp": [5, 7, 10, 12], "enforc": 5, "classifiertyp": [5, 10, 12], "epsilon": [5, 7], "fo": 5, "kerneltyp": [5, 10, 12, 14], "model_path": [5, 7], "store": [5, 7, 9, 14], "demograph": [5, 6, 12], "dro": 5, "eta": 5, "5": [5, 7, 9, 11, 13, 14], "epoch": [5, 7], "batch_siz": [5, 7], "32": [5, 7], "network_s": 5, "1806": 5, "08010": 5, "toler": 5, "batch": 5, "network": [5, 12], "kind": [5, 12], "complic": 5, "incredibli": 5, "sai": 5, "find": [5, 11, 13], "few": 5, "ago": 5, "It": 5, "unreason": 5, "might": 5, "clash": 5, "galor": 5, "approach": [5, 6, 9], "download": 5, "own": [5, 8], "venv": 5, "everyon": 5, "happi": 5, "installedmodel": 5, "dir_nam": 5, "top_dir": 5, "url": 5, "use_pdm": 5, "magic": 5, "pip": [5, 14], "pipfil": 5, "chosen": [5, 11], "freeli": 5, "top": [5, 9, 15], "repositori": 5, "usual": 5, "simpli": 5, "part": 5, "try": [5, 11], "pdm": 5, "pipenv": 5, "virtualenv": 5, "associ": 5, "_clone_directori": 5, "2012": [5, 7], "reweight": [5, 14], "reweigh": 5, "each": [5, 8, 9, 12, 14], "assign": 5, "weight": 5, "jo": 5, "dure": 5, "select": [5, 9], "compute_instance_weight": 5, "balance_group": 5, "upweight": 5, "numer": 5, "downweight": 5, "them": [5, 6, 8], "done": [5, 8, 14], "invers": [5, 11], "stabl": 5, "small": [5, 9], "algo": [5, 9], "github": 5, "algofair": 5, "comparison": 5, "blob": 5, "master": 5, "kamishimaalgorithm": 5, "py": 5, "sci": 5, "kit": 5, "learn": [5, 7, 13], "lr": [5, 9, 12, 14], "hard": [5, 12], "logisticregress": 5, "detail": [5, 7], "regular": 5, "softpredict": [5, 10, 12], "lrcv": 5, "n_split": 5, "cheap": 5, "hack": 5, "give": 5, "proper": 5, "cross": [5, 8, 9], "valudet": 5, "valid": [5, 9], "corel": 5, "certifi": 5, "rule": 5, "statement": 5, "1704": 5, "01701": 5, "hidden_layer_s": 5, "001": 5, "multi": 5, "layer": 5, "perceptron": 5, "wraper": 5, "scikit": 5, "neural_network": 5, "mlpclassifi": 5, "html": 5, "neuron": 5, "hidden": 5, "perfect": [5, 6], "predictor": 5, "dporacl": 5, "pariti": [5, 6, 12], "rather": 5, "testtupl": [5, 12], "isn": [5, 9], "intend": 5, "want": [5, 14], "do": [5, 6, 7, 11, 14], "saniti": 5, "potenti": 5, "scikitlearn": 5, "support": [5, 12], "vector": [5, 12], "svc": 5, "underli": [5, 12], "penalti": 5, "error": 5, "term": 5, "zafaraccuraci": 5, "gamma": 5, "_zafaralgorithmbas": 5, "zafarbaselin": 5, "zafareqodd": 5, "tau": 5, "mu": 5, "0001": 5, "zafareqopp": 5, "equalis": 5, "opportun": [5, 12], "zafarfair": 5, "post": [6, 11], "transform": [6, 7, 8, 9, 11, 12, 14], "postalgorithm": 6, "train_predict": 6, "correct": [6, 12], "test_predict": 6, "dpflip": 6, "randomli": 6, "decis": [6, 12], "achiev": 6, "unfavorable_label": 6, "favorable_label": 6, "pre": [7, 11, 13, 15], "prealgorithm": [7, 9], "typing_extens": 7, "util": [7, 10, 11, 13], "data_structur": [7, 11], "out_siz": 7, "posixpath": [7, 9], "enc_siz": 7, "adv_siz": 7, "pred_siz": 7, "enc_activ": 7, "sigmoid": [7, 12], "adv_activ": 7, "64": 7, "y_loss": 7, "crossentropyloss": 7, "s_loss": 7, "bceloss": 7, "adv_weight": 7, "validation_pcnt": 7, "prealgorithmsubprocess": 7, "adversari": 7, "represent": 7, "massag": 7, "preferable_class": 7, "disadvantaged_group": 7, "simpl": [7, 9], "subgroup": 7, "same": [7, 9, 11], "upsamplestrategi": 7, "strategi": 7, "variat": 7, "louizo": 7, "supervis": 7, "latent_dim": 7, "z1_enc_siz": 7, "z2_enc_siz": 7, "z1_dec_siz": 7, "threshold": 7, "cluster": 7, "ax": [7, 8], "01": 7, "ai": [7, 13], "az": 7, "max_it": 7, "5000": 7, "maxfun": 7, "1e": [7, 9], "05": 7, "lfr": 7, "tool": 8, "plot_result": [8, 13], "metric_i": 8, "metric_x": 8, "ptype": 8, "box": 8, "save": [8, 12], "dpi": 8, "300": 8, "transforms_separ": 8, "standard": [8, 11], "deviat": 8, "alreadi": 8, "metric": [8, 9, 12, 13, 14, 15], "axi": 8, "liter": [8, 9, 11], "scatter": 8, "line": 8, "figur": 8, "match": 8, "matplotlib": 8, "pyplot": 8, "save_2d_plot": [8, 13], "2d": 8, "save_jointplot": [8, 13], "dim": 8, "joint": 8, "save_label_plot": [8, 13], "save_multijointplot": [8, 13], "single_plot": [8, 13], "xaxi": 8, "yaxi": 8, "legend_po": 8, "outsid": 8, "legend_yanchor": 8, "markers": 8, "6": [8, 9, 14, 15], "alternating_styl": 8, "include_nan_entri": 8, "individu": 8, "nice": 8, "interfac": 8, "multipl": 8, "itself": 8, "identifi": [8, 9], "insid": 8, "legend": 8, "vertic": 8, "direct": 8, "begin": 8, "marker": 8, "altern": 8, "style": [8, 9], "nan": [8, 14], "still": 8, "appear": 8, "someth": 8, "wa": [8, 9, 12], "unsupport": 8, "obtain": 9, "cvresult": [9, 13], "experi": [9, 13], "crossvalid": [9, 13], "meant": 9, "raw_storag": 9, "access": 9, "fold": 9, "Or": 9, "mean_storag": 9, "em": [9, 14], "train_test_split": [9, 10, 11], "hyperparam": 9, "primari": 9, "fair_measur": 9, "cv_result": 9, "best_result": 9, "get_best_in_top_k": 9, "top_k": 9, "print": 9, "best": 9, "param": 9, "resulttupl": 9, "initialis": [9, 12], "hyper": 9, "best_hyper_param": 9, "interest": 9, "secondari": 9, "sort": 9, "second": 9, "id": [9, 11], "get_best_result": 9, "combin": 9, "max_parallel": 9, "lr_cv": 9, "parallel": [9, 14], "cpu": 9, "run_async": 9, "asynchron": 9, "arrange_in_parallel": [9, 13], "num_job": 9, "arrang": 9, "embarrassingli": 9, "_rt": 9, "dataseq": 9, "job": 9, "mani": [9, 11, 12], "evaluate_model": [9, 12, 13, 14], "preprocess_model": [9, 13, 14], "inprocess_model": [9, 13, 14], "repeat": [9, 12, 13, 14], "test_mod": 9, "delete_previ": 9, "splitter": 9, "topic": 9, "fair_pipelin": 9, "scaler": [9, 11, 14], "repeat_on": 9, "faster": 9, "delet": 9, "previou": 9, "datasplitt": [9, 10, 11], "custom": 9, "prepend": [9, 12], "output": 9, "scalertyp": [9, 10, 11], "vari": 9, "load_result": [9, 13], "dataset_nam": 9, "transform_nam": 9, "outdir": 9, "run_in_parallel": [9, 13], "inseq": 9, "preseq": 9, "inresult": 9, "preresult": 9, "main": 10, "namespac": [10, 15], "balancedtestsplit": [10, 11], "biaseddebiasedsubset": [10, 11], "biasedsubset": [10, 11], "labelbinar": [10, 11], "proportionalsplit": [10, 11], "randomsplit": [10, 11], "sequentialsplit": [10, 11], "bin_cont_feat": [10, 11], "dataset_from_cond": [10, 11], "domain_split": [10, 11], "get_biased_and_debiased_subset": [10, 11], "get_biased_subset": [10, 11], "query_dt": [10, 11], "scale_continu": [10, 11], "activ": [10, 12], "heavisid": [10, 12], "modeltyp": [10, 12], "resultsaggreg": [10, 12], "traintestpair": [10, 12], "trainvalpair": [10, 12], "aggregate_result": [10, 12], "concat": [10, 12], "filter_and_map_result": [10, 12], "filter_result": [10, 12], "make_result": [10, 12], "map_over_results_index": [10, 12], "shuffle_df": [10, 12], "undo_one_hot": [10, 12], "alias": [10, 13], "wai": 11, "balance_typ": 11, "train_percentag": 11, "8": [11, 12, 14], "start_se": 11, "proport": 11, "25": 11, "much": 11, "unbiased_pcnt": 11, "mixing_factor": 11, "42": 11, "fixed_unbias": 11, "debias": 11, "mix": 11, "factor": 11, "reserv": 11, "unbias": 11, "data_effici": 11, "keep": 11, "point": 11, "adjust": 11, "post_only_label": 11, "while": 11, "preserv": 11, "protocol": 11, "fit_transform": 11, "npt": 11, "ndarrai": [11, 12], "inverse_transform": 11, "n": 11, "shuffl": [11, 12], "fetur": 11, "ordin": 11, "afresh": 11, "been": 11, "cond": 11, "meet": 11, "condit": 11, "datatup": 11, "tr_cond": 11, "te_cond": 11, "plu": 11, "percentag": 11, "again": 11, "contrast": 11, "realli": [11, 12], "don": [11, 12], "sum": 11, "behavior": 11, "everywher": 11, "just": [11, 12], "form": 11, "maxim": 11, "query_str": 11, "queri": 11, "sclae": 11, "scale": 11, "must": 11, "revers": 11, "oper": 11, "random_se": 11, "num_test_sampl": 11, "along": 11, "reproduc": 11, "thing": 12, "anywher": 12, "soft_output": 12, "soft": 12, "numpi": 12, "gbt": 12, "boost": 12, "s_in_x": 12, "subsetmixin": 12, "apply_to_joined_df": 12, "mapper": 12, "concaten": 12, "classmethod": 12, "from_df": 12, "from_fil": 12, "data_path": 12, "npz": 12, "get_n_sampl": 12, "num": 12, "500": 12, "get_s_subset": 12, "remove_i": 12, "renam": 12, "replace_data": 12, "getter": 12, "save_to_fil": 12, "eq_odd": 12, "eq_opp": 12, "accept": 12, "abov": 12, "linear": [12, 14], "poli": 12, "polynomi": 12, "rbf": 12, "radial": 12, "basi": 12, "from_np": 12, "s_name": 12, "y_name": 12, "arrai": 12, "deep": 12, "info": 12, "length": 12, "npz_path": 12, "pred": 12, "s_data": 12, "request": 12, "addit": 12, "about": 12, "append_df": 12, "data_fram": 12, "append": 12, "append_from_csv": 12, "succesfulli": 12, "save_as_csv": 12, "file_path": 12, "np": 12, "std": [12, 14], "aggreat": 12, "datatup_list": 12, "ignore_index": 12, "old": 12, "pandasindex": 12, "alwai": 12, "df": 12, "random_st": 12, "new_column_nam": 12, "undo": 12, "union": 12, "hyperparamvalu": 12, "wearep": 13, "packag": 13, "aim": 13, "increas": 13, "account": 13, "transpar": 13, "plot": [13, 15], "prob_pos_male_0": 13, "male_1": 13, "migrat": 13, "guid": 13, "runn": 13, "search": 13, "pypi": 14, "often": 14, "literatur": 14, "assert": 14, "45222": 14, "101": 14, "shape": 14, "compris": 14, "member": 14, "sex_mal": 14, "to_fram": 14, "head": 14, "could": 14, "task": 14, "98": 14, "howev": 14, "re": 14, "go": 14, "fairgp": 14, "not_whit": 14, "fortun": 14, "race_whit": 14, "7": 14, "n_job": 14, "backend": 14, "sequentialbackend": 14, "concurr": 14, "worker": 14, "elaps": 14, "remain": 14, "9": 14, "model_se": 14, "accuracy_race_white_1": 14, "accuracy_race_white_0": 14, "race_white_1": 14, "tpr_race_white_1": 14, "tpr_race_white_0": 14, "prob_pos_race_white_1": 14, "prob_pos_race_white_0": 14, "split_id": 14, "no_transform": 14, "851078": 14, "925891": 14, "843309": 14, "899126": 14, "937920": 14, "055818": 14, "613392": 14, "621495": 14, "986962": 14, "008103": 14, "216286": 14, "142176": 14, "657354": 14, "074109": 14, "851962": 14, "914970": 14, "844464": 14, "898332": 14, "940036": 14, "053868": 14, "619746": 14, "593458": 14, "957583": 14, "026288": 14, "218469": 14, "133439": 14, "610792": 14, "085030": 14, "amp": 14, "850636": 14, "931427": 14, "843565": 14, "894361": 14, "943205": 14, "050795": 14, "612414": 14, "985389": 14, "009081": 14, "215515": 14, "146942": 14, "681818": 14, "068573": 14, "2410": 14, "841902": 14, "835231": 14, "884365": 14, "944442": 14, "049134": 14, "570395": 14, "553922": 14, "971119": 14, "016474": 14, "202124": 14, "133550": 14, "660737": 14, "843449": 14, "929112": 14, "836382": 14, "888436": 14, "941409": 14, "052054": 14, "572324": 14, "558824": 14, "976411": 14, "013500": 14, "201996": 14, "131107": 14, "649061": 14, "070888": 14, "844002": 14, "932603": 14, "837150": 14, "887622": 14, "943138": 14, "050472": 14, "581003": 14, "578431": 14, "995574": 14, "002572": 14, "205833": 14, "138436": 14, "672566": 14, "067397": 14, "uniform": 14, "849309": 14, "923988": 14, "841896": 14, "895155": 14, "940503": 14, "053259": 14, "615836": 14, "612150": 14, "994014": 14, "003686": 14, "218983": 14, "142971": 14, "652885": 14, "076012": 14, "850083": 14, "929254": 14, "842538": 14, "896743": 14, "939553": 14, "054206": 14, "607038": 14, "616822": 14, "984138": 14, "009784": 14, "213717": 14, "668972": 14, "070746": 14, "925529": 14, "843437": 14, "942225": 14, "051718": 14, "217442": 14, "657513": 14, "074471": 14, "842565": 14, "936138": 14, "835871": 14, "885179": 14, "944295": 14, "049309": 14, "568627": 14, "996901": 14, "001768": 14, "201484": 14, "137622": 14, "683043": 14, "063862": 14, "840575": 14, "946316": 14, "833440": 14, "885993": 14, "940684": 14, "052554": 14, "557377": 14, "588235": 14, "947541": 14, "030858": 14, "197007": 14, "143322": 14, "727501": 14, "053684": 14, "groupbi": 14, "level": [14, 15], "agg": 14, "846600": 14, "005707": 14, "943260": 14, "001464": 14, "995457": 14, "002041": 14, "670278": 14, "018052": 14, "845937": 14, "004769": 14, "942399": 14, "002682": 14, "667964": 14, "021325": 14, "845329": 14, "006723": 14, "940118": 14, "000800": 14, "965839": 14, "025878": 14, "698237": 14, "041386": 14, "847319": 14, "004691": 14, "943171": 14, "000048": 14, "990481": 14, "007202": 14, "677192": 14, "006542": 14, "846490": 14, "006489": 14, "941181": 14, "004611": 14, "979040": 14, "011203": 14, "659046": 14, "002392": 14, "847706": 14, "006020": 14, "940723": 14, "000971": 14, "966997": 14, "013314": 14, "629927": 14, "027060": 14, "There": 15, "break": 15, "version": 15, "longer": 15, "directrli": 15, "etc": 15, "helper": 15, "visual": 15}, "objects": {"": [[10, 0, 0, "-", "ethicml"]], "ethicml": [[1, 0, 0, "-", "data"], [2, 0, 0, "-", "metrics"], [4, 0, 0, "-", "models"], [8, 0, 0, "-", "plot"], [11, 0, 0, "-", "preprocessing"], [9, 0, 0, "-", "run"], [12, 0, 0, "-", "utility"]], "ethicml.data": [[1, 1, 1, "", "AcsEmployment"], [1, 1, 1, "", "AcsIncome"], [1, 1, 1, "", "Admissions"], [1, 1, 1, "", "AdmissionsSplits"], [1, 1, 1, "", "Adult"], [1, 1, 1, "", "AdultSplits"], [1, 1, 1, "", "CSVDataset"], [1, 1, 1, "", "CSVDatasetDC"], [1, 1, 1, "", "Compas"], [1, 1, 1, "", "CompasSplits"], [1, 1, 1, "", "Credit"], [1, 1, 1, "", "CreditSplits"], [1, 1, 1, "", "Crime"], [1, 1, 1, "", "CrimeSplits"], [1, 1, 1, "", "Dataset"], [1, 1, 1, "", "FeatureOrder"], [1, 1, 1, "", "FeatureSplit"], [1, 1, 1, "", "German"], [1, 1, 1, "", "GermanSplits"], [1, 1, 1, "", "Health"], [1, 1, 1, "", "HealthSplits"], [1, 1, 1, "", "LabelGroup"], [1, 1, 1, "", "LabelSpecsPair"], [1, 1, 1, "", "Law"], [1, 1, 1, "", "LawSplits"], [1, 1, 1, "", "LegacyDataset"], [1, 1, 1, "", "Lipton"], [1, 1, 1, "", "NonBinaryToy"], [1, 1, 1, "", "Nursery"], [1, 1, 1, "", "NurserySplits"], [1, 1, 1, "", "Sqf"], [1, 1, 1, "", "SqfSplits"], [1, 1, 1, "", "StaticCSVDataset"], [1, 1, 1, "", "Synthetic"], [1, 1, 1, "", "SyntheticScenarios"], [1, 1, 1, "", "SyntheticTargets"], [1, 1, 1, "", "Toy"], [1, 5, 1, "", "available_tabular"], [1, 5, 1, "", "create_data_obj"], [1, 5, 1, "", "filter_features_by_prefixes"], [1, 5, 1, "", "flatten_dict"], [1, 5, 1, "", "from_dummies"], [1, 5, 1, "", "get_dataset_obj_by_name"], [1, 5, 1, "", "get_discrete_features"], [1, 5, 1, "", "group_disc_feat_indices"], [1, 5, 1, "", "label_spec_to_feature_list"], [1, 5, 1, "", "load_data"], [1, 5, 1, "", "one_hot_encode_and_combine"], [1, 5, 1, "", "reduce_feature_group"], [1, 5, 1, "", "single_col_spec"], [1, 5, 1, "", "spec_from_binary_cols"]], "ethicml.data.AcsEmployment": [[1, 2, 1, "", "__len__"], [1, 2, 1, "", "cat_lookup"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "features_to_remove"], [1, 2, 1, "", "load"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"]], "ethicml.data.AcsIncome": [[1, 2, 1, "", "__len__"], [1, 2, 1, "", "cat_lookup"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "features_to_remove"], [1, 2, 1, "", "load"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"]], "ethicml.data.Admissions": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Adult": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.CSVDataset": [[1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.CSVDatasetDC": [[1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Compas": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Credit": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Crime": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Dataset": [[1, 2, 1, "", "__len__"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 2, 1, "", "load"], [1, 3, 1, "", "name"]], "ethicml.data.FeatureOrder": [[1, 4, 1, "", "cont_first"], [1, 4, 1, "", "disc_first"]], "ethicml.data.FeatureSplit": [[1, 2, 1, "", "__len__"], [1, 2, 1, "", "clear"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "fromkeys"], [1, 2, 1, "", "get"], [1, 2, 1, "", "items"], [1, 2, 1, "", "keys"], [1, 2, 1, "", "pop"], [1, 2, 1, "", "popitem"], [1, 2, 1, "", "setdefault"], [1, 2, 1, "", "update"], [1, 2, 1, "", "values"]], "ethicml.data.German": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Health": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.LabelGroup": [[1, 2, 1, "", "__len__"], [1, 4, 1, "", "columns"], [1, 2, 1, "", "count"], [1, 2, 1, "", "index"], [1, 4, 1, "", "multiplier"]], "ethicml.data.Law": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.LegacyDataset": [[1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Lipton": [[1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.NonBinaryToy": [[1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Nursery": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Sqf": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.StaticCSVDataset": [[1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Synthetic": [[1, 4, 1, "", "Scenarios"], [1, 4, 1, "", "Targets"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Toy": [[1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.util": [[1, 4, 1, "", "DiscFeatureGroups"], [1, 4, 1, "", "LabelSpec"]], "ethicml.metrics": [[2, 1, 1, "", "AS"], [2, 1, 1, "", "AbsCV"], [2, 1, 1, "", "Accuracy"], [2, 1, 1, "", "AverageOddsDiff"], [2, 1, 1, "", "BCR"], [2, 1, 1, "", "BalancedAccuracy"], [2, 1, 1, "", "CV"], [2, 1, 1, "", "CfmMetric"], [2, 1, 1, "", "DependencyTarget"], [2, 1, 1, "", "F1"], [2, 1, 1, "", "FNR"], [2, 1, 1, "", "FPR"], [2, 1, 1, "", "Hsic"], [2, 6, 1, "", "LabelOutOfBoundsError"], [2, 1, 1, "", "Metric"], [2, 6, 1, "", "MetricNotApplicableError"], [2, 1, 1, "", "MetricStaticName"], [2, 1, 1, "", "NMI"], [2, 1, 1, "", "NPV"], [2, 1, 1, "", "PPV"], [2, 1, 1, "", "PerSens"], [2, 1, 1, "", "ProbNeg"], [2, 1, 1, "", "ProbOutcome"], [2, 1, 1, "", "ProbPos"], [2, 1, 1, "", "RenyiCorrelation"], [2, 1, 1, "", "RobustAccuracy"], [2, 1, 1, "", "SklearnMetric"], [2, 1, 1, "", "TNR"], [2, 1, 1, "", "TPR"], [2, 1, 1, "", "Theil"], [2, 1, 1, "", "Yanovich"], [2, 5, 1, "", "aggregate_over_sens"], [2, 5, 1, "", "diff_per_sens"], [2, 5, 1, "", "max_per_sens"], [2, 5, 1, "", "metric_per_sens"], [2, 5, 1, "", "min_per_sens"], [2, 5, 1, "", "per_sens_metrics_check"], [2, 5, 1, "", "ratio_per_sens"], [2, 5, 1, "", "run_metrics"]], "ethicml.metrics.AS": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.AbsCV": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.Accuracy": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.AverageOddsDiff": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.BCR": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.BalancedAccuracy": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.CV": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.CfmMetric": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.F1": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.FNR": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.FPR": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.Hsic": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.LabelOutOfBoundsError": [[2, 2, 1, "", "with_traceback"]], "ethicml.metrics.Metric": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.MetricNotApplicableError": [[2, 2, 1, "", "with_traceback"]], "ethicml.metrics.MetricStaticName": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.NMI": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.NPV": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.PPV": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.PerSens": [[2, 4, 1, "", "ALL"], [2, 4, 1, "", "DIFFS"], [2, 4, 1, "", "DIFFS_RATIOS"], [2, 4, 1, "", "MAX"], [2, 4, 1, "", "MIN"], [2, 4, 1, "", "MIN_MAX"], [2, 4, 1, "", "RATIOS"]], "ethicml.metrics.ProbNeg": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.ProbOutcome": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.ProbPos": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.RenyiCorrelation": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.RobustAccuracy": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.SklearnMetric": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.TNR": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.TPR": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.Theil": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.Yanovich": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.models": [[3, 0, 0, "-", "algorithm_base"], [5, 0, 0, "-", "inprocess"], [6, 0, 0, "-", "postprocess"], [7, 0, 0, "-", "preprocess"]], "ethicml.models.algorithm_base": [[3, 1, 1, "", "Algorithm"], [3, 1, 1, "", "SubprocessAlgorithmMixin"]], "ethicml.models.algorithm_base.Algorithm": [[3, 3, 1, "", "name"]], "ethicml.models.algorithm_base.SubprocessAlgorithmMixin": [[3, 2, 1, "", "call_script"], [3, 3, 1, "", "executable"]], "ethicml.models.inprocess": [[5, 0, 0, "-", "agarwal_reductions"], [5, 0, 0, "-", "fairness_wo_demographics"], [5, 0, 0, "-", "in_algorithm"], [5, 0, 0, "-", "installed_model"], [5, 0, 0, "-", "kamiran"], [5, 0, 0, "-", "kamishima"], [5, 0, 0, "-", "logistic_regression"], [5, 0, 0, "-", "majority"], [5, 0, 0, "-", "manual"], [5, 0, 0, "-", "mlp"], [5, 0, 0, "-", "oracle"], [5, 0, 0, "-", "svm"], [5, 0, 0, "-", "zafar"]], "ethicml.models.inprocess.agarwal_reductions": [[5, 1, 1, "", "Agarwal"]], "ethicml.models.inprocess.agarwal_reductions.Agarwal": [[5, 2, 1, "", "call_script"], [5, 3, 1, "", "executable"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "model_path"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.fairness_wo_demographics": [[5, 1, 1, "", "DRO"]], "ethicml.models.inprocess.fairness_wo_demographics.DRO": [[5, 2, 1, "", "call_script"], [5, 3, 1, "", "executable"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "model_path"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.in_algorithm": [[5, 1, 1, "", "InAlgorithm"], [5, 1, 1, "", "InAlgorithmDC"], [5, 1, 1, "", "InAlgorithmNoParams"]], "ethicml.models.inprocess.in_algorithm.InAlgorithm": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.in_algorithm.InAlgorithmDC": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.in_algorithm.InAlgorithmNoParams": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.installed_model": [[5, 1, 1, "", "InstalledModel"]], "ethicml.models.inprocess.installed_model.InstalledModel": [[5, 2, 1, "", "call_script"], [5, 3, 1, "", "executable"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.kamiran": [[5, 1, 1, "", "Reweighting"], [5, 5, 1, "", "compute_instance_weights"]], "ethicml.models.inprocess.kamiran.Reweighting": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.kamishima": [[5, 1, 1, "", "Kamishima"]], "ethicml.models.inprocess.kamishima.Kamishima": [[5, 2, 1, "", "call_script"], [5, 3, 1, "", "executable"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.logistic_regression": [[5, 1, 1, "", "LR"], [5, 1, 1, "", "LRCV"]], "ethicml.models.inprocess.logistic_regression.LR": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.logistic_regression.LRCV": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.majority": [[5, 1, 1, "", "Majority"]], "ethicml.models.inprocess.majority.Majority": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.manual": [[5, 1, 1, "", "Corels"]], "ethicml.models.inprocess.manual.Corels": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.mlp": [[5, 1, 1, "", "MLP"]], "ethicml.models.inprocess.mlp.MLP": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.oracle": [[5, 1, 1, "", "DPOracle"], [5, 1, 1, "", "Oracle"]], "ethicml.models.inprocess.oracle.DPOracle": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.oracle.Oracle": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.svm": [[5, 1, 1, "", "SVM"]], "ethicml.models.inprocess.svm.SVM": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.zafar": [[5, 1, 1, "", "ZafarAccuracy"], [5, 1, 1, "", "ZafarBaseline"], [5, 1, 1, "", "ZafarEqOdds"], [5, 1, 1, "", "ZafarEqOpp"], [5, 1, 1, "", "ZafarFairness"]], "ethicml.models.inprocess.zafar.ZafarAccuracy": [[5, 2, 1, "", "call_script"], [5, 3, 1, "", "executable"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.zafar.ZafarBaseline": [[5, 2, 1, "", "call_script"], [5, 3, 1, "", "executable"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.zafar.ZafarEqOdds": [[5, 2, 1, "", "call_script"], [5, 3, 1, "", "executable"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.zafar.ZafarEqOpp": [[5, 2, 1, "", "call_script"], [5, 3, 1, "", "executable"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.zafar.ZafarFairness": [[5, 2, 1, "", "call_script"], [5, 3, 1, "", "executable"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.postprocess": [[6, 0, 0, "-", "dp_flip"], [6, 0, 0, "-", "hardt"], [6, 0, 0, "-", "post_algorithm"]], "ethicml.models.postprocess.dp_flip": [[6, 1, 1, "", "DPFlip"]], "ethicml.models.postprocess.dp_flip.DPFlip": [[6, 2, 1, "", "fit"], [6, 3, 1, "", "name"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "run"]], "ethicml.models.postprocess.hardt": [[6, 1, 1, "", "Hardt"]], "ethicml.models.postprocess.hardt.Hardt": [[6, 2, 1, "", "fit"], [6, 3, 1, "", "name"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "run"]], "ethicml.models.postprocess.post_algorithm": [[6, 1, 1, "", "PostAlgorithm"]], "ethicml.models.postprocess.post_algorithm.PostAlgorithm": [[6, 2, 1, "", "fit"], [6, 3, 1, "", "name"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "run"]], "ethicml.models.preprocess": [[7, 0, 0, "-", "beutel"], [7, 0, 0, "-", "calders"], [7, 0, 0, "-", "pre_algorithm"], [7, 0, 0, "-", "upsampler"], [7, 0, 0, "-", "vfae"], [7, 0, 0, "-", "zemel"]], "ethicml.models.preprocess.beutel": [[7, 1, 1, "", "Beutel"]], "ethicml.models.preprocess.beutel.Beutel": [[7, 2, 1, "", "call_script"], [7, 3, 1, "", "executable"], [7, 2, 1, "", "fit"], [7, 3, 1, "", "model_path"], [7, 3, 1, "", "name"], [7, 3, 1, "", "out_size"], [7, 2, 1, "", "run"], [7, 2, 1, "", "run_test"], [7, 2, 1, "", "transform"]], "ethicml.models.preprocess.calders": [[7, 1, 1, "", "Calders"]], "ethicml.models.preprocess.calders.Calders": [[7, 2, 1, "", "fit"], [7, 3, 1, "", "name"], [7, 3, 1, "", "out_size"], [7, 2, 1, "", "run"], [7, 2, 1, "", "run_test"], [7, 2, 1, "", "transform"]], "ethicml.models.preprocess.pre_algorithm": [[7, 1, 1, "", "PreAlgorithm"]], "ethicml.models.preprocess.pre_algorithm.PreAlgorithm": [[7, 2, 1, "", "fit"], [7, 3, 1, "", "name"], [7, 3, 1, "", "out_size"], [7, 2, 1, "", "run"], [7, 2, 1, "", "run_test"], [7, 2, 1, "", "transform"]], "ethicml.models.preprocess.upsampler": [[7, 1, 1, "", "UpsampleStrategy"], [7, 1, 1, "", "Upsampler"]], "ethicml.models.preprocess.upsampler.Upsampler": [[7, 2, 1, "", "fit"], [7, 3, 1, "", "name"], [7, 3, 1, "", "out_size"], [7, 2, 1, "", "run"], [7, 2, 1, "", "run_test"], [7, 2, 1, "", "transform"]], "ethicml.models.preprocess.vfae": [[7, 1, 1, "", "VFAE"]], "ethicml.models.preprocess.vfae.VFAE": [[7, 2, 1, "", "call_script"], [7, 3, 1, "", "executable"], [7, 2, 1, "", "fit"], [7, 3, 1, "", "model_path"], [7, 3, 1, "", "name"], [7, 3, 1, "", "out_size"], [7, 2, 1, "", "run"], [7, 2, 1, "", "run_test"], [7, 2, 1, "", "transform"]], "ethicml.models.preprocess.zemel": [[7, 1, 1, "", "Zemel"]], "ethicml.models.preprocess.zemel.Zemel": [[7, 2, 1, "", "call_script"], [7, 3, 1, "", "executable"], [7, 2, 1, "", "fit"], [7, 3, 1, "", "model_path"], [7, 3, 1, "", "name"], [7, 3, 1, "", "out_size"], [7, 2, 1, "", "run"], [7, 2, 1, "", "run_test"], [7, 2, 1, "", "transform"]], "ethicml.plot": [[8, 5, 1, "", "plot_results"], [8, 5, 1, "", "save_2d_plot"], [8, 5, 1, "", "save_jointplot"], [8, 5, 1, "", "save_label_plot"], [8, 5, 1, "", "save_multijointplot"], [8, 5, 1, "", "single_plot"]], "ethicml.preprocessing": [[11, 1, 1, "", "BalancedTestSplit"], [11, 1, 1, "", "BiasedDebiasedSubsets"], [11, 1, 1, "", "BiasedSubset"], [11, 1, 1, "", "DataSplitter"], [11, 1, 1, "", "LabelBinarizer"], [11, 1, 1, "", "ProportionalSplit"], [11, 1, 1, "", "RandomSplit"], [11, 1, 1, "", "ScalerType"], [11, 1, 1, "", "SequentialSplit"], [11, 5, 1, "", "bin_cont_feats"], [11, 5, 1, "", "dataset_from_cond"], [11, 5, 1, "", "domain_split"], [11, 5, 1, "", "get_biased_and_debiased_subsets"], [11, 5, 1, "", "get_biased_subset"], [11, 5, 1, "", "query_dt"], [11, 5, 1, "", "scale_continuous"], [11, 5, 1, "", "train_test_split"]], "ethicml.preprocessing.LabelBinarizer": [[11, 2, 1, "", "adjust"], [11, 2, 1, "", "post"], [11, 2, 1, "", "post_only_labels"]], "ethicml.preprocessing.ScalerType": [[11, 2, 1, "", "fit"], [11, 2, 1, "", "fit_transform"], [11, 2, 1, "", "inverse_transform"], [11, 2, 1, "", "transform"]], "ethicml.run": [[9, 1, 1, "", "CVResults"], [9, 1, 1, "", "CrossValidator"], [9, 5, 1, "", "arrange_in_parallel"], [9, 5, 1, "", "evaluate_models"], [9, 5, 1, "", "load_results"], [9, 5, 1, "", "run_in_parallel"]], "ethicml.run.CVResults": [[9, 2, 1, "", "best"], [9, 2, 1, "", "best_hyper_params"], [9, 2, 1, "", "get_best_in_top_k"], [9, 2, 1, "", "get_best_result"]], "ethicml.run.CrossValidator": [[9, 2, 1, "", "run"], [9, 2, 1, "", "run_async"]], "ethicml.utility": [[12, 1, 1, "", "Activation"], [12, 1, 1, "", "ClassifierType"], [12, 1, 1, "", "DataTuple"], [12, 1, 1, "", "FairnessType"], [12, 1, 1, "", "Heaviside"], [12, 1, 1, "", "KernelType"], [12, 1, 1, "", "LabelTuple"], [12, 1, 1, "", "ModelType"], [12, 1, 1, "", "Prediction"], [12, 1, 1, "", "ResultsAggregator"], [12, 1, 1, "", "SoftPrediction"], [12, 1, 1, "", "SubgroupTuple"], [12, 1, 1, "", "TrainTestPair"], [12, 1, 1, "", "TrainValPair"], [12, 5, 1, "", "aggregate_results"], [12, 5, 1, "", "concat"], [12, 5, 1, "", "filter_and_map_results"], [12, 5, 1, "", "filter_results"], [12, 5, 1, "", "make_results"], [12, 5, 1, "", "map_over_results_index"], [12, 5, 1, "", "shuffle_df"], [12, 5, 1, "", "undo_one_hot"]], "ethicml.utility.Activation": [[12, 2, 1, "", "apply"], [12, 2, 1, "", "get_name"]], "ethicml.utility.ClassifierType": [[12, 4, 1, "", "gbt"], [12, 4, 1, "", "lr"], [12, 4, 1, "", "svm"]], "ethicml.utility.DataTuple": [[12, 2, 1, "", "__len__"], [12, 2, 1, "", "apply_to_joined_df"], [12, 2, 1, "", "from_df"], [12, 2, 1, "", "from_file"], [12, 2, 1, "", "get_n_samples"], [12, 2, 1, "", "get_s_subset"], [12, 2, 1, "", "remove_y"], [12, 2, 1, "", "rename"], [12, 2, 1, "", "replace"], [12, 2, 1, "", "replace_data"], [12, 3, 1, "", "s"], [12, 2, 1, "", "save_to_file"], [12, 3, 1, "", "x"], [12, 3, 1, "", "y"]], "ethicml.utility.FairnessType": [[12, 4, 1, "", "dp"], [12, 4, 1, "", "eq_odds"], [12, 4, 1, "", "eq_opp"]], "ethicml.utility.Heaviside": [[12, 2, 1, "", "apply"], [12, 2, 1, "", "get_name"]], "ethicml.utility.KernelType": [[12, 4, 1, "", "linear"], [12, 4, 1, "", "poly"], [12, 4, 1, "", "rbf"], [12, 4, 1, "", "sigmoid"]], "ethicml.utility.LabelTuple": [[12, 2, 1, "", "__len__"], [12, 2, 1, "", "from_df"], [12, 2, 1, "", "from_np"], [12, 2, 1, "", "get_n_samples"], [12, 2, 1, "", "get_s_subset"], [12, 2, 1, "", "rename"], [12, 2, 1, "", "replace"], [12, 2, 1, "", "replace_data"], [12, 3, 1, "", "s"], [12, 3, 1, "", "y"]], "ethicml.utility.ModelType": [[12, 4, 1, "", "deep"], [12, 4, 1, "", "linear"]], "ethicml.utility.Prediction": [[12, 2, 1, "", "__len__"], [12, 2, 1, "", "from_file"], [12, 2, 1, "", "from_np"], [12, 2, 1, "", "get_s_subset"], [12, 3, 1, "", "hard"], [12, 3, 1, "", "info"], [12, 2, 1, "", "save_to_file"]], "ethicml.utility.ResultsAggregator": [[12, 2, 1, "", "append_df"], [12, 2, 1, "", "append_from_csv"], [12, 3, 1, "", "results"], [12, 2, 1, "", "save_as_csv"]], "ethicml.utility.SoftPrediction": [[12, 2, 1, "", "__len__"], [12, 2, 1, "", "from_file"], [12, 2, 1, "", "from_np"], [12, 2, 1, "", "get_s_subset"], [12, 3, 1, "", "hard"], [12, 3, 1, "", "info"], [12, 2, 1, "", "save_to_file"], [12, 3, 1, "", "soft"]], "ethicml.utility.SubgroupTuple": [[12, 2, 1, "", "__len__"], [12, 2, 1, "", "from_df"], [12, 2, 1, "", "from_file"], [12, 2, 1, "", "get_n_samples"], [12, 2, 1, "", "get_s_subset"], [12, 2, 1, "", "rename"], [12, 2, 1, "", "replace"], [12, 2, 1, "", "replace_data"], [12, 3, 1, "", "s"], [12, 2, 1, "", "save_to_file"], [12, 3, 1, "", "x"]], "ethicml.utility.TrainTestPair": [[12, 2, 1, "", "__len__"], [12, 2, 1, "", "count"], [12, 2, 1, "", "index"], [12, 4, 1, "", "test"], [12, 4, 1, "", "train"]], "ethicml.utility.TrainValPair": [[12, 2, 1, "", "__len__"], [12, 2, 1, "", "count"], [12, 2, 1, "", "index"], [12, 4, 1, "", "test"], [12, 4, 1, "", "train"]], "ethicml.utility.data_structures": [[12, 4, 1, "", "EvalTuple"], [12, 4, 1, "", "HyperParamType"], [12, 4, 1, "", "HyperParamValue"], [12, 1, 1, "", "Results"], [12, 4, 1, "", "TestTuple"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"miss": 0, "page": 0, "ethicml": [1, 2, 4, 8, 9, 10, 13], "data": [1, 11, 14], "alias": [1, 12], "metric": 2, "algorithm": [3, 5, 6, 7], "base": [3, 5, 6, 7], "model": [4, 5, 14], "inprocess": 5, "agarw": 5, "distribution": 5, "robust": 5, "optim": 5, "instal": [5, 14], "kamiran": 5, "kamishima": 5, "logist": 5, "regress": 5, "major": 5, "manual": 5, "method": 5, "mlp": 5, "oracl": 5, "svm": 5, "zafar": 5, "postprocess": 6, "dp": 6, "flip": 6, "hardt": 6, "preprocess": [7, 11], "beutel": 7, "calder": 7, "upsampl": 7, "vfae": 7, "zemel": 7, "plot": 8, "run": 9, "util": 12, "welcom": 13, "": 13, "document": 13, "exampl": 13, "tabl": 13, "content": 13, "api": 13, "tutori": 13, "indic": 13, "runn": 14, "experi": 14, "adult": 14, "dataset": 14, "load": 14, "evalu": 14, "some": 14, "migrat": 15, "guid": 15, "1": 15, "0": 15, "modular": 15, "import": 15}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Missing Page": [[0, "missing-page"]], "ethicml.data": [[1, "module-ethicml.data"]], "Aliases": [[1, "aliases"], [12, "aliases"]], "ethicml.metrics": [[2, "module-ethicml.metrics"]], "Algorithms base": [[3, "module-ethicml.models.algorithm_base"]], "ethicml.models": [[4, "module-ethicml.models"]], "Inprocess algorithms": [[5, "module-ethicml.models.inprocess"]], "Inprocess base": [[5, "module-ethicml.models.inprocess.in_algorithm"]], "Agarwal": [[5, "module-ethicml.models.inprocess.agarwal_reductions"]], "Distributionally-robust optimization": [[5, "module-ethicml.models.inprocess.fairness_wo_demographics"]], "Base for installed model": [[5, "module-ethicml.models.inprocess.installed_model"]], "Kamiran": [[5, "module-ethicml.models.inprocess.kamiran"]], "Kamishima": [[5, "module-ethicml.models.inprocess.kamishima"]], "Logistic regression": [[5, "module-ethicml.models.inprocess.logistic_regression"]], "Majority": [[5, "module-ethicml.models.inprocess.majority"]], "Manual methods": [[5, "module-ethicml.models.inprocess.manual"]], "MLP": [[5, "module-ethicml.models.inprocess.mlp"]], "Oracle": [[5, "module-ethicml.models.inprocess.oracle"]], "SVM": [[5, "module-ethicml.models.inprocess.svm"]], "Zafar": [[5, "module-ethicml.models.inprocess.zafar"]], "Postprocess algorithms": [[6, "module-ethicml.models.postprocess"]], "Postprocess base": [[6, "module-ethicml.models.postprocess.post_algorithm"]], "DP Flip": [[6, "module-ethicml.models.postprocess.dp_flip"]], "Hardt": [[6, "module-ethicml.models.postprocess.hardt"]], "Preprocess algorithms": [[7, "module-ethicml.models.preprocess"]], "Preprocess base": [[7, "module-ethicml.models.preprocess.pre_algorithm"]], "Beutel": [[7, "module-ethicml.models.preprocess.beutel"]], "Calders": [[7, "module-ethicml.models.preprocess.calders"]], "Upsampling": [[7, "module-ethicml.models.preprocess.upsampler"]], "VFAE": [[7, "module-ethicml.models.preprocess.vfae"]], "Zemel": [[7, "module-ethicml.models.preprocess.zemel"]], "ethicml.plot": [[8, "module-ethicml.plot"]], "ethicml.run": [[9, "module-ethicml.run"]], "ethicml": [[10, "module-ethicml"]], "Data preprocessing": [[11, "module-ethicml.preprocessing"]], "Utils": [[12, "module-ethicml.utility"]], "Welcome to EthicML\u2019s documentation!": [[13, "welcome-to-ethicml-s-documentation"]], "Example": [[13, "example"]], "Table of contents": [[13, "table-of-contents"]], "API": [[13, null]], "Tutorials": [[13, null]], "Indices and tables": [[13, "indices-and-tables"]], "Runnning experiments on the Adult dataset": [[14, "Runnning-experiments-on-the-Adult-dataset"]], "Installation": [[14, "Installation"]], "Loading the data": [[14, "Loading-the-data"]], "Evaluating some models": [[14, "Evaluating-some-models"]], "Migration guide to 1.0": [[15, "migration-guide-to-1-0"]], "Modularization of imports": [[15, "modularization-of-imports"]]}, "indexentries": {"acsemployment (class in ethicml.data)": [[1, "ethicml.data.AcsEmployment"]], "acsincome (class in ethicml.data)": [[1, "ethicml.data.AcsIncome"]], "admissions (class in ethicml.data)": [[1, "ethicml.data.Admissions"]], "admissionssplits (class in ethicml.data)": [[1, "ethicml.data.AdmissionsSplits"]], "adult (class in ethicml.data)": [[1, "ethicml.data.Adult"]], "adultsplits (class in ethicml.data)": [[1, "ethicml.data.AdultSplits"]], "csvdataset (class in ethicml.data)": [[1, "ethicml.data.CSVDataset"]], "csvdatasetdc (class in ethicml.data)": [[1, "ethicml.data.CSVDatasetDC"]], "compas (class in ethicml.data)": [[1, "ethicml.data.Compas"]], "compassplits (class in ethicml.data)": [[1, "ethicml.data.CompasSplits"]], "credit (class in ethicml.data)": [[1, "ethicml.data.Credit"]], "creditsplits (class in ethicml.data)": [[1, "ethicml.data.CreditSplits"]], "crime (class in ethicml.data)": [[1, "ethicml.data.Crime"]], "crimesplits (class in ethicml.data)": [[1, "ethicml.data.CrimeSplits"]], "dataset (class in ethicml.data)": [[1, "ethicml.data.Dataset"]], "discfeaturegroups (in module ethicml.data.util)": [[1, "ethicml.data.util.DiscFeatureGroups"]], "featureorder (class in ethicml.data)": [[1, "ethicml.data.FeatureOrder"]], "featuresplit (class in ethicml.data)": [[1, "ethicml.data.FeatureSplit"]], "german (class in ethicml.data)": [[1, "ethicml.data.German"]], "germansplits (class in ethicml.data)": [[1, "ethicml.data.GermanSplits"]], "health (class in ethicml.data)": [[1, "ethicml.data.Health"]], "healthsplits (class in ethicml.data)": [[1, "ethicml.data.HealthSplits"]], "labelgroup (class in ethicml.data)": [[1, "ethicml.data.LabelGroup"]], "labelspec (in module ethicml.data.util)": [[1, "ethicml.data.util.LabelSpec"]], "labelspecspair (class in ethicml.data)": [[1, "ethicml.data.LabelSpecsPair"]], "law (class in ethicml.data)": [[1, "ethicml.data.Law"]], "lawsplits (class in ethicml.data)": [[1, "ethicml.data.LawSplits"]], "legacydataset (class in ethicml.data)": [[1, "ethicml.data.LegacyDataset"]], "lipton (class in ethicml.data)": [[1, "ethicml.data.Lipton"]], "nonbinarytoy (class in ethicml.data)": [[1, "ethicml.data.NonBinaryToy"]], "nursery (class in ethicml.data)": [[1, "ethicml.data.Nursery"]], "nurserysplits (class in ethicml.data)": [[1, "ethicml.data.NurserySplits"]], "scenarios (synthetic attribute)": [[1, "ethicml.data.Synthetic.Scenarios"]], "splits (admissions attribute)": [[1, "ethicml.data.Admissions.Splits"]], "splits (adult attribute)": [[1, "ethicml.data.Adult.Splits"]], "splits (compas attribute)": [[1, "ethicml.data.Compas.Splits"]], "splits (credit attribute)": [[1, "ethicml.data.Credit.Splits"]], "splits (crime attribute)": [[1, "ethicml.data.Crime.Splits"]], "splits (german attribute)": [[1, "ethicml.data.German.Splits"]], "splits (health attribute)": [[1, "ethicml.data.Health.Splits"]], "splits (law attribute)": [[1, "ethicml.data.Law.Splits"]], "splits (nursery attribute)": [[1, "ethicml.data.Nursery.Splits"]], "splits (sqf attribute)": [[1, "ethicml.data.Sqf.Splits"]], "sqf (class in ethicml.data)": [[1, "ethicml.data.Sqf"]], "sqfsplits (class in ethicml.data)": [[1, "ethicml.data.SqfSplits"]], "staticcsvdataset (class in ethicml.data)": [[1, "ethicml.data.StaticCSVDataset"]], "synthetic (class in ethicml.data)": [[1, "ethicml.data.Synthetic"]], "syntheticscenarios (class in ethicml.data)": [[1, "ethicml.data.SyntheticScenarios"]], "synthetictargets (class in ethicml.data)": [[1, "ethicml.data.SyntheticTargets"]], "targets (synthetic attribute)": [[1, "ethicml.data.Synthetic.Targets"]], "toy (class in ethicml.data)": [[1, "ethicml.data.Toy"]], "__len__() (acsemployment method)": [[1, "ethicml.data.AcsEmployment.__len__"]], "__len__() (acsincome method)": [[1, "ethicml.data.AcsIncome.__len__"]], "__len__() (admissions method)": [[1, "ethicml.data.Admissions.__len__"]], "__len__() (adult method)": [[1, "ethicml.data.Adult.__len__"]], "__len__() (csvdataset method)": [[1, "ethicml.data.CSVDataset.__len__"]], "__len__() (csvdatasetdc method)": [[1, "ethicml.data.CSVDatasetDC.__len__"]], "__len__() (compas method)": [[1, "ethicml.data.Compas.__len__"]], "__len__() (credit method)": [[1, "ethicml.data.Credit.__len__"]], "__len__() (crime method)": [[1, "ethicml.data.Crime.__len__"]], "__len__() (dataset method)": [[1, "ethicml.data.Dataset.__len__"]], "__len__() (featuresplit method)": [[1, "ethicml.data.FeatureSplit.__len__"]], "__len__() (german method)": [[1, "ethicml.data.German.__len__"]], "__len__() (health method)": [[1, "ethicml.data.Health.__len__"]], "__len__() (labelgroup method)": [[1, "ethicml.data.LabelGroup.__len__"]], "__len__() (law method)": [[1, "ethicml.data.Law.__len__"]], "__len__() (legacydataset method)": [[1, "ethicml.data.LegacyDataset.__len__"]], "__len__() (lipton method)": [[1, "ethicml.data.Lipton.__len__"]], "__len__() (nonbinarytoy method)": [[1, "ethicml.data.NonBinaryToy.__len__"]], "__len__() (nursery method)": [[1, "ethicml.data.Nursery.__len__"]], "__len__() (sqf method)": [[1, "ethicml.data.Sqf.__len__"]], "__len__() (staticcsvdataset method)": [[1, "ethicml.data.StaticCSVDataset.__len__"]], "__len__() (synthetic method)": [[1, "ethicml.data.Synthetic.__len__"]], "__len__() (toy method)": [[1, "ethicml.data.Toy.__len__"]], "available_tabular() (in module ethicml.data)": [[1, "ethicml.data.available_tabular"]], "cat_lookup() (acsemployment static method)": [[1, "ethicml.data.AcsEmployment.cat_lookup"]], "cat_lookup() (acsincome static method)": [[1, "ethicml.data.AcsIncome.cat_lookup"]], "class_labels (acsemployment property)": [[1, "ethicml.data.AcsEmployment.class_labels"]], "class_labels (acsincome property)": [[1, "ethicml.data.AcsIncome.class_labels"]], "class_labels (admissions property)": [[1, "ethicml.data.Admissions.class_labels"]], "class_labels (adult property)": [[1, "ethicml.data.Adult.class_labels"]], "class_labels (csvdataset property)": [[1, "ethicml.data.CSVDataset.class_labels"]], "class_labels (csvdatasetdc property)": [[1, "ethicml.data.CSVDatasetDC.class_labels"]], "class_labels (compas property)": [[1, "ethicml.data.Compas.class_labels"]], "class_labels (credit property)": [[1, "ethicml.data.Credit.class_labels"]], "class_labels (crime property)": [[1, "ethicml.data.Crime.class_labels"]], "class_labels (german property)": [[1, "ethicml.data.German.class_labels"]], "class_labels (health property)": [[1, "ethicml.data.Health.class_labels"]], "class_labels (law property)": [[1, "ethicml.data.Law.class_labels"]], "class_labels (legacydataset property)": [[1, "ethicml.data.LegacyDataset.class_labels"]], "class_labels (lipton property)": [[1, "ethicml.data.Lipton.class_labels"]], "class_labels (nonbinarytoy property)": [[1, "ethicml.data.NonBinaryToy.class_labels"]], "class_labels (nursery property)": [[1, "ethicml.data.Nursery.class_labels"]], "class_labels (sqf property)": [[1, "ethicml.data.Sqf.class_labels"]], "class_labels (staticcsvdataset property)": [[1, "ethicml.data.StaticCSVDataset.class_labels"]], "class_labels (synthetic property)": [[1, "ethicml.data.Synthetic.class_labels"]], "class_labels (toy property)": [[1, "ethicml.data.Toy.class_labels"]], "clear() (featuresplit method)": [[1, "ethicml.data.FeatureSplit.clear"]], "columns (labelgroup attribute)": [[1, "ethicml.data.LabelGroup.columns"]], "cont_first (featureorder attribute)": [[1, "ethicml.data.FeatureOrder.cont_first"]], "continuous_features (acsemployment property)": [[1, "ethicml.data.AcsEmployment.continuous_features"]], "continuous_features (acsincome property)": [[1, "ethicml.data.AcsIncome.continuous_features"]], "continuous_features (admissions property)": [[1, "ethicml.data.Admissions.continuous_features"]], "continuous_features (adult property)": [[1, "ethicml.data.Adult.continuous_features"]], "continuous_features (csvdataset property)": [[1, "ethicml.data.CSVDataset.continuous_features"]], "continuous_features (csvdatasetdc property)": [[1, "ethicml.data.CSVDatasetDC.continuous_features"]], "continuous_features (compas property)": [[1, "ethicml.data.Compas.continuous_features"]], "continuous_features (credit property)": [[1, "ethicml.data.Credit.continuous_features"]], "continuous_features (crime property)": [[1, "ethicml.data.Crime.continuous_features"]], "continuous_features (dataset property)": [[1, "ethicml.data.Dataset.continuous_features"]], "continuous_features (german property)": [[1, "ethicml.data.German.continuous_features"]], "continuous_features (health property)": [[1, "ethicml.data.Health.continuous_features"]], "continuous_features (law property)": [[1, "ethicml.data.Law.continuous_features"]], "continuous_features (legacydataset property)": [[1, "ethicml.data.LegacyDataset.continuous_features"]], "continuous_features (lipton property)": [[1, "ethicml.data.Lipton.continuous_features"]], "continuous_features (nonbinarytoy property)": [[1, "ethicml.data.NonBinaryToy.continuous_features"]], "continuous_features (nursery property)": [[1, "ethicml.data.Nursery.continuous_features"]], "continuous_features (sqf property)": [[1, "ethicml.data.Sqf.continuous_features"]], "continuous_features (staticcsvdataset property)": [[1, "ethicml.data.StaticCSVDataset.continuous_features"]], "continuous_features (synthetic property)": [[1, "ethicml.data.Synthetic.continuous_features"]], "continuous_features (toy property)": [[1, "ethicml.data.Toy.continuous_features"]], "copy() (featuresplit method)": [[1, "ethicml.data.FeatureSplit.copy"]], "count() (labelgroup method)": [[1, "ethicml.data.LabelGroup.count"]], "create_data_obj() (in module ethicml.data)": [[1, "ethicml.data.create_data_obj"]], "disc_feature_groups (acsemployment property)": [[1, "ethicml.data.AcsEmployment.disc_feature_groups"]], "disc_feature_groups (acsincome property)": [[1, "ethicml.data.AcsIncome.disc_feature_groups"]], "disc_feature_groups (admissions property)": [[1, "ethicml.data.Admissions.disc_feature_groups"]], "disc_feature_groups (adult property)": [[1, "ethicml.data.Adult.disc_feature_groups"]], "disc_feature_groups (csvdataset property)": [[1, "ethicml.data.CSVDataset.disc_feature_groups"]], "disc_feature_groups (csvdatasetdc property)": [[1, "ethicml.data.CSVDatasetDC.disc_feature_groups"]], "disc_feature_groups (compas property)": [[1, "ethicml.data.Compas.disc_feature_groups"]], "disc_feature_groups (credit property)": [[1, "ethicml.data.Credit.disc_feature_groups"]], "disc_feature_groups (crime property)": [[1, "ethicml.data.Crime.disc_feature_groups"]], "disc_feature_groups (dataset property)": [[1, "ethicml.data.Dataset.disc_feature_groups"]], "disc_feature_groups (german property)": [[1, "ethicml.data.German.disc_feature_groups"]], "disc_feature_groups (health property)": [[1, "ethicml.data.Health.disc_feature_groups"]], "disc_feature_groups (law property)": [[1, "ethicml.data.Law.disc_feature_groups"]], "disc_feature_groups (legacydataset property)": [[1, "ethicml.data.LegacyDataset.disc_feature_groups"]], "disc_feature_groups (lipton property)": [[1, "ethicml.data.Lipton.disc_feature_groups"]], "disc_feature_groups (nonbinarytoy property)": [[1, "ethicml.data.NonBinaryToy.disc_feature_groups"]], "disc_feature_groups (nursery property)": [[1, "ethicml.data.Nursery.disc_feature_groups"]], "disc_feature_groups (sqf property)": [[1, "ethicml.data.Sqf.disc_feature_groups"]], "disc_feature_groups (staticcsvdataset property)": [[1, "ethicml.data.StaticCSVDataset.disc_feature_groups"]], "disc_feature_groups (synthetic property)": [[1, "ethicml.data.Synthetic.disc_feature_groups"]], "disc_feature_groups (toy property)": [[1, "ethicml.data.Toy.disc_feature_groups"]], "disc_first (featureorder attribute)": [[1, "ethicml.data.FeatureOrder.disc_first"]], "discard_non_one_hot (admissions attribute)": [[1, "ethicml.data.Admissions.discard_non_one_hot"]], "discard_non_one_hot (adult attribute)": [[1, "ethicml.data.Adult.discard_non_one_hot"]], "discard_non_one_hot (csvdataset attribute)": [[1, "ethicml.data.CSVDataset.discard_non_one_hot"]], "discard_non_one_hot (csvdatasetdc attribute)": [[1, "ethicml.data.CSVDatasetDC.discard_non_one_hot"]], "discard_non_one_hot (compas attribute)": [[1, "ethicml.data.Compas.discard_non_one_hot"]], "discard_non_one_hot (credit attribute)": [[1, "ethicml.data.Credit.discard_non_one_hot"]], "discard_non_one_hot (crime attribute)": [[1, "ethicml.data.Crime.discard_non_one_hot"]], "discard_non_one_hot (german attribute)": [[1, "ethicml.data.German.discard_non_one_hot"]], "discard_non_one_hot (health attribute)": [[1, "ethicml.data.Health.discard_non_one_hot"]], "discard_non_one_hot (law attribute)": [[1, "ethicml.data.Law.discard_non_one_hot"]], "discard_non_one_hot (legacydataset attribute)": [[1, "ethicml.data.LegacyDataset.discard_non_one_hot"]], "discard_non_one_hot (lipton attribute)": [[1, "ethicml.data.Lipton.discard_non_one_hot"]], "discard_non_one_hot (nonbinarytoy attribute)": [[1, "ethicml.data.NonBinaryToy.discard_non_one_hot"]], "discard_non_one_hot (nursery attribute)": [[1, "ethicml.data.Nursery.discard_non_one_hot"]], "discard_non_one_hot (sqf attribute)": [[1, "ethicml.data.Sqf.discard_non_one_hot"]], "discard_non_one_hot (staticcsvdataset attribute)": [[1, "ethicml.data.StaticCSVDataset.discard_non_one_hot"]], "discard_non_one_hot (synthetic attribute)": [[1, "ethicml.data.Synthetic.discard_non_one_hot"]], "discard_non_one_hot (toy attribute)": [[1, "ethicml.data.Toy.discard_non_one_hot"]], "discrete_features (acsemployment property)": [[1, "ethicml.data.AcsEmployment.discrete_features"]], "discrete_features (acsincome property)": [[1, "ethicml.data.AcsIncome.discrete_features"]], "discrete_features (admissions property)": [[1, "ethicml.data.Admissions.discrete_features"]], "discrete_features (adult property)": [[1, "ethicml.data.Adult.discrete_features"]], "discrete_features (csvdataset property)": [[1, "ethicml.data.CSVDataset.discrete_features"]], "discrete_features (csvdatasetdc property)": [[1, "ethicml.data.CSVDatasetDC.discrete_features"]], "discrete_features (compas property)": [[1, "ethicml.data.Compas.discrete_features"]], "discrete_features (credit property)": [[1, "ethicml.data.Credit.discrete_features"]], "discrete_features (crime property)": [[1, "ethicml.data.Crime.discrete_features"]], "discrete_features (dataset property)": [[1, "ethicml.data.Dataset.discrete_features"]], "discrete_features (german property)": [[1, "ethicml.data.German.discrete_features"]], "discrete_features (health property)": [[1, "ethicml.data.Health.discrete_features"]], "discrete_features (law property)": [[1, "ethicml.data.Law.discrete_features"]], "discrete_features (legacydataset property)": [[1, "ethicml.data.LegacyDataset.discrete_features"]], "discrete_features (lipton property)": [[1, "ethicml.data.Lipton.discrete_features"]], "discrete_features (nonbinarytoy property)": [[1, "ethicml.data.NonBinaryToy.discrete_features"]], "discrete_features (nursery property)": [[1, "ethicml.data.Nursery.discrete_features"]], "discrete_features (sqf property)": [[1, "ethicml.data.Sqf.discrete_features"]], "discrete_features (staticcsvdataset property)": [[1, "ethicml.data.StaticCSVDataset.discrete_features"]], "discrete_features (synthetic property)": [[1, "ethicml.data.Synthetic.discrete_features"]], "discrete_features (toy property)": [[1, "ethicml.data.Toy.discrete_features"]], "ethicml.data": [[1, "module-ethicml.data"]], "feature_split() (acsemployment method)": [[1, "ethicml.data.AcsEmployment.feature_split"]], "feature_split() (acsincome method)": [[1, "ethicml.data.AcsIncome.feature_split"]], "feature_split() (admissions method)": [[1, "ethicml.data.Admissions.feature_split"]], "feature_split() (adult method)": [[1, "ethicml.data.Adult.feature_split"]], "feature_split() (csvdataset method)": [[1, "ethicml.data.CSVDataset.feature_split"]], "feature_split() (csvdatasetdc method)": [[1, "ethicml.data.CSVDatasetDC.feature_split"]], "feature_split() (compas method)": [[1, "ethicml.data.Compas.feature_split"]], "feature_split() (credit method)": [[1, "ethicml.data.Credit.feature_split"]], "feature_split() (crime method)": [[1, "ethicml.data.Crime.feature_split"]], "feature_split() (dataset method)": [[1, "ethicml.data.Dataset.feature_split"]], "feature_split() (german method)": [[1, "ethicml.data.German.feature_split"]], "feature_split() (health method)": [[1, "ethicml.data.Health.feature_split"]], "feature_split() (law method)": [[1, "ethicml.data.Law.feature_split"]], "feature_split() (legacydataset method)": [[1, "ethicml.data.LegacyDataset.feature_split"]], "feature_split() (lipton method)": [[1, "ethicml.data.Lipton.feature_split"]], "feature_split() (nonbinarytoy method)": [[1, "ethicml.data.NonBinaryToy.feature_split"]], "feature_split() (nursery method)": [[1, "ethicml.data.Nursery.feature_split"]], "feature_split() (sqf method)": [[1, "ethicml.data.Sqf.feature_split"]], "feature_split() (staticcsvdataset method)": [[1, "ethicml.data.StaticCSVDataset.feature_split"]], "feature_split() (synthetic method)": [[1, "ethicml.data.Synthetic.feature_split"]], "feature_split() (toy method)": [[1, "ethicml.data.Toy.feature_split"]], "features_to_remove (acsemployment property)": [[1, "ethicml.data.AcsEmployment.features_to_remove"]], "features_to_remove (acsincome property)": [[1, "ethicml.data.AcsIncome.features_to_remove"]], "filepath (admissions property)": [[1, "ethicml.data.Admissions.filepath"]], "filepath (adult property)": [[1, "ethicml.data.Adult.filepath"]], "filepath (csvdataset property)": [[1, "ethicml.data.CSVDataset.filepath"]], "filepath (csvdatasetdc property)": [[1, "ethicml.data.CSVDatasetDC.filepath"]], "filepath (compas property)": [[1, "ethicml.data.Compas.filepath"]], "filepath (credit property)": [[1, "ethicml.data.Credit.filepath"]], "filepath (crime property)": [[1, "ethicml.data.Crime.filepath"]], "filepath (german property)": [[1, "ethicml.data.German.filepath"]], "filepath (health property)": [[1, "ethicml.data.Health.filepath"]], "filepath (law property)": [[1, "ethicml.data.Law.filepath"]], "filepath (legacydataset property)": [[1, "ethicml.data.LegacyDataset.filepath"]], "filepath (lipton property)": [[1, "ethicml.data.Lipton.filepath"]], "filepath (nonbinarytoy property)": [[1, "ethicml.data.NonBinaryToy.filepath"]], "filepath (nursery property)": [[1, "ethicml.data.Nursery.filepath"]], "filepath (sqf property)": [[1, "ethicml.data.Sqf.filepath"]], "filepath (staticcsvdataset property)": [[1, "ethicml.data.StaticCSVDataset.filepath"]], "filepath (synthetic property)": [[1, "ethicml.data.Synthetic.filepath"]], "filepath (toy property)": [[1, "ethicml.data.Toy.filepath"]], "filter_features_by_prefixes() (in module ethicml.data)": [[1, "ethicml.data.filter_features_by_prefixes"]], "flatten_dict() (in module ethicml.data)": [[1, "ethicml.data.flatten_dict"]], "from_dummies() (in module ethicml.data)": [[1, "ethicml.data.from_dummies"]], "fromkeys() (featuresplit method)": [[1, "ethicml.data.FeatureSplit.fromkeys"]], "get() (featuresplit method)": [[1, "ethicml.data.FeatureSplit.get"]], "get_dataset_obj_by_name() (in module ethicml.data)": [[1, "ethicml.data.get_dataset_obj_by_name"]], "get_discrete_features() (in module ethicml.data)": [[1, "ethicml.data.get_discrete_features"]], "get_filename_or_path() (admissions method)": [[1, "ethicml.data.Admissions.get_filename_or_path"]], "get_filename_or_path() (adult method)": [[1, "ethicml.data.Adult.get_filename_or_path"]], "get_filename_or_path() (csvdataset method)": [[1, "ethicml.data.CSVDataset.get_filename_or_path"]], "get_filename_or_path() (csvdatasetdc method)": [[1, "ethicml.data.CSVDatasetDC.get_filename_or_path"]], "get_filename_or_path() (compas method)": [[1, "ethicml.data.Compas.get_filename_or_path"]], "get_filename_or_path() (credit method)": [[1, "ethicml.data.Credit.get_filename_or_path"]], "get_filename_or_path() (crime method)": [[1, "ethicml.data.Crime.get_filename_or_path"]], "get_filename_or_path() (german method)": [[1, "ethicml.data.German.get_filename_or_path"]], "get_filename_or_path() (health method)": [[1, "ethicml.data.Health.get_filename_or_path"]], "get_filename_or_path() (law method)": [[1, "ethicml.data.Law.get_filename_or_path"]], "get_filename_or_path() (legacydataset method)": [[1, "ethicml.data.LegacyDataset.get_filename_or_path"]], "get_filename_or_path() (lipton method)": [[1, "ethicml.data.Lipton.get_filename_or_path"]], "get_filename_or_path() (nonbinarytoy method)": [[1, "ethicml.data.NonBinaryToy.get_filename_or_path"]], "get_filename_or_path() (nursery method)": [[1, "ethicml.data.Nursery.get_filename_or_path"]], "get_filename_or_path() (sqf method)": [[1, "ethicml.data.Sqf.get_filename_or_path"]], "get_filename_or_path() (staticcsvdataset method)": [[1, "ethicml.data.StaticCSVDataset.get_filename_or_path"]], "get_filename_or_path() (synthetic method)": [[1, "ethicml.data.Synthetic.get_filename_or_path"]], "get_filename_or_path() (toy method)": [[1, "ethicml.data.Toy.get_filename_or_path"]], "get_label_specs() (admissions method)": [[1, "ethicml.data.Admissions.get_label_specs"]], "get_label_specs() (adult method)": [[1, "ethicml.data.Adult.get_label_specs"]], "get_label_specs() (csvdataset method)": [[1, "ethicml.data.CSVDataset.get_label_specs"]], "get_label_specs() (csvdatasetdc method)": [[1, "ethicml.data.CSVDatasetDC.get_label_specs"]], "get_label_specs() (compas method)": [[1, "ethicml.data.Compas.get_label_specs"]], "get_label_specs() (credit method)": [[1, "ethicml.data.Credit.get_label_specs"]], "get_label_specs() (crime method)": [[1, "ethicml.data.Crime.get_label_specs"]], "get_label_specs() (german method)": [[1, "ethicml.data.German.get_label_specs"]], "get_label_specs() (health method)": [[1, "ethicml.data.Health.get_label_specs"]], "get_label_specs() (law method)": [[1, "ethicml.data.Law.get_label_specs"]], "get_label_specs() (legacydataset method)": [[1, "ethicml.data.LegacyDataset.get_label_specs"]], "get_label_specs() (lipton method)": [[1, "ethicml.data.Lipton.get_label_specs"]], "get_label_specs() (nonbinarytoy method)": [[1, "ethicml.data.NonBinaryToy.get_label_specs"]], "get_label_specs() (nursery method)": [[1, "ethicml.data.Nursery.get_label_specs"]], "get_label_specs() (sqf method)": [[1, "ethicml.data.Sqf.get_label_specs"]], "get_label_specs() (staticcsvdataset method)": [[1, "ethicml.data.StaticCSVDataset.get_label_specs"]], "get_label_specs() (synthetic method)": [[1, "ethicml.data.Synthetic.get_label_specs"]], "get_label_specs() (toy method)": [[1, "ethicml.data.Toy.get_label_specs"]], "get_num_samples() (admissions method)": [[1, "ethicml.data.Admissions.get_num_samples"]], "get_num_samples() (adult method)": [[1, "ethicml.data.Adult.get_num_samples"]], "get_num_samples() (csvdataset method)": [[1, "ethicml.data.CSVDataset.get_num_samples"]], "get_num_samples() (csvdatasetdc method)": [[1, "ethicml.data.CSVDatasetDC.get_num_samples"]], "get_num_samples() (compas method)": [[1, "ethicml.data.Compas.get_num_samples"]], "get_num_samples() (credit method)": [[1, "ethicml.data.Credit.get_num_samples"]], "get_num_samples() (crime method)": [[1, "ethicml.data.Crime.get_num_samples"]], "get_num_samples() (german method)": [[1, "ethicml.data.German.get_num_samples"]], "get_num_samples() (health method)": [[1, "ethicml.data.Health.get_num_samples"]], "get_num_samples() (law method)": [[1, "ethicml.data.Law.get_num_samples"]], "get_num_samples() (legacydataset method)": [[1, "ethicml.data.LegacyDataset.get_num_samples"]], "get_num_samples() (lipton method)": [[1, "ethicml.data.Lipton.get_num_samples"]], "get_num_samples() (nonbinarytoy method)": [[1, "ethicml.data.NonBinaryToy.get_num_samples"]], "get_num_samples() (nursery method)": [[1, "ethicml.data.Nursery.get_num_samples"]], "get_num_samples() (sqf method)": [[1, "ethicml.data.Sqf.get_num_samples"]], "get_num_samples() (staticcsvdataset method)": [[1, "ethicml.data.StaticCSVDataset.get_num_samples"]], "get_num_samples() (synthetic method)": [[1, "ethicml.data.Synthetic.get_num_samples"]], "get_num_samples() (toy method)": [[1, "ethicml.data.Toy.get_num_samples"]], "group_disc_feat_indices() (in module ethicml.data)": [[1, "ethicml.data.group_disc_feat_indices"]], "index() (labelgroup method)": [[1, "ethicml.data.LabelGroup.index"]], "invert_sens_attr (admissions property)": [[1, "ethicml.data.Admissions.invert_sens_attr"]], "invert_sens_attr (adult property)": [[1, "ethicml.data.Adult.invert_sens_attr"]], "invert_sens_attr (csvdataset property)": [[1, "ethicml.data.CSVDataset.invert_sens_attr"]], "invert_sens_attr (csvdatasetdc property)": [[1, "ethicml.data.CSVDatasetDC.invert_sens_attr"]], "invert_sens_attr (compas property)": [[1, "ethicml.data.Compas.invert_sens_attr"]], "invert_sens_attr (credit property)": [[1, "ethicml.data.Credit.invert_sens_attr"]], "invert_sens_attr (crime property)": [[1, "ethicml.data.Crime.invert_sens_attr"]], "invert_sens_attr (german property)": [[1, "ethicml.data.German.invert_sens_attr"]], "invert_sens_attr (health property)": [[1, "ethicml.data.Health.invert_sens_attr"]], "invert_sens_attr (law property)": [[1, "ethicml.data.Law.invert_sens_attr"]], "invert_sens_attr (legacydataset property)": [[1, "ethicml.data.LegacyDataset.invert_sens_attr"]], "invert_sens_attr (lipton property)": [[1, "ethicml.data.Lipton.invert_sens_attr"]], "invert_sens_attr (nonbinarytoy property)": [[1, "ethicml.data.NonBinaryToy.invert_sens_attr"]], "invert_sens_attr (nursery property)": [[1, "ethicml.data.Nursery.invert_sens_attr"]], "invert_sens_attr (sqf property)": [[1, "ethicml.data.Sqf.invert_sens_attr"]], "invert_sens_attr (staticcsvdataset property)": [[1, "ethicml.data.StaticCSVDataset.invert_sens_attr"]], "invert_sens_attr (synthetic property)": [[1, "ethicml.data.Synthetic.invert_sens_attr"]], "invert_sens_attr (toy property)": [[1, "ethicml.data.Toy.invert_sens_attr"]], "items() (featuresplit method)": [[1, "ethicml.data.FeatureSplit.items"]], "keys() (featuresplit method)": [[1, "ethicml.data.FeatureSplit.keys"]], "label_spec_to_feature_list() (in module ethicml.data)": [[1, "ethicml.data.label_spec_to_feature_list"]], "load() (acsemployment method)": [[1, "ethicml.data.AcsEmployment.load"]], "load() (acsincome method)": [[1, "ethicml.data.AcsIncome.load"]], "load() (admissions method)": [[1, "ethicml.data.Admissions.load"]], "load() (adult method)": [[1, "ethicml.data.Adult.load"]], "load() (csvdataset method)": [[1, "ethicml.data.CSVDataset.load"]], "load() (csvdatasetdc method)": [[1, "ethicml.data.CSVDatasetDC.load"]], "load() (compas method)": [[1, "ethicml.data.Compas.load"]], "load() (credit method)": [[1, "ethicml.data.Credit.load"]], "load() (crime method)": [[1, "ethicml.data.Crime.load"]], "load() (dataset method)": [[1, "ethicml.data.Dataset.load"]], "load() (german method)": [[1, "ethicml.data.German.load"]], "load() (health method)": [[1, "ethicml.data.Health.load"]], "load() (law method)": [[1, "ethicml.data.Law.load"]], "load() (legacydataset method)": [[1, "ethicml.data.LegacyDataset.load"]], "load() (lipton method)": [[1, "ethicml.data.Lipton.load"]], "load() (nonbinarytoy method)": [[1, "ethicml.data.NonBinaryToy.load"]], "load() (nursery method)": [[1, "ethicml.data.Nursery.load"]], "load() (sqf method)": [[1, "ethicml.data.Sqf.load"]], "load() (staticcsvdataset method)": [[1, "ethicml.data.StaticCSVDataset.load"]], "load() (synthetic method)": [[1, "ethicml.data.Synthetic.load"]], "load() (toy method)": [[1, "ethicml.data.Toy.load"]], "load_aif() (admissions method)": [[1, "ethicml.data.Admissions.load_aif"]], "load_aif() (adult method)": [[1, "ethicml.data.Adult.load_aif"]], "load_aif() (csvdataset method)": [[1, "ethicml.data.CSVDataset.load_aif"]], "load_aif() (csvdatasetdc method)": [[1, "ethicml.data.CSVDatasetDC.load_aif"]], "load_aif() (compas method)": [[1, "ethicml.data.Compas.load_aif"]], "load_aif() (credit method)": [[1, "ethicml.data.Credit.load_aif"]], "load_aif() (crime method)": [[1, "ethicml.data.Crime.load_aif"]], "load_aif() (german method)": [[1, "ethicml.data.German.load_aif"]], "load_aif() (health method)": [[1, "ethicml.data.Health.load_aif"]], "load_aif() (law method)": [[1, "ethicml.data.Law.load_aif"]], "load_aif() (legacydataset method)": [[1, "ethicml.data.LegacyDataset.load_aif"]], "load_aif() (lipton method)": [[1, "ethicml.data.Lipton.load_aif"]], "load_aif() (nonbinarytoy method)": [[1, "ethicml.data.NonBinaryToy.load_aif"]], "load_aif() (nursery method)": [[1, "ethicml.data.Nursery.load_aif"]], "load_aif() (sqf method)": [[1, "ethicml.data.Sqf.load_aif"]], "load_aif() (staticcsvdataset method)": [[1, "ethicml.data.StaticCSVDataset.load_aif"]], "load_aif() (synthetic method)": [[1, "ethicml.data.Synthetic.load_aif"]], "load_aif() (toy method)": [[1, "ethicml.data.Toy.load_aif"]], "load_data() (in module ethicml.data)": [[1, "ethicml.data.load_data"]], "load_discrete_only (admissions property)": [[1, "ethicml.data.Admissions.load_discrete_only"]], "load_discrete_only (adult property)": [[1, "ethicml.data.Adult.load_discrete_only"]], "load_discrete_only (csvdataset property)": [[1, "ethicml.data.CSVDataset.load_discrete_only"]], "load_discrete_only (csvdatasetdc property)": [[1, "ethicml.data.CSVDatasetDC.load_discrete_only"]], "load_discrete_only (compas property)": [[1, "ethicml.data.Compas.load_discrete_only"]], "load_discrete_only (credit property)": [[1, "ethicml.data.Credit.load_discrete_only"]], "load_discrete_only (crime property)": [[1, "ethicml.data.Crime.load_discrete_only"]], "load_discrete_only (german property)": [[1, "ethicml.data.German.load_discrete_only"]], "load_discrete_only (health property)": [[1, "ethicml.data.Health.load_discrete_only"]], "load_discrete_only (law property)": [[1, "ethicml.data.Law.load_discrete_only"]], "load_discrete_only (legacydataset property)": [[1, "ethicml.data.LegacyDataset.load_discrete_only"]], "load_discrete_only (lipton property)": [[1, "ethicml.data.Lipton.load_discrete_only"]], "load_discrete_only (nonbinarytoy property)": [[1, "ethicml.data.NonBinaryToy.load_discrete_only"]], "load_discrete_only (nursery property)": [[1, "ethicml.data.Nursery.load_discrete_only"]], "load_discrete_only (sqf property)": [[1, "ethicml.data.Sqf.load_discrete_only"]], "load_discrete_only (staticcsvdataset property)": [[1, "ethicml.data.StaticCSVDataset.load_discrete_only"]], "load_discrete_only (synthetic property)": [[1, "ethicml.data.Synthetic.load_discrete_only"]], "load_discrete_only (toy property)": [[1, "ethicml.data.Toy.load_discrete_only"]], "map_to_binary (admissions attribute)": [[1, "ethicml.data.Admissions.map_to_binary"]], "map_to_binary (adult attribute)": [[1, "ethicml.data.Adult.map_to_binary"]], "map_to_binary (csvdataset attribute)": [[1, "ethicml.data.CSVDataset.map_to_binary"]], "map_to_binary (csvdatasetdc attribute)": [[1, "ethicml.data.CSVDatasetDC.map_to_binary"]], "map_to_binary (compas attribute)": [[1, "ethicml.data.Compas.map_to_binary"]], "map_to_binary (credit attribute)": [[1, "ethicml.data.Credit.map_to_binary"]], "map_to_binary (crime attribute)": [[1, "ethicml.data.Crime.map_to_binary"]], "map_to_binary (german attribute)": [[1, "ethicml.data.German.map_to_binary"]], "map_to_binary (health attribute)": [[1, "ethicml.data.Health.map_to_binary"]], "map_to_binary (law attribute)": [[1, "ethicml.data.Law.map_to_binary"]], "map_to_binary (legacydataset attribute)": [[1, "ethicml.data.LegacyDataset.map_to_binary"]], "map_to_binary (lipton attribute)": [[1, "ethicml.data.Lipton.map_to_binary"]], "map_to_binary (nonbinarytoy attribute)": [[1, "ethicml.data.NonBinaryToy.map_to_binary"]], "map_to_binary (nursery attribute)": [[1, "ethicml.data.Nursery.map_to_binary"]], "map_to_binary (sqf attribute)": [[1, "ethicml.data.Sqf.map_to_binary"]], "map_to_binary (staticcsvdataset attribute)": [[1, "ethicml.data.StaticCSVDataset.map_to_binary"]], "map_to_binary (synthetic attribute)": [[1, "ethicml.data.Synthetic.map_to_binary"]], "map_to_binary (toy attribute)": [[1, "ethicml.data.Toy.map_to_binary"]], "module": [[1, "module-ethicml.data"], [2, "module-ethicml.metrics"], [3, "module-ethicml.models.algorithm_base"], [4, "module-ethicml.models"], [5, "module-ethicml.models.inprocess"], [5, "module-ethicml.models.inprocess.agarwal_reductions"], [5, "module-ethicml.models.inprocess.fairness_wo_demographics"], [5, "module-ethicml.models.inprocess.in_algorithm"], [5, "module-ethicml.models.inprocess.installed_model"], [5, "module-ethicml.models.inprocess.kamiran"], [5, "module-ethicml.models.inprocess.kamishima"], [5, "module-ethicml.models.inprocess.logistic_regression"], [5, "module-ethicml.models.inprocess.majority"], [5, "module-ethicml.models.inprocess.manual"], [5, "module-ethicml.models.inprocess.mlp"], [5, "module-ethicml.models.inprocess.oracle"], [5, "module-ethicml.models.inprocess.svm"], [5, "module-ethicml.models.inprocess.zafar"], [6, "module-ethicml.models.postprocess"], [6, "module-ethicml.models.postprocess.dp_flip"], [6, "module-ethicml.models.postprocess.hardt"], [6, "module-ethicml.models.postprocess.post_algorithm"], [7, "module-ethicml.models.preprocess"], [7, "module-ethicml.models.preprocess.beutel"], [7, "module-ethicml.models.preprocess.calders"], [7, "module-ethicml.models.preprocess.pre_algorithm"], [7, "module-ethicml.models.preprocess.upsampler"], [7, "module-ethicml.models.preprocess.vfae"], [7, "module-ethicml.models.preprocess.zemel"], [8, "module-ethicml.plot"], [9, "module-ethicml.run"], [10, "module-ethicml"], [11, "module-ethicml.preprocessing"], [12, "module-ethicml.utility"]], "multiplier (labelgroup attribute)": [[1, "ethicml.data.LabelGroup.multiplier"]], "name (acsemployment property)": [[1, "ethicml.data.AcsEmployment.name"]], "name (acsincome property)": [[1, "ethicml.data.AcsIncome.name"]], "name (admissions property)": [[1, "ethicml.data.Admissions.name"]], "name (adult property)": [[1, "ethicml.data.Adult.name"]], "name (csvdataset property)": [[1, "ethicml.data.CSVDataset.name"]], "name (csvdatasetdc property)": [[1, "ethicml.data.CSVDatasetDC.name"]], "name (compas property)": [[1, "ethicml.data.Compas.name"]], "name (credit property)": [[1, "ethicml.data.Credit.name"]], "name (crime property)": [[1, "ethicml.data.Crime.name"]], "name (dataset property)": [[1, "ethicml.data.Dataset.name"]], "name (german property)": [[1, "ethicml.data.German.name"]], "name (health property)": [[1, "ethicml.data.Health.name"]], "name (law property)": [[1, "ethicml.data.Law.name"]], "name (legacydataset property)": [[1, "ethicml.data.LegacyDataset.name"]], "name (lipton property)": [[1, "ethicml.data.Lipton.name"]], "name (nonbinarytoy property)": [[1, "ethicml.data.NonBinaryToy.name"]], "name (nursery property)": [[1, "ethicml.data.Nursery.name"]], "name (sqf property)": [[1, "ethicml.data.Sqf.name"]], "name (staticcsvdataset property)": [[1, "ethicml.data.StaticCSVDataset.name"]], "name (synthetic property)": [[1, "ethicml.data.Synthetic.name"]], "name (toy property)": [[1, "ethicml.data.Toy.name"]], "one_hot_encode_and_combine() (in module ethicml.data)": [[1, "ethicml.data.one_hot_encode_and_combine"]], "pop() (featuresplit method)": [[1, "ethicml.data.FeatureSplit.pop"]], "popitem() (featuresplit method)": [[1, "ethicml.data.FeatureSplit.popitem"]], "reduce_feature_group() (in module ethicml.data)": [[1, "ethicml.data.reduce_feature_group"]], "sens_attrs (acsemployment property)": [[1, "ethicml.data.AcsEmployment.sens_attrs"]], "sens_attrs (acsincome property)": [[1, "ethicml.data.AcsIncome.sens_attrs"]], "sens_attrs (admissions property)": [[1, "ethicml.data.Admissions.sens_attrs"]], "sens_attrs (adult property)": [[1, "ethicml.data.Adult.sens_attrs"]], "sens_attrs (csvdataset property)": [[1, "ethicml.data.CSVDataset.sens_attrs"]], "sens_attrs (csvdatasetdc property)": [[1, "ethicml.data.CSVDatasetDC.sens_attrs"]], "sens_attrs (compas property)": [[1, "ethicml.data.Compas.sens_attrs"]], "sens_attrs (credit property)": [[1, "ethicml.data.Credit.sens_attrs"]], "sens_attrs (crime property)": [[1, "ethicml.data.Crime.sens_attrs"]], "sens_attrs (german property)": [[1, "ethicml.data.German.sens_attrs"]], "sens_attrs (health property)": [[1, "ethicml.data.Health.sens_attrs"]], "sens_attrs (law property)": [[1, "ethicml.data.Law.sens_attrs"]], "sens_attrs (legacydataset property)": [[1, "ethicml.data.LegacyDataset.sens_attrs"]], "sens_attrs (lipton property)": [[1, "ethicml.data.Lipton.sens_attrs"]], "sens_attrs (nonbinarytoy property)": [[1, "ethicml.data.NonBinaryToy.sens_attrs"]], "sens_attrs (nursery property)": [[1, "ethicml.data.Nursery.sens_attrs"]], "sens_attrs (sqf property)": [[1, "ethicml.data.Sqf.sens_attrs"]], "sens_attrs (staticcsvdataset property)": [[1, "ethicml.data.StaticCSVDataset.sens_attrs"]], "sens_attrs (synthetic property)": [[1, "ethicml.data.Synthetic.sens_attrs"]], "sens_attrs (toy property)": [[1, "ethicml.data.Toy.sens_attrs"]], "setdefault() (featuresplit method)": [[1, "ethicml.data.FeatureSplit.setdefault"]], "single_col_spec() (in module ethicml.data)": [[1, "ethicml.data.single_col_spec"]], "spec_from_binary_cols() (in module ethicml.data)": [[1, "ethicml.data.spec_from_binary_cols"]], "unfiltered_disc_feat_groups (admissions property)": [[1, "ethicml.data.Admissions.unfiltered_disc_feat_groups"]], "unfiltered_disc_feat_groups (adult property)": [[1, "ethicml.data.Adult.unfiltered_disc_feat_groups"]], "unfiltered_disc_feat_groups (csvdataset property)": [[1, "ethicml.data.CSVDataset.unfiltered_disc_feat_groups"]], "unfiltered_disc_feat_groups (csvdatasetdc property)": [[1, "ethicml.data.CSVDatasetDC.unfiltered_disc_feat_groups"]], "unfiltered_disc_feat_groups (compas property)": [[1, "ethicml.data.Compas.unfiltered_disc_feat_groups"]], "unfiltered_disc_feat_groups (credit property)": [[1, "ethicml.data.Credit.unfiltered_disc_feat_groups"]], "unfiltered_disc_feat_groups (crime property)": [[1, "ethicml.data.Crime.unfiltered_disc_feat_groups"]], "unfiltered_disc_feat_groups (german property)": [[1, "ethicml.data.German.unfiltered_disc_feat_groups"]], "unfiltered_disc_feat_groups (health property)": [[1, "ethicml.data.Health.unfiltered_disc_feat_groups"]], "unfiltered_disc_feat_groups (law property)": [[1, "ethicml.data.Law.unfiltered_disc_feat_groups"]], "unfiltered_disc_feat_groups (legacydataset property)": [[1, "ethicml.data.LegacyDataset.unfiltered_disc_feat_groups"]], "unfiltered_disc_feat_groups (lipton property)": [[1, "ethicml.data.Lipton.unfiltered_disc_feat_groups"]], "unfiltered_disc_feat_groups (nonbinarytoy property)": [[1, "ethicml.data.NonBinaryToy.unfiltered_disc_feat_groups"]], "unfiltered_disc_feat_groups (nursery property)": [[1, "ethicml.data.Nursery.unfiltered_disc_feat_groups"]], "unfiltered_disc_feat_groups (sqf property)": [[1, "ethicml.data.Sqf.unfiltered_disc_feat_groups"]], "unfiltered_disc_feat_groups (staticcsvdataset property)": [[1, "ethicml.data.StaticCSVDataset.unfiltered_disc_feat_groups"]], "unfiltered_disc_feat_groups (synthetic property)": [[1, "ethicml.data.Synthetic.unfiltered_disc_feat_groups"]], "unfiltered_disc_feat_groups (toy property)": [[1, "ethicml.data.Toy.unfiltered_disc_feat_groups"]], "update() (featuresplit method)": [[1, "ethicml.data.FeatureSplit.update"]], "values() (featuresplit method)": [[1, "ethicml.data.FeatureSplit.values"]], "all (persens attribute)": [[2, "ethicml.metrics.PerSens.ALL"]], "as (class in ethicml.metrics)": [[2, "ethicml.metrics.AS"]], "abscv (class in ethicml.metrics)": [[2, "ethicml.metrics.AbsCV"]], "accuracy (class in ethicml.metrics)": [[2, "ethicml.metrics.Accuracy"]], "averageoddsdiff (class in ethicml.metrics)": [[2, "ethicml.metrics.AverageOddsDiff"]], "bcr (class in ethicml.metrics)": [[2, "ethicml.metrics.BCR"]], "balancedaccuracy (class in ethicml.metrics)": [[2, "ethicml.metrics.BalancedAccuracy"]], "cv (class in ethicml.metrics)": [[2, "ethicml.metrics.CV"]], "cfmmetric (class in ethicml.metrics)": [[2, "ethicml.metrics.CfmMetric"]], "diffs (persens attribute)": [[2, "ethicml.metrics.PerSens.DIFFS"]], "diffs_ratios (persens attribute)": [[2, "ethicml.metrics.PerSens.DIFFS_RATIOS"]], "dependencytarget (class in ethicml.metrics)": [[2, "ethicml.metrics.DependencyTarget"]], "f1 (class in ethicml.metrics)": [[2, "ethicml.metrics.F1"]], "fnr (class in ethicml.metrics)": [[2, "ethicml.metrics.FNR"]], "fpr (class in ethicml.metrics)": [[2, "ethicml.metrics.FPR"]], "hsic (class in ethicml.metrics)": [[2, "ethicml.metrics.Hsic"]], "labeloutofboundserror": [[2, "ethicml.metrics.LabelOutOfBoundsError"]], "max (persens attribute)": [[2, "ethicml.metrics.PerSens.MAX"]], "min (persens attribute)": [[2, "ethicml.metrics.PerSens.MIN"]], "min_max (persens attribute)": [[2, "ethicml.metrics.PerSens.MIN_MAX"]], "metric (class in ethicml.metrics)": [[2, "ethicml.metrics.Metric"]], "metricnotapplicableerror": [[2, "ethicml.metrics.MetricNotApplicableError"]], "metricstaticname (class in ethicml.metrics)": [[2, "ethicml.metrics.MetricStaticName"]], "nmi (class in ethicml.metrics)": [[2, "ethicml.metrics.NMI"]], "npv (class in ethicml.metrics)": [[2, "ethicml.metrics.NPV"]], "ppv (class in ethicml.metrics)": [[2, "ethicml.metrics.PPV"]], "persens (class in ethicml.metrics)": [[2, "ethicml.metrics.PerSens"]], "probneg (class in ethicml.metrics)": [[2, "ethicml.metrics.ProbNeg"]], "proboutcome (class in ethicml.metrics)": [[2, "ethicml.metrics.ProbOutcome"]], "probpos (class in ethicml.metrics)": [[2, "ethicml.metrics.ProbPos"]], "ratios (persens attribute)": [[2, "ethicml.metrics.PerSens.RATIOS"]], "renyicorrelation (class in ethicml.metrics)": [[2, "ethicml.metrics.RenyiCorrelation"]], "robustaccuracy (class in ethicml.metrics)": [[2, "ethicml.metrics.RobustAccuracy"]], "sklearnmetric (class in ethicml.metrics)": [[2, "ethicml.metrics.SklearnMetric"]], "tnr (class in ethicml.metrics)": [[2, "ethicml.metrics.TNR"]], "tpr (class in ethicml.metrics)": [[2, "ethicml.metrics.TPR"]], "theil (class in ethicml.metrics)": [[2, "ethicml.metrics.Theil"]], "yanovich (class in ethicml.metrics)": [[2, "ethicml.metrics.Yanovich"]], "aggregate_over_sens() (in module ethicml.metrics)": [[2, "ethicml.metrics.aggregate_over_sens"]], "apply_per_sensitive (as attribute)": [[2, "ethicml.metrics.AS.apply_per_sensitive"]], "apply_per_sensitive (abscv attribute)": [[2, "ethicml.metrics.AbsCV.apply_per_sensitive"]], "apply_per_sensitive (accuracy attribute)": [[2, "ethicml.metrics.Accuracy.apply_per_sensitive"]], "apply_per_sensitive (averageoddsdiff attribute)": [[2, "ethicml.metrics.AverageOddsDiff.apply_per_sensitive"]], "apply_per_sensitive (bcr attribute)": [[2, "ethicml.metrics.BCR.apply_per_sensitive"]], "apply_per_sensitive (balancedaccuracy attribute)": [[2, "ethicml.metrics.BalancedAccuracy.apply_per_sensitive"]], "apply_per_sensitive (cv attribute)": [[2, "ethicml.metrics.CV.apply_per_sensitive"]], "apply_per_sensitive (cfmmetric attribute)": [[2, "ethicml.metrics.CfmMetric.apply_per_sensitive"]], "apply_per_sensitive (f1 attribute)": [[2, "ethicml.metrics.F1.apply_per_sensitive"]], "apply_per_sensitive (fnr attribute)": [[2, "ethicml.metrics.FNR.apply_per_sensitive"]], "apply_per_sensitive (fpr attribute)": [[2, "ethicml.metrics.FPR.apply_per_sensitive"]], "apply_per_sensitive (hsic attribute)": [[2, "ethicml.metrics.Hsic.apply_per_sensitive"]], "apply_per_sensitive (metric attribute)": [[2, "ethicml.metrics.Metric.apply_per_sensitive"]], "apply_per_sensitive (metricstaticname attribute)": [[2, "ethicml.metrics.MetricStaticName.apply_per_sensitive"]], "apply_per_sensitive (nmi attribute)": [[2, "ethicml.metrics.NMI.apply_per_sensitive"]], "apply_per_sensitive (npv attribute)": [[2, "ethicml.metrics.NPV.apply_per_sensitive"]], "apply_per_sensitive (ppv attribute)": [[2, "ethicml.metrics.PPV.apply_per_sensitive"]], "apply_per_sensitive (probneg attribute)": [[2, "ethicml.metrics.ProbNeg.apply_per_sensitive"]], "apply_per_sensitive (proboutcome attribute)": [[2, "ethicml.metrics.ProbOutcome.apply_per_sensitive"]], "apply_per_sensitive (probpos attribute)": [[2, "ethicml.metrics.ProbPos.apply_per_sensitive"]], "apply_per_sensitive (renyicorrelation attribute)": [[2, "ethicml.metrics.RenyiCorrelation.apply_per_sensitive"]], "apply_per_sensitive (robustaccuracy attribute)": [[2, "ethicml.metrics.RobustAccuracy.apply_per_sensitive"]], "apply_per_sensitive (sklearnmetric attribute)": [[2, "ethicml.metrics.SklearnMetric.apply_per_sensitive"]], "apply_per_sensitive (tnr attribute)": [[2, "ethicml.metrics.TNR.apply_per_sensitive"]], "apply_per_sensitive (tpr attribute)": [[2, "ethicml.metrics.TPR.apply_per_sensitive"]], "apply_per_sensitive (theil attribute)": [[2, "ethicml.metrics.Theil.apply_per_sensitive"]], "apply_per_sensitive (yanovich attribute)": [[2, "ethicml.metrics.Yanovich.apply_per_sensitive"]], "diff_per_sens() (in module ethicml.metrics)": [[2, "ethicml.metrics.diff_per_sens"]], "ethicml.metrics": [[2, "module-ethicml.metrics"]], "get_name() (as method)": [[2, "ethicml.metrics.AS.get_name"]], "get_name() (abscv method)": [[2, "ethicml.metrics.AbsCV.get_name"]], "get_name() (accuracy method)": [[2, "ethicml.metrics.Accuracy.get_name"]], "get_name() (averageoddsdiff method)": [[2, "ethicml.metrics.AverageOddsDiff.get_name"]], "get_name() (bcr method)": [[2, "ethicml.metrics.BCR.get_name"]], "get_name() (balancedaccuracy method)": [[2, "ethicml.metrics.BalancedAccuracy.get_name"]], "get_name() (cv method)": [[2, "ethicml.metrics.CV.get_name"]], "get_name() (cfmmetric method)": [[2, "ethicml.metrics.CfmMetric.get_name"]], "get_name() (f1 method)": [[2, "ethicml.metrics.F1.get_name"]], "get_name() (fnr method)": [[2, "ethicml.metrics.FNR.get_name"]], "get_name() (fpr method)": [[2, "ethicml.metrics.FPR.get_name"]], "get_name() (hsic method)": [[2, "ethicml.metrics.Hsic.get_name"]], "get_name() (metric method)": [[2, "ethicml.metrics.Metric.get_name"]], "get_name() (metricstaticname method)": [[2, "ethicml.metrics.MetricStaticName.get_name"]], "get_name() (nmi method)": [[2, "ethicml.metrics.NMI.get_name"]], "get_name() (npv method)": [[2, "ethicml.metrics.NPV.get_name"]], "get_name() (ppv method)": [[2, "ethicml.metrics.PPV.get_name"]], "get_name() (probneg method)": [[2, "ethicml.metrics.ProbNeg.get_name"]], "get_name() (proboutcome method)": [[2, "ethicml.metrics.ProbOutcome.get_name"]], "get_name() (probpos method)": [[2, "ethicml.metrics.ProbPos.get_name"]], "get_name() (renyicorrelation method)": [[2, "ethicml.metrics.RenyiCorrelation.get_name"]], "get_name() (robustaccuracy method)": [[2, "ethicml.metrics.RobustAccuracy.get_name"]], "get_name() (sklearnmetric method)": [[2, "ethicml.metrics.SklearnMetric.get_name"]], "get_name() (tnr method)": [[2, "ethicml.metrics.TNR.get_name"]], "get_name() (tpr method)": [[2, "ethicml.metrics.TPR.get_name"]], "get_name() (theil method)": [[2, "ethicml.metrics.Theil.get_name"]], "get_name() (yanovich method)": [[2, "ethicml.metrics.Yanovich.get_name"]], "labels (abscv attribute)": [[2, "ethicml.metrics.AbsCV.labels"]], "labels (averageoddsdiff attribute)": [[2, "ethicml.metrics.AverageOddsDiff.labels"]], "labels (bcr attribute)": [[2, "ethicml.metrics.BCR.labels"]], "labels (balancedaccuracy attribute)": [[2, "ethicml.metrics.BalancedAccuracy.labels"]], "labels (cv attribute)": [[2, "ethicml.metrics.CV.labels"]], "labels (cfmmetric attribute)": [[2, "ethicml.metrics.CfmMetric.labels"]], "labels (fnr attribute)": [[2, "ethicml.metrics.FNR.labels"]], "labels (fpr attribute)": [[2, "ethicml.metrics.FPR.labels"]], "labels (npv attribute)": [[2, "ethicml.metrics.NPV.labels"]], "labels (ppv attribute)": [[2, "ethicml.metrics.PPV.labels"]], "labels (probneg attribute)": [[2, "ethicml.metrics.ProbNeg.labels"]], "labels (probpos attribute)": [[2, "ethicml.metrics.ProbPos.labels"]], "labels (tnr attribute)": [[2, "ethicml.metrics.TNR.labels"]], "labels (tpr attribute)": [[2, "ethicml.metrics.TPR.labels"]], "max_per_sens() (in module ethicml.metrics)": [[2, "ethicml.metrics.max_per_sens"]], "metric_per_sens() (in module ethicml.metrics)": [[2, "ethicml.metrics.metric_per_sens"]], "min_per_sens() (in module ethicml.metrics)": [[2, "ethicml.metrics.min_per_sens"]], "name (as property)": [[2, "ethicml.metrics.AS.name"]], "name (abscv property)": [[2, "ethicml.metrics.AbsCV.name"]], "name (accuracy property)": [[2, "ethicml.metrics.Accuracy.name"]], "name (averageoddsdiff property)": [[2, "ethicml.metrics.AverageOddsDiff.name"]], "name (bcr property)": [[2, "ethicml.metrics.BCR.name"]], "name (balancedaccuracy property)": [[2, "ethicml.metrics.BalancedAccuracy.name"]], "name (cv property)": [[2, "ethicml.metrics.CV.name"]], "name (cfmmetric property)": [[2, "ethicml.metrics.CfmMetric.name"]], "name (f1 property)": [[2, "ethicml.metrics.F1.name"]], "name (fnr property)": [[2, "ethicml.metrics.FNR.name"]], "name (fpr property)": [[2, "ethicml.metrics.FPR.name"]], "name (hsic property)": [[2, "ethicml.metrics.Hsic.name"]], "name (metric property)": [[2, "ethicml.metrics.Metric.name"]], "name (metricstaticname property)": [[2, "ethicml.metrics.MetricStaticName.name"]], "name (nmi property)": [[2, "ethicml.metrics.NMI.name"]], "name (npv property)": [[2, "ethicml.metrics.NPV.name"]], "name (ppv property)": [[2, "ethicml.metrics.PPV.name"]], "name (probneg property)": [[2, "ethicml.metrics.ProbNeg.name"]], "name (proboutcome property)": [[2, "ethicml.metrics.ProbOutcome.name"]], "name (probpos property)": [[2, "ethicml.metrics.ProbPos.name"]], "name (renyicorrelation property)": [[2, "ethicml.metrics.RenyiCorrelation.name"]], "name (robustaccuracy property)": [[2, "ethicml.metrics.RobustAccuracy.name"]], "name (sklearnmetric property)": [[2, "ethicml.metrics.SklearnMetric.name"]], "name (tnr property)": [[2, "ethicml.metrics.TNR.name"]], "name (tpr property)": [[2, "ethicml.metrics.TPR.name"]], "name (theil property)": [[2, "ethicml.metrics.Theil.name"]], "name (yanovich property)": [[2, "ethicml.metrics.Yanovich.name"]], "per_sens_metrics_check() (in module ethicml.metrics)": [[2, "ethicml.metrics.per_sens_metrics_check"]], "pos_class (abscv attribute)": [[2, "ethicml.metrics.AbsCV.pos_class"]], "pos_class (averageoddsdiff attribute)": [[2, "ethicml.metrics.AverageOddsDiff.pos_class"]], "pos_class (bcr attribute)": [[2, "ethicml.metrics.BCR.pos_class"]], "pos_class (balancedaccuracy attribute)": [[2, "ethicml.metrics.BalancedAccuracy.pos_class"]], "pos_class (cv attribute)": [[2, "ethicml.metrics.CV.pos_class"]], "pos_class (cfmmetric attribute)": [[2, "ethicml.metrics.CfmMetric.pos_class"]], "pos_class (fnr attribute)": [[2, "ethicml.metrics.FNR.pos_class"]], "pos_class (fpr attribute)": [[2, "ethicml.metrics.FPR.pos_class"]], "pos_class (npv attribute)": [[2, "ethicml.metrics.NPV.pos_class"]], "pos_class (ppv attribute)": [[2, "ethicml.metrics.PPV.pos_class"]], "pos_class (probneg attribute)": [[2, "ethicml.metrics.ProbNeg.pos_class"]], "pos_class (probpos attribute)": [[2, "ethicml.metrics.ProbPos.pos_class"]], "pos_class (tnr attribute)": [[2, "ethicml.metrics.TNR.pos_class"]], "pos_class (tpr attribute)": [[2, "ethicml.metrics.TPR.pos_class"]], "ratio_per_sens() (in module ethicml.metrics)": [[2, "ethicml.metrics.ratio_per_sens"]], "run_metrics() (in module ethicml.metrics)": [[2, "ethicml.metrics.run_metrics"]], "score() (as method)": [[2, "ethicml.metrics.AS.score"]], "score() (abscv method)": [[2, "ethicml.metrics.AbsCV.score"]], "score() (accuracy method)": [[2, "ethicml.metrics.Accuracy.score"]], "score() (averageoddsdiff method)": [[2, "ethicml.metrics.AverageOddsDiff.score"]], "score() (bcr method)": [[2, "ethicml.metrics.BCR.score"]], "score() (balancedaccuracy method)": [[2, "ethicml.metrics.BalancedAccuracy.score"]], "score() (cv method)": [[2, "ethicml.metrics.CV.score"]], "score() (cfmmetric method)": [[2, "ethicml.metrics.CfmMetric.score"]], "score() (f1 method)": [[2, "ethicml.metrics.F1.score"]], "score() (fnr method)": [[2, "ethicml.metrics.FNR.score"]], "score() (fpr method)": [[2, "ethicml.metrics.FPR.score"]], "score() (hsic method)": [[2, "ethicml.metrics.Hsic.score"]], "score() (metric method)": [[2, "ethicml.metrics.Metric.score"]], "score() (metricstaticname method)": [[2, "ethicml.metrics.MetricStaticName.score"]], "score() (nmi method)": [[2, "ethicml.metrics.NMI.score"]], "score() (npv method)": [[2, "ethicml.metrics.NPV.score"]], "score() (ppv method)": [[2, "ethicml.metrics.PPV.score"]], "score() (probneg method)": [[2, "ethicml.metrics.ProbNeg.score"]], "score() (proboutcome method)": [[2, "ethicml.metrics.ProbOutcome.score"]], "score() (probpos method)": [[2, "ethicml.metrics.ProbPos.score"]], "score() (renyicorrelation method)": [[2, "ethicml.metrics.RenyiCorrelation.score"]], "score() (robustaccuracy method)": [[2, "ethicml.metrics.RobustAccuracy.score"]], "score() (sklearnmetric method)": [[2, "ethicml.metrics.SklearnMetric.score"]], "score() (tnr method)": [[2, "ethicml.metrics.TNR.score"]], "score() (tpr method)": [[2, "ethicml.metrics.TPR.score"]], "score() (theil method)": [[2, "ethicml.metrics.Theil.score"]], "score() (yanovich method)": [[2, "ethicml.metrics.Yanovich.score"]], "with_traceback() (labeloutofboundserror method)": [[2, "ethicml.metrics.LabelOutOfBoundsError.with_traceback"]], "with_traceback() (metricnotapplicableerror method)": [[2, "ethicml.metrics.MetricNotApplicableError.with_traceback"]], "algorithm (class in ethicml.models.algorithm_base)": [[3, "ethicml.models.algorithm_base.Algorithm"]], "subprocessalgorithmmixin (class in ethicml.models.algorithm_base)": [[3, "ethicml.models.algorithm_base.SubprocessAlgorithmMixin"]], "call_script() (subprocessalgorithmmixin method)": [[3, "ethicml.models.algorithm_base.SubprocessAlgorithmMixin.call_script"]], "ethicml.models.algorithm_base": [[3, "module-ethicml.models.algorithm_base"]], "executable (subprocessalgorithmmixin property)": [[3, "ethicml.models.algorithm_base.SubprocessAlgorithmMixin.executable"]], "name (algorithm property)": [[3, "ethicml.models.algorithm_base.Algorithm.name"]], "ethicml.models": [[4, "module-ethicml.models"]], "agarwal (class in ethicml.models.inprocess.agarwal_reductions)": [[5, "ethicml.models.inprocess.agarwal_reductions.Agarwal"]], "corels (class in ethicml.models.inprocess.manual)": [[5, "ethicml.models.inprocess.manual.Corels"]], "dporacle (class in ethicml.models.inprocess.oracle)": [[5, "ethicml.models.inprocess.oracle.DPOracle"]], "dro (class in ethicml.models.inprocess.fairness_wo_demographics)": [[5, "ethicml.models.inprocess.fairness_wo_demographics.DRO"]], "inalgorithm (class in ethicml.models.inprocess.in_algorithm)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithm"]], "inalgorithmdc (class in ethicml.models.inprocess.in_algorithm)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithmDC"]], "inalgorithmnoparams (class in ethicml.models.inprocess.in_algorithm)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithmNoParams"]], "installedmodel (class in ethicml.models.inprocess.installed_model)": [[5, "ethicml.models.inprocess.installed_model.InstalledModel"]], "kamishima (class in ethicml.models.inprocess.kamishima)": [[5, "ethicml.models.inprocess.kamishima.Kamishima"]], "lr (class in ethicml.models.inprocess.logistic_regression)": [[5, "ethicml.models.inprocess.logistic_regression.LR"]], "lrcv (class in ethicml.models.inprocess.logistic_regression)": [[5, "ethicml.models.inprocess.logistic_regression.LRCV"]], "mlp (class in ethicml.models.inprocess.mlp)": [[5, "ethicml.models.inprocess.mlp.MLP"]], "majority (class in ethicml.models.inprocess.majority)": [[5, "ethicml.models.inprocess.majority.Majority"]], "oracle (class in ethicml.models.inprocess.oracle)": [[5, "ethicml.models.inprocess.oracle.Oracle"]], "reweighting (class in ethicml.models.inprocess.kamiran)": [[5, "ethicml.models.inprocess.kamiran.Reweighting"]], "svm (class in ethicml.models.inprocess.svm)": [[5, "ethicml.models.inprocess.svm.SVM"]], "zafaraccuracy (class in ethicml.models.inprocess.zafar)": [[5, "ethicml.models.inprocess.zafar.ZafarAccuracy"]], "zafarbaseline (class in ethicml.models.inprocess.zafar)": [[5, "ethicml.models.inprocess.zafar.ZafarBaseline"]], "zafareqodds (class in ethicml.models.inprocess.zafar)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOdds"]], "zafareqopp (class in ethicml.models.inprocess.zafar)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOpp"]], "zafarfairness (class in ethicml.models.inprocess.zafar)": [[5, "ethicml.models.inprocess.zafar.ZafarFairness"]], "call_script() (agarwal method)": [[5, "ethicml.models.inprocess.agarwal_reductions.Agarwal.call_script"]], "call_script() (dro method)": [[5, "ethicml.models.inprocess.fairness_wo_demographics.DRO.call_script"]], "call_script() (installedmodel method)": [[5, "ethicml.models.inprocess.installed_model.InstalledModel.call_script"]], "call_script() (kamishima method)": [[5, "ethicml.models.inprocess.kamishima.Kamishima.call_script"]], "call_script() (zafaraccuracy method)": [[5, "ethicml.models.inprocess.zafar.ZafarAccuracy.call_script"]], "call_script() (zafarbaseline method)": [[5, "ethicml.models.inprocess.zafar.ZafarBaseline.call_script"]], "call_script() (zafareqodds method)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOdds.call_script"]], "call_script() (zafareqopp method)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOpp.call_script"]], "call_script() (zafarfairness method)": [[5, "ethicml.models.inprocess.zafar.ZafarFairness.call_script"]], "compute_instance_weights() (in module ethicml.models.inprocess.kamiran)": [[5, "ethicml.models.inprocess.kamiran.compute_instance_weights"]], "ethicml.models.inprocess": [[5, "module-ethicml.models.inprocess"]], "ethicml.models.inprocess.agarwal_reductions": [[5, "module-ethicml.models.inprocess.agarwal_reductions"]], "ethicml.models.inprocess.fairness_wo_demographics": [[5, "module-ethicml.models.inprocess.fairness_wo_demographics"]], "ethicml.models.inprocess.in_algorithm": [[5, "module-ethicml.models.inprocess.in_algorithm"]], "ethicml.models.inprocess.installed_model": [[5, "module-ethicml.models.inprocess.installed_model"]], "ethicml.models.inprocess.kamiran": [[5, "module-ethicml.models.inprocess.kamiran"]], "ethicml.models.inprocess.kamishima": [[5, "module-ethicml.models.inprocess.kamishima"]], "ethicml.models.inprocess.logistic_regression": [[5, "module-ethicml.models.inprocess.logistic_regression"]], "ethicml.models.inprocess.majority": [[5, "module-ethicml.models.inprocess.majority"]], "ethicml.models.inprocess.manual": [[5, "module-ethicml.models.inprocess.manual"]], "ethicml.models.inprocess.mlp": [[5, "module-ethicml.models.inprocess.mlp"]], "ethicml.models.inprocess.oracle": [[5, "module-ethicml.models.inprocess.oracle"]], "ethicml.models.inprocess.svm": [[5, "module-ethicml.models.inprocess.svm"]], "ethicml.models.inprocess.zafar": [[5, "module-ethicml.models.inprocess.zafar"]], "executable (agarwal property)": [[5, "ethicml.models.inprocess.agarwal_reductions.Agarwal.executable"]], "executable (dro property)": [[5, "ethicml.models.inprocess.fairness_wo_demographics.DRO.executable"]], "executable (installedmodel property)": [[5, "ethicml.models.inprocess.installed_model.InstalledModel.executable"]], "executable (kamishima property)": [[5, "ethicml.models.inprocess.kamishima.Kamishima.executable"]], "executable (zafaraccuracy property)": [[5, "ethicml.models.inprocess.zafar.ZafarAccuracy.executable"]], "executable (zafarbaseline property)": [[5, "ethicml.models.inprocess.zafar.ZafarBaseline.executable"]], "executable (zafareqodds property)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOdds.executable"]], "executable (zafareqopp property)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOpp.executable"]], "executable (zafarfairness property)": [[5, "ethicml.models.inprocess.zafar.ZafarFairness.executable"]], "fit() (agarwal method)": [[5, "ethicml.models.inprocess.agarwal_reductions.Agarwal.fit"]], "fit() (corels method)": [[5, "ethicml.models.inprocess.manual.Corels.fit"]], "fit() (dporacle method)": [[5, "ethicml.models.inprocess.oracle.DPOracle.fit"]], "fit() (dro method)": [[5, "ethicml.models.inprocess.fairness_wo_demographics.DRO.fit"]], "fit() (inalgorithm method)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithm.fit"]], "fit() (inalgorithmdc method)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithmDC.fit"]], "fit() (inalgorithmnoparams method)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithmNoParams.fit"]], "fit() (installedmodel method)": [[5, "ethicml.models.inprocess.installed_model.InstalledModel.fit"]], "fit() (kamishima method)": [[5, "ethicml.models.inprocess.kamishima.Kamishima.fit"]], "fit() (lr method)": [[5, "ethicml.models.inprocess.logistic_regression.LR.fit"]], "fit() (lrcv method)": [[5, "ethicml.models.inprocess.logistic_regression.LRCV.fit"]], "fit() (mlp method)": [[5, "ethicml.models.inprocess.mlp.MLP.fit"]], "fit() (majority method)": [[5, "ethicml.models.inprocess.majority.Majority.fit"]], "fit() (oracle method)": [[5, "ethicml.models.inprocess.oracle.Oracle.fit"]], "fit() (reweighting method)": [[5, "ethicml.models.inprocess.kamiran.Reweighting.fit"]], "fit() (svm method)": [[5, "ethicml.models.inprocess.svm.SVM.fit"]], "fit() (zafaraccuracy method)": [[5, "ethicml.models.inprocess.zafar.ZafarAccuracy.fit"]], "fit() (zafarbaseline method)": [[5, "ethicml.models.inprocess.zafar.ZafarBaseline.fit"]], "fit() (zafareqodds method)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOdds.fit"]], "fit() (zafareqopp method)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOpp.fit"]], "fit() (zafarfairness method)": [[5, "ethicml.models.inprocess.zafar.ZafarFairness.fit"]], "hyperparameters (agarwal property)": [[5, "ethicml.models.inprocess.agarwal_reductions.Agarwal.hyperparameters"]], "hyperparameters (corels property)": [[5, "ethicml.models.inprocess.manual.Corels.hyperparameters"]], "hyperparameters (dporacle property)": [[5, "ethicml.models.inprocess.oracle.DPOracle.hyperparameters"]], "hyperparameters (dro property)": [[5, "ethicml.models.inprocess.fairness_wo_demographics.DRO.hyperparameters"]], "hyperparameters (inalgorithm property)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithm.hyperparameters"]], "hyperparameters (inalgorithmdc property)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithmDC.hyperparameters"]], "hyperparameters (inalgorithmnoparams property)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithmNoParams.hyperparameters"]], "hyperparameters (installedmodel property)": [[5, "ethicml.models.inprocess.installed_model.InstalledModel.hyperparameters"]], "hyperparameters (kamishima property)": [[5, "ethicml.models.inprocess.kamishima.Kamishima.hyperparameters"]], "hyperparameters (lr property)": [[5, "ethicml.models.inprocess.logistic_regression.LR.hyperparameters"]], "hyperparameters (lrcv property)": [[5, "ethicml.models.inprocess.logistic_regression.LRCV.hyperparameters"]], "hyperparameters (mlp property)": [[5, "ethicml.models.inprocess.mlp.MLP.hyperparameters"]], "hyperparameters (majority property)": [[5, "ethicml.models.inprocess.majority.Majority.hyperparameters"]], "hyperparameters (oracle property)": [[5, "ethicml.models.inprocess.oracle.Oracle.hyperparameters"]], "hyperparameters (reweighting property)": [[5, "ethicml.models.inprocess.kamiran.Reweighting.hyperparameters"]], "hyperparameters (svm property)": [[5, "ethicml.models.inprocess.svm.SVM.hyperparameters"]], "hyperparameters (zafaraccuracy property)": [[5, "ethicml.models.inprocess.zafar.ZafarAccuracy.hyperparameters"]], "hyperparameters (zafarbaseline property)": [[5, "ethicml.models.inprocess.zafar.ZafarBaseline.hyperparameters"]], "hyperparameters (zafareqodds property)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOdds.hyperparameters"]], "hyperparameters (zafareqopp property)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOpp.hyperparameters"]], "hyperparameters (zafarfairness property)": [[5, "ethicml.models.inprocess.zafar.ZafarFairness.hyperparameters"]], "model_path (agarwal property)": [[5, "ethicml.models.inprocess.agarwal_reductions.Agarwal.model_path"]], "model_path (dro property)": [[5, "ethicml.models.inprocess.fairness_wo_demographics.DRO.model_path"]], "name (agarwal property)": [[5, "ethicml.models.inprocess.agarwal_reductions.Agarwal.name"]], "name (corels property)": [[5, "ethicml.models.inprocess.manual.Corels.name"]], "name (dporacle property)": [[5, "ethicml.models.inprocess.oracle.DPOracle.name"]], "name (dro property)": [[5, "ethicml.models.inprocess.fairness_wo_demographics.DRO.name"]], "name (inalgorithm property)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithm.name"]], "name (inalgorithmdc property)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithmDC.name"]], "name (inalgorithmnoparams property)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithmNoParams.name"]], "name (installedmodel property)": [[5, "ethicml.models.inprocess.installed_model.InstalledModel.name"]], "name (kamishima property)": [[5, "ethicml.models.inprocess.kamishima.Kamishima.name"]], "name (lr property)": [[5, "ethicml.models.inprocess.logistic_regression.LR.name"]], "name (lrcv property)": [[5, "ethicml.models.inprocess.logistic_regression.LRCV.name"]], "name (mlp property)": [[5, "ethicml.models.inprocess.mlp.MLP.name"]], "name (majority property)": [[5, "ethicml.models.inprocess.majority.Majority.name"]], "name (oracle property)": [[5, "ethicml.models.inprocess.oracle.Oracle.name"]], "name (reweighting property)": [[5, "ethicml.models.inprocess.kamiran.Reweighting.name"]], "name (svm property)": [[5, "ethicml.models.inprocess.svm.SVM.name"]], "name (zafaraccuracy property)": [[5, "ethicml.models.inprocess.zafar.ZafarAccuracy.name"]], "name (zafarbaseline property)": [[5, "ethicml.models.inprocess.zafar.ZafarBaseline.name"]], "name (zafareqodds property)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOdds.name"]], "name (zafareqopp property)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOpp.name"]], "name (zafarfairness property)": [[5, "ethicml.models.inprocess.zafar.ZafarFairness.name"]], "predict() (agarwal method)": [[5, "ethicml.models.inprocess.agarwal_reductions.Agarwal.predict"]], "predict() (corels method)": [[5, "ethicml.models.inprocess.manual.Corels.predict"]], "predict() (dporacle method)": [[5, "ethicml.models.inprocess.oracle.DPOracle.predict"]], "predict() (dro method)": [[5, "ethicml.models.inprocess.fairness_wo_demographics.DRO.predict"]], "predict() (inalgorithm method)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithm.predict"]], "predict() (inalgorithmdc method)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithmDC.predict"]], "predict() (inalgorithmnoparams method)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithmNoParams.predict"]], "predict() (installedmodel method)": [[5, "ethicml.models.inprocess.installed_model.InstalledModel.predict"]], "predict() (kamishima method)": [[5, "ethicml.models.inprocess.kamishima.Kamishima.predict"]], "predict() (lr method)": [[5, "ethicml.models.inprocess.logistic_regression.LR.predict"]], "predict() (lrcv method)": [[5, "ethicml.models.inprocess.logistic_regression.LRCV.predict"]], "predict() (mlp method)": [[5, "ethicml.models.inprocess.mlp.MLP.predict"]], "predict() (majority method)": [[5, "ethicml.models.inprocess.majority.Majority.predict"]], "predict() (oracle method)": [[5, "ethicml.models.inprocess.oracle.Oracle.predict"]], "predict() (reweighting method)": [[5, "ethicml.models.inprocess.kamiran.Reweighting.predict"]], "predict() (svm method)": [[5, "ethicml.models.inprocess.svm.SVM.predict"]], "predict() (zafaraccuracy method)": [[5, "ethicml.models.inprocess.zafar.ZafarAccuracy.predict"]], "predict() (zafarbaseline method)": [[5, "ethicml.models.inprocess.zafar.ZafarBaseline.predict"]], "predict() (zafareqodds method)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOdds.predict"]], "predict() (zafareqopp method)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOpp.predict"]], "predict() (zafarfairness method)": [[5, "ethicml.models.inprocess.zafar.ZafarFairness.predict"]], "remove() (installedmodel method)": [[5, "ethicml.models.inprocess.installed_model.InstalledModel.remove"]], "remove() (kamishima method)": [[5, "ethicml.models.inprocess.kamishima.Kamishima.remove"]], "remove() (zafaraccuracy method)": [[5, "ethicml.models.inprocess.zafar.ZafarAccuracy.remove"]], "remove() (zafarbaseline method)": [[5, "ethicml.models.inprocess.zafar.ZafarBaseline.remove"]], "remove() (zafareqodds method)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOdds.remove"]], "remove() (zafareqopp method)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOpp.remove"]], "remove() (zafarfairness method)": [[5, "ethicml.models.inprocess.zafar.ZafarFairness.remove"]], "run() (agarwal method)": [[5, "ethicml.models.inprocess.agarwal_reductions.Agarwal.run"]], "run() (corels method)": [[5, "ethicml.models.inprocess.manual.Corels.run"]], "run() (dporacle method)": [[5, "ethicml.models.inprocess.oracle.DPOracle.run"]], "run() (dro method)": [[5, "ethicml.models.inprocess.fairness_wo_demographics.DRO.run"]], "run() (inalgorithm method)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithm.run"]], "run() (inalgorithmdc method)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithmDC.run"]], "run() (inalgorithmnoparams method)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithmNoParams.run"]], "run() (installedmodel method)": [[5, "ethicml.models.inprocess.installed_model.InstalledModel.run"]], "run() (kamishima method)": [[5, "ethicml.models.inprocess.kamishima.Kamishima.run"]], "run() (lr method)": [[5, "ethicml.models.inprocess.logistic_regression.LR.run"]], "run() (lrcv method)": [[5, "ethicml.models.inprocess.logistic_regression.LRCV.run"]], "run() (mlp method)": [[5, "ethicml.models.inprocess.mlp.MLP.run"]], "run() (majority method)": [[5, "ethicml.models.inprocess.majority.Majority.run"]], "run() (oracle method)": [[5, "ethicml.models.inprocess.oracle.Oracle.run"]], "run() (reweighting method)": [[5, "ethicml.models.inprocess.kamiran.Reweighting.run"]], "run() (svm method)": [[5, "ethicml.models.inprocess.svm.SVM.run"]], "run() (zafaraccuracy method)": [[5, "ethicml.models.inprocess.zafar.ZafarAccuracy.run"]], "run() (zafarbaseline method)": [[5, "ethicml.models.inprocess.zafar.ZafarBaseline.run"]], "run() (zafareqodds method)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOdds.run"]], "run() (zafareqopp method)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOpp.run"]], "run() (zafarfairness method)": [[5, "ethicml.models.inprocess.zafar.ZafarFairness.run"]], "run_test() (agarwal method)": [[5, "ethicml.models.inprocess.agarwal_reductions.Agarwal.run_test"]], "run_test() (corels method)": [[5, "ethicml.models.inprocess.manual.Corels.run_test"]], "run_test() (dporacle method)": [[5, "ethicml.models.inprocess.oracle.DPOracle.run_test"]], "run_test() (dro method)": [[5, "ethicml.models.inprocess.fairness_wo_demographics.DRO.run_test"]], "run_test() (inalgorithm method)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithm.run_test"]], "run_test() (inalgorithmdc method)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithmDC.run_test"]], "run_test() (inalgorithmnoparams method)": [[5, "ethicml.models.inprocess.in_algorithm.InAlgorithmNoParams.run_test"]], "run_test() (installedmodel method)": [[5, "ethicml.models.inprocess.installed_model.InstalledModel.run_test"]], "run_test() (kamishima method)": [[5, "ethicml.models.inprocess.kamishima.Kamishima.run_test"]], "run_test() (lr method)": [[5, "ethicml.models.inprocess.logistic_regression.LR.run_test"]], "run_test() (lrcv method)": [[5, "ethicml.models.inprocess.logistic_regression.LRCV.run_test"]], "run_test() (mlp method)": [[5, "ethicml.models.inprocess.mlp.MLP.run_test"]], "run_test() (majority method)": [[5, "ethicml.models.inprocess.majority.Majority.run_test"]], "run_test() (oracle method)": [[5, "ethicml.models.inprocess.oracle.Oracle.run_test"]], "run_test() (reweighting method)": [[5, "ethicml.models.inprocess.kamiran.Reweighting.run_test"]], "run_test() (svm method)": [[5, "ethicml.models.inprocess.svm.SVM.run_test"]], "run_test() (zafaraccuracy method)": [[5, "ethicml.models.inprocess.zafar.ZafarAccuracy.run_test"]], "run_test() (zafarbaseline method)": [[5, "ethicml.models.inprocess.zafar.ZafarBaseline.run_test"]], "run_test() (zafareqodds method)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOdds.run_test"]], "run_test() (zafareqopp method)": [[5, "ethicml.models.inprocess.zafar.ZafarEqOpp.run_test"]], "run_test() (zafarfairness method)": [[5, "ethicml.models.inprocess.zafar.ZafarFairness.run_test"]], "dpflip (class in ethicml.models.postprocess.dp_flip)": [[6, "ethicml.models.postprocess.dp_flip.DPFlip"]], "hardt (class in ethicml.models.postprocess.hardt)": [[6, "ethicml.models.postprocess.hardt.Hardt"]], "postalgorithm (class in ethicml.models.postprocess.post_algorithm)": [[6, "ethicml.models.postprocess.post_algorithm.PostAlgorithm"]], "ethicml.models.postprocess": [[6, "module-ethicml.models.postprocess"]], "ethicml.models.postprocess.dp_flip": [[6, "module-ethicml.models.postprocess.dp_flip"]], "ethicml.models.postprocess.hardt": [[6, "module-ethicml.models.postprocess.hardt"]], "ethicml.models.postprocess.post_algorithm": [[6, "module-ethicml.models.postprocess.post_algorithm"]], "fit() (dpflip method)": [[6, "ethicml.models.postprocess.dp_flip.DPFlip.fit"]], "fit() (hardt method)": [[6, "ethicml.models.postprocess.hardt.Hardt.fit"]], "fit() (postalgorithm method)": [[6, "ethicml.models.postprocess.post_algorithm.PostAlgorithm.fit"]], "name (dpflip property)": [[6, "ethicml.models.postprocess.dp_flip.DPFlip.name"]], "name (hardt property)": [[6, "ethicml.models.postprocess.hardt.Hardt.name"]], "name (postalgorithm property)": [[6, "ethicml.models.postprocess.post_algorithm.PostAlgorithm.name"]], "predict() (dpflip method)": [[6, "ethicml.models.postprocess.dp_flip.DPFlip.predict"]], "predict() (hardt method)": [[6, "ethicml.models.postprocess.hardt.Hardt.predict"]], "predict() (postalgorithm method)": [[6, "ethicml.models.postprocess.post_algorithm.PostAlgorithm.predict"]], "run() (dpflip method)": [[6, "ethicml.models.postprocess.dp_flip.DPFlip.run"]], "run() (hardt method)": [[6, "ethicml.models.postprocess.hardt.Hardt.run"]], "run() (postalgorithm method)": [[6, "ethicml.models.postprocess.post_algorithm.PostAlgorithm.run"]], "beutel (class in ethicml.models.preprocess.beutel)": [[7, "ethicml.models.preprocess.beutel.Beutel"]], "calders (class in ethicml.models.preprocess.calders)": [[7, "ethicml.models.preprocess.calders.Calders"]], "prealgorithm (class in ethicml.models.preprocess.pre_algorithm)": [[7, "ethicml.models.preprocess.pre_algorithm.PreAlgorithm"]], "upsamplestrategy (class in ethicml.models.preprocess.upsampler)": [[7, "ethicml.models.preprocess.upsampler.UpsampleStrategy"]], "upsampler (class in ethicml.models.preprocess.upsampler)": [[7, "ethicml.models.preprocess.upsampler.Upsampler"]], "vfae (class in ethicml.models.preprocess.vfae)": [[7, "ethicml.models.preprocess.vfae.VFAE"]], "zemel (class in ethicml.models.preprocess.zemel)": [[7, "ethicml.models.preprocess.zemel.Zemel"]], "call_script() (beutel method)": [[7, "ethicml.models.preprocess.beutel.Beutel.call_script"]], "call_script() (vfae method)": [[7, "ethicml.models.preprocess.vfae.VFAE.call_script"]], "call_script() (zemel method)": [[7, "ethicml.models.preprocess.zemel.Zemel.call_script"]], "ethicml.models.preprocess": [[7, "module-ethicml.models.preprocess"]], "ethicml.models.preprocess.beutel": [[7, "module-ethicml.models.preprocess.beutel"]], "ethicml.models.preprocess.calders": [[7, "module-ethicml.models.preprocess.calders"]], "ethicml.models.preprocess.pre_algorithm": [[7, "module-ethicml.models.preprocess.pre_algorithm"]], "ethicml.models.preprocess.upsampler": [[7, "module-ethicml.models.preprocess.upsampler"]], "ethicml.models.preprocess.vfae": [[7, "module-ethicml.models.preprocess.vfae"]], "ethicml.models.preprocess.zemel": [[7, "module-ethicml.models.preprocess.zemel"]], "executable (beutel property)": [[7, "ethicml.models.preprocess.beutel.Beutel.executable"]], "executable (vfae property)": [[7, "ethicml.models.preprocess.vfae.VFAE.executable"]], "executable (zemel property)": [[7, "ethicml.models.preprocess.zemel.Zemel.executable"]], "fit() (beutel method)": [[7, "ethicml.models.preprocess.beutel.Beutel.fit"]], "fit() (calders method)": [[7, "ethicml.models.preprocess.calders.Calders.fit"]], "fit() (prealgorithm method)": [[7, "ethicml.models.preprocess.pre_algorithm.PreAlgorithm.fit"]], "fit() (upsampler method)": [[7, "ethicml.models.preprocess.upsampler.Upsampler.fit"]], "fit() (vfae method)": [[7, "ethicml.models.preprocess.vfae.VFAE.fit"]], "fit() (zemel method)": [[7, "ethicml.models.preprocess.zemel.Zemel.fit"]], "model_path (beutel property)": [[7, "ethicml.models.preprocess.beutel.Beutel.model_path"]], "model_path (vfae property)": [[7, "ethicml.models.preprocess.vfae.VFAE.model_path"]], "model_path (zemel property)": [[7, "ethicml.models.preprocess.zemel.Zemel.model_path"]], "name (beutel property)": [[7, "ethicml.models.preprocess.beutel.Beutel.name"]], "name (calders property)": [[7, "ethicml.models.preprocess.calders.Calders.name"]], "name (prealgorithm property)": [[7, "ethicml.models.preprocess.pre_algorithm.PreAlgorithm.name"]], "name (upsampler property)": [[7, "ethicml.models.preprocess.upsampler.Upsampler.name"]], "name (vfae property)": [[7, "ethicml.models.preprocess.vfae.VFAE.name"]], "name (zemel property)": [[7, "ethicml.models.preprocess.zemel.Zemel.name"]], "out_size (beutel property)": [[7, "ethicml.models.preprocess.beutel.Beutel.out_size"]], "out_size (calders property)": [[7, "ethicml.models.preprocess.calders.Calders.out_size"]], "out_size (prealgorithm property)": [[7, "ethicml.models.preprocess.pre_algorithm.PreAlgorithm.out_size"]], "out_size (upsampler property)": [[7, "ethicml.models.preprocess.upsampler.Upsampler.out_size"]], "out_size (vfae property)": [[7, "ethicml.models.preprocess.vfae.VFAE.out_size"]], "out_size (zemel property)": [[7, "ethicml.models.preprocess.zemel.Zemel.out_size"]], "run() (beutel method)": [[7, "ethicml.models.preprocess.beutel.Beutel.run"]], "run() (calders method)": [[7, "ethicml.models.preprocess.calders.Calders.run"]], "run() (prealgorithm method)": [[7, "ethicml.models.preprocess.pre_algorithm.PreAlgorithm.run"]], "run() (upsampler method)": [[7, "ethicml.models.preprocess.upsampler.Upsampler.run"]], "run() (vfae method)": [[7, "ethicml.models.preprocess.vfae.VFAE.run"]], "run() (zemel method)": [[7, "ethicml.models.preprocess.zemel.Zemel.run"]], "run_test() (beutel method)": [[7, "ethicml.models.preprocess.beutel.Beutel.run_test"]], "run_test() (calders method)": [[7, "ethicml.models.preprocess.calders.Calders.run_test"]], "run_test() (prealgorithm method)": [[7, "ethicml.models.preprocess.pre_algorithm.PreAlgorithm.run_test"]], "run_test() (upsampler method)": [[7, "ethicml.models.preprocess.upsampler.Upsampler.run_test"]], "run_test() (vfae method)": [[7, "ethicml.models.preprocess.vfae.VFAE.run_test"]], "run_test() (zemel method)": [[7, "ethicml.models.preprocess.zemel.Zemel.run_test"]], "transform() (beutel method)": [[7, "ethicml.models.preprocess.beutel.Beutel.transform"]], "transform() (calders method)": [[7, "ethicml.models.preprocess.calders.Calders.transform"]], "transform() (prealgorithm method)": [[7, "ethicml.models.preprocess.pre_algorithm.PreAlgorithm.transform"]], "transform() (upsampler method)": [[7, "ethicml.models.preprocess.upsampler.Upsampler.transform"]], "transform() (vfae method)": [[7, "ethicml.models.preprocess.vfae.VFAE.transform"]], "transform() (zemel method)": [[7, "ethicml.models.preprocess.zemel.Zemel.transform"]], "ethicml.plot": [[8, "module-ethicml.plot"]], "plot_results() (in module ethicml.plot)": [[8, "ethicml.plot.plot_results"]], "save_2d_plot() (in module ethicml.plot)": [[8, "ethicml.plot.save_2d_plot"]], "save_jointplot() (in module ethicml.plot)": [[8, "ethicml.plot.save_jointplot"]], "save_label_plot() (in module ethicml.plot)": [[8, "ethicml.plot.save_label_plot"]], "save_multijointplot() (in module ethicml.plot)": [[8, "ethicml.plot.save_multijointplot"]], "single_plot() (in module ethicml.plot)": [[8, "ethicml.plot.single_plot"]], "cvresults (class in ethicml.run)": [[9, "ethicml.run.CVResults"]], "crossvalidator (class in ethicml.run)": [[9, "ethicml.run.CrossValidator"]], "arrange_in_parallel() (in module ethicml.run)": [[9, "ethicml.run.arrange_in_parallel"]], "best() (cvresults method)": [[9, "ethicml.run.CVResults.best"]], "best_hyper_params() (cvresults method)": [[9, "ethicml.run.CVResults.best_hyper_params"]], "ethicml.run": [[9, "module-ethicml.run"]], "evaluate_models() (in module ethicml.run)": [[9, "ethicml.run.evaluate_models"]], "get_best_in_top_k() (cvresults method)": [[9, "ethicml.run.CVResults.get_best_in_top_k"]], "get_best_result() (cvresults method)": [[9, "ethicml.run.CVResults.get_best_result"]], "load_results() (in module ethicml.run)": [[9, "ethicml.run.load_results"]], "run() (crossvalidator method)": [[9, "ethicml.run.CrossValidator.run"]], "run_async() (crossvalidator method)": [[9, "ethicml.run.CrossValidator.run_async"]], "run_in_parallel() (in module ethicml.run)": [[9, "ethicml.run.run_in_parallel"]], "ethicml": [[10, "module-ethicml"]], "balancedtestsplit (class in ethicml.preprocessing)": [[11, "ethicml.preprocessing.BalancedTestSplit"]], "biaseddebiasedsubsets (class in ethicml.preprocessing)": [[11, "ethicml.preprocessing.BiasedDebiasedSubsets"]], "biasedsubset (class in ethicml.preprocessing)": [[11, "ethicml.preprocessing.BiasedSubset"]], "datasplitter (class in ethicml.preprocessing)": [[11, "ethicml.preprocessing.DataSplitter"]], "labelbinarizer (class in ethicml.preprocessing)": [[11, "ethicml.preprocessing.LabelBinarizer"]], "proportionalsplit (class in ethicml.preprocessing)": [[11, "ethicml.preprocessing.ProportionalSplit"]], "randomsplit (class in ethicml.preprocessing)": [[11, "ethicml.preprocessing.RandomSplit"]], "scalertype (class in ethicml.preprocessing)": [[11, "ethicml.preprocessing.ScalerType"]], "sequentialsplit (class in ethicml.preprocessing)": [[11, "ethicml.preprocessing.SequentialSplit"]], "adjust() (labelbinarizer method)": [[11, "ethicml.preprocessing.LabelBinarizer.adjust"]], "bin_cont_feats() (in module ethicml.preprocessing)": [[11, "ethicml.preprocessing.bin_cont_feats"]], "dataset_from_cond() (in module ethicml.preprocessing)": [[11, "ethicml.preprocessing.dataset_from_cond"]], "domain_split() (in module ethicml.preprocessing)": [[11, "ethicml.preprocessing.domain_split"]], "ethicml.preprocessing": [[11, "module-ethicml.preprocessing"]], "fit() (scalertype method)": [[11, "ethicml.preprocessing.ScalerType.fit"]], "fit_transform() (scalertype method)": [[11, "ethicml.preprocessing.ScalerType.fit_transform"]], "get_biased_and_debiased_subsets() (in module ethicml.preprocessing)": [[11, "ethicml.preprocessing.get_biased_and_debiased_subsets"]], "get_biased_subset() (in module ethicml.preprocessing)": [[11, "ethicml.preprocessing.get_biased_subset"]], "inverse_transform() (scalertype method)": [[11, "ethicml.preprocessing.ScalerType.inverse_transform"]], "post() (labelbinarizer method)": [[11, "ethicml.preprocessing.LabelBinarizer.post"]], "post_only_labels() (labelbinarizer method)": [[11, "ethicml.preprocessing.LabelBinarizer.post_only_labels"]], "query_dt() (in module ethicml.preprocessing)": [[11, "ethicml.preprocessing.query_dt"]], "scale_continuous() (in module ethicml.preprocessing)": [[11, "ethicml.preprocessing.scale_continuous"]], "train_test_split() (in module ethicml.preprocessing)": [[11, "ethicml.preprocessing.train_test_split"]], "transform() (scalertype method)": [[11, "ethicml.preprocessing.ScalerType.transform"]], "activation (class in ethicml.utility)": [[12, "ethicml.utility.Activation"]], "classifiertype (class in ethicml.utility)": [[12, "ethicml.utility.ClassifierType"]], "datatuple (class in ethicml.utility)": [[12, "ethicml.utility.DataTuple"]], "evaltuple (in module ethicml.utility.data_structures)": [[12, "ethicml.utility.data_structures.EvalTuple"]], "fairnesstype (class in ethicml.utility)": [[12, "ethicml.utility.FairnessType"]], "heaviside (class in ethicml.utility)": [[12, "ethicml.utility.Heaviside"]], "hyperparamtype (in module ethicml.utility.data_structures)": [[12, "ethicml.utility.data_structures.HyperParamType"]], "hyperparamvalue (in module ethicml.utility.data_structures)": [[12, "ethicml.utility.data_structures.HyperParamValue"]], "kerneltype (class in ethicml.utility)": [[12, "ethicml.utility.KernelType"]], "labeltuple (class in ethicml.utility)": [[12, "ethicml.utility.LabelTuple"]], "modeltype (class in ethicml.utility)": [[12, "ethicml.utility.ModelType"]], "prediction (class in ethicml.utility)": [[12, "ethicml.utility.Prediction"]], "results (class in ethicml.utility.data_structures)": [[12, "ethicml.utility.data_structures.Results"]], "resultsaggregator (class in ethicml.utility)": [[12, "ethicml.utility.ResultsAggregator"]], "softprediction (class in ethicml.utility)": [[12, "ethicml.utility.SoftPrediction"]], "subgrouptuple (class in ethicml.utility)": [[12, "ethicml.utility.SubgroupTuple"]], "testtuple (in module ethicml.utility.data_structures)": [[12, "ethicml.utility.data_structures.TestTuple"]], "traintestpair (class in ethicml.utility)": [[12, "ethicml.utility.TrainTestPair"]], "trainvalpair (class in ethicml.utility)": [[12, "ethicml.utility.TrainValPair"]], "__len__() (datatuple method)": [[12, "ethicml.utility.DataTuple.__len__"]], "__len__() (labeltuple method)": [[12, "ethicml.utility.LabelTuple.__len__"]], "__len__() (prediction method)": [[12, "ethicml.utility.Prediction.__len__"]], "__len__() (softprediction method)": [[12, "ethicml.utility.SoftPrediction.__len__"]], "__len__() (subgrouptuple method)": [[12, "ethicml.utility.SubgroupTuple.__len__"]], "__len__() (traintestpair method)": [[12, "ethicml.utility.TrainTestPair.__len__"]], "__len__() (trainvalpair method)": [[12, "ethicml.utility.TrainValPair.__len__"]], "aggregate_results() (in module ethicml.utility)": [[12, "ethicml.utility.aggregate_results"]], "append_df() (resultsaggregator method)": [[12, "ethicml.utility.ResultsAggregator.append_df"]], "append_from_csv() (resultsaggregator method)": [[12, "ethicml.utility.ResultsAggregator.append_from_csv"]], "apply() (activation method)": [[12, "ethicml.utility.Activation.apply"]], "apply() (heaviside method)": [[12, "ethicml.utility.Heaviside.apply"]], "apply_to_joined_df() (datatuple method)": [[12, "ethicml.utility.DataTuple.apply_to_joined_df"]], "concat() (in module ethicml.utility)": [[12, "ethicml.utility.concat"]], "count() (traintestpair method)": [[12, "ethicml.utility.TrainTestPair.count"]], "count() (trainvalpair method)": [[12, "ethicml.utility.TrainValPair.count"]], "deep (modeltype attribute)": [[12, "ethicml.utility.ModelType.deep"]], "dp (fairnesstype attribute)": [[12, "ethicml.utility.FairnessType.dp"]], "eq_odds (fairnesstype attribute)": [[12, "ethicml.utility.FairnessType.eq_odds"]], "eq_opp (fairnesstype attribute)": [[12, "ethicml.utility.FairnessType.eq_opp"]], "ethicml.utility": [[12, "module-ethicml.utility"]], "filter_and_map_results() (in module ethicml.utility)": [[12, "ethicml.utility.filter_and_map_results"]], "filter_results() (in module ethicml.utility)": [[12, "ethicml.utility.filter_results"]], "from_df() (datatuple class method)": [[12, "ethicml.utility.DataTuple.from_df"]], "from_df() (labeltuple class method)": [[12, "ethicml.utility.LabelTuple.from_df"]], "from_df() (subgrouptuple class method)": [[12, "ethicml.utility.SubgroupTuple.from_df"]], "from_file() (datatuple class method)": [[12, "ethicml.utility.DataTuple.from_file"]], "from_file() (prediction static method)": [[12, "ethicml.utility.Prediction.from_file"]], "from_file() (softprediction static method)": [[12, "ethicml.utility.SoftPrediction.from_file"]], "from_file() (subgrouptuple class method)": [[12, "ethicml.utility.SubgroupTuple.from_file"]], "from_np() (labeltuple class method)": [[12, "ethicml.utility.LabelTuple.from_np"]], "from_np() (prediction class method)": [[12, "ethicml.utility.Prediction.from_np"]], "from_np() (softprediction class method)": [[12, "ethicml.utility.SoftPrediction.from_np"]], "gbt (classifiertype attribute)": [[12, "ethicml.utility.ClassifierType.gbt"]], "get_n_samples() (datatuple method)": [[12, "ethicml.utility.DataTuple.get_n_samples"]], "get_n_samples() (labeltuple method)": [[12, "ethicml.utility.LabelTuple.get_n_samples"]], "get_n_samples() (subgrouptuple method)": [[12, "ethicml.utility.SubgroupTuple.get_n_samples"]], "get_name() (activation method)": [[12, "ethicml.utility.Activation.get_name"]], "get_name() (heaviside method)": [[12, "ethicml.utility.Heaviside.get_name"]], "get_s_subset() (datatuple method)": [[12, "ethicml.utility.DataTuple.get_s_subset"]], "get_s_subset() (labeltuple method)": [[12, "ethicml.utility.LabelTuple.get_s_subset"]], "get_s_subset() (prediction method)": [[12, "ethicml.utility.Prediction.get_s_subset"]], "get_s_subset() (softprediction method)": [[12, "ethicml.utility.SoftPrediction.get_s_subset"]], "get_s_subset() (subgrouptuple method)": [[12, "ethicml.utility.SubgroupTuple.get_s_subset"]], "hard (prediction property)": [[12, "ethicml.utility.Prediction.hard"]], "hard (softprediction property)": [[12, "ethicml.utility.SoftPrediction.hard"]], "index() (traintestpair method)": [[12, "ethicml.utility.TrainTestPair.index"]], "index() (trainvalpair method)": [[12, "ethicml.utility.TrainValPair.index"]], "info (prediction property)": [[12, "ethicml.utility.Prediction.info"]], "info (softprediction property)": [[12, "ethicml.utility.SoftPrediction.info"]], "linear (kerneltype attribute)": [[12, "ethicml.utility.KernelType.linear"]], "linear (modeltype attribute)": [[12, "ethicml.utility.ModelType.linear"]], "lr (classifiertype attribute)": [[12, "ethicml.utility.ClassifierType.lr"]], "make_results() (in module ethicml.utility)": [[12, "ethicml.utility.make_results"]], "map_over_results_index() (in module ethicml.utility)": [[12, "ethicml.utility.map_over_results_index"]], "poly (kerneltype attribute)": [[12, "ethicml.utility.KernelType.poly"]], "rbf (kerneltype attribute)": [[12, "ethicml.utility.KernelType.rbf"]], "remove_y() (datatuple method)": [[12, "ethicml.utility.DataTuple.remove_y"]], "rename() (datatuple method)": [[12, "ethicml.utility.DataTuple.rename"]], "rename() (labeltuple method)": [[12, "ethicml.utility.LabelTuple.rename"]], "rename() (subgrouptuple method)": [[12, "ethicml.utility.SubgroupTuple.rename"]], "replace() (datatuple method)": [[12, "ethicml.utility.DataTuple.replace"]], "replace() (labeltuple method)": [[12, "ethicml.utility.LabelTuple.replace"]], "replace() (subgrouptuple method)": [[12, "ethicml.utility.SubgroupTuple.replace"]], "replace_data() (datatuple method)": [[12, "ethicml.utility.DataTuple.replace_data"]], "replace_data() (labeltuple method)": [[12, "ethicml.utility.LabelTuple.replace_data"]], "replace_data() (subgrouptuple method)": [[12, "ethicml.utility.SubgroupTuple.replace_data"]], "results (resultsaggregator property)": [[12, "ethicml.utility.ResultsAggregator.results"]], "s (datatuple property)": [[12, "ethicml.utility.DataTuple.s"]], "s (labeltuple property)": [[12, "ethicml.utility.LabelTuple.s"]], "s (subgrouptuple property)": [[12, "ethicml.utility.SubgroupTuple.s"]], "save_as_csv() (resultsaggregator method)": [[12, "ethicml.utility.ResultsAggregator.save_as_csv"]], "save_to_file() (datatuple method)": [[12, "ethicml.utility.DataTuple.save_to_file"]], "save_to_file() (prediction method)": [[12, "ethicml.utility.Prediction.save_to_file"]], "save_to_file() (softprediction method)": [[12, "ethicml.utility.SoftPrediction.save_to_file"]], "save_to_file() (subgrouptuple method)": [[12, "ethicml.utility.SubgroupTuple.save_to_file"]], "shuffle_df() (in module ethicml.utility)": [[12, "ethicml.utility.shuffle_df"]], "sigmoid (kerneltype attribute)": [[12, "ethicml.utility.KernelType.sigmoid"]], "soft (softprediction property)": [[12, "ethicml.utility.SoftPrediction.soft"]], "svm (classifiertype attribute)": [[12, "ethicml.utility.ClassifierType.svm"]], "test (traintestpair attribute)": [[12, "ethicml.utility.TrainTestPair.test"]], "test (trainvalpair attribute)": [[12, "ethicml.utility.TrainValPair.test"]], "train (traintestpair attribute)": [[12, "ethicml.utility.TrainTestPair.train"]], "train (trainvalpair attribute)": [[12, "ethicml.utility.TrainValPair.train"]], "undo_one_hot() (in module ethicml.utility)": [[12, "ethicml.utility.undo_one_hot"]], "x (datatuple property)": [[12, "ethicml.utility.DataTuple.x"]], "x (subgrouptuple property)": [[12, "ethicml.utility.SubgroupTuple.x"]], "y (datatuple property)": [[12, "ethicml.utility.DataTuple.y"]], "y (labeltuple property)": [[12, "ethicml.utility.LabelTuple.y"]]}})