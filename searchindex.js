Search.setIndex({"docnames": ["404", "ethicml.data", "ethicml.metrics", "ethicml.models/base", "ethicml.models/index", "ethicml.models/inprocess", "ethicml.models/postprocess", "ethicml.models/preprocess", "ethicml.plot", "ethicml.run", "ethicml/index", "ethicml/preprocessing", "ethicml/utility", "index", "tutorials/adult_dataset", "tutorials/migration_guide"], "filenames": ["404.rst", "ethicml.data.rst", "ethicml.metrics.rst", "ethicml.models/base.rst", "ethicml.models/index.rst", "ethicml.models/inprocess.rst", "ethicml.models/postprocess.rst", "ethicml.models/preprocess.rst", "ethicml.plot.rst", "ethicml.run.rst", "ethicml/index.rst", "ethicml/preprocessing.rst", "ethicml/utility.rst", "index.rst", "tutorials/adult_dataset.ipynb", "tutorials/migration_guide.rst"], "titles": ["Missing Page", "ethicml.data", "ethicml.metrics", "Algorithms base", "ethicml.models", "Inprocess algorithms", "Postprocess algorithms", "Preprocess algorithms", "ethicml.plot", "ethicml.run", "ethicml", "Data preprocessing", "Utils", "Welcome to EthicML\u2019s documentation!", "Runnning experiments on the Adult dataset", "Migration guide to 1.0"], "terms": {"oh": 0, "thi": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 14], "doesn": 0, "t": [0, 1, 5, 7, 9, 11, 12], "exist": [0, 1, 9], "mai": [0, 11], "have": [0, 1, 7, 11], "move": 0, "you": [0, 5, 12, 13, 14, 15], "can": [0, 2, 5, 8, 9, 13, 14, 15], "get": [0, 1, 8, 9, 12], "back": 0, "document": [0, 5], "ethicml": [0, 7, 11, 12, 14, 15], "here": [0, 5, 13], "modul": [1, 2, 5, 8, 9, 11, 12, 13], "item": 1, "relat": 1, "raw": 1, "csv": [1, 9, 12], "": [1, 2, 5, 7, 8, 9, 11, 12, 14], "object": [1, 2, 5, 7, 8, 9, 11, 12], "class": [1, 2, 3, 5, 6, 7, 9, 11, 12, 14], "function": [1, 2, 8, 9, 11, 12], "acsemploy": 1, "root": 1, "year": [1, 5], "horizon": 1, "state": 1, "split": [1, 5, 11, 14], "sex": [1, 5], "discrete_onli": 1, "fals": [1, 2, 5, 8, 9, 11, 12, 14], "invert_": 1, "base": [1, 2, 4, 9, 11, 12, 13], "acsbas": 1, "The": [1, 2, 5, 6, 9, 10, 11, 12, 14], "ac": 1, "employm": 1, "dataset": [1, 2, 5, 7, 8, 9, 11, 12, 13, 15], "from": [1, 2, 5, 7, 9, 11, 12, 13, 14, 15], "eaamo21": 1, "neurips21": 1, "retir": 1, "adult": [1, 11, 13], "paramet": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12], "str": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12], "path": [1, 3, 5, 7, 9, 12], "int": [1, 2, 5, 6, 7, 8, 9, 11, 12], "list": [1, 2, 3, 5, 7, 8, 9, 11, 12], "bool": [1, 2, 5, 7, 8, 9, 11, 12], "__len__": [1, 12], "return": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12], "number": [1, 2, 5, 6, 7, 9, 11, 12, 15], "element": [1, 12], "type": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12], "static": [1, 12], "cat_lookup": 1, "kei": [1, 9], "look": [1, 13], "up": [1, 11], "categori": 1, "iter": [1, 5, 9, 12], "properti": [1, 2, 3, 5, 6, 7, 9, 12], "class_label": 1, "label": [1, 2, 5, 6, 8, 9, 11, 12, 14], "continuous_featur": 1, "featur": [1, 7, 9, 11, 12, 14], "ar": [1, 2, 3, 5, 7, 8, 9, 11, 12, 13, 15], "continu": [1, 9, 11], "disc_feature_group": 1, "dict": [1, 2, 3, 5, 7, 9, 12], "dictionari": [1, 2, 3, 5, 7, 9], "group": [1, 2, 5, 7], "discrete_featur": 1, "discret": 1, "feature_split": 1, "order": [1, 2], "featureord": 1, "disc_first": 1, "an": [1, 2, 3, 5, 7, 9, 12], "should": [1, 8, 9, 11, 12], "separ": [1, 3, 5, 7], "entri": [1, 8, 9, 12], "sensit": [1, 2, 6, 9, 12, 14], "attribut": [1, 2, 6, 9, 12, 14], "x": [1, 8, 12, 13, 14], "so": [1, 5, 7, 9, 11], "first": [1, 9, 11, 12, 14], "featuresplit": 1, "features_to_remov": 1, "remov": [1, 5, 14], "load": [1, 9, 11, 12], "labels_as_featur": 1, "its": [1, 5, 8], "file": [1, 7, 9, 12], "true": [1, 2, 5, 7, 8, 9, 11, 14], "y": [1, 2, 5, 8, 11, 12, 14], "includ": [1, 14], "datatupl": [1, 2, 5, 6, 7, 8, 9, 11, 12, 14, 15], "datafram": [1, 5, 8, 9, 11, 12, 14], "name": [1, 2, 3, 5, 6, 7, 8, 9, 12], "sens_attr": 1, "acsincom": 1, "target_threshold": 1, "50000": 1, "incom": 1, "admiss": 1, "admissionssplit": 1, "gender": 1, "legacydataset": 1, "ufrg": 1, "alia": [1, 12], "without": [1, 5], "discard_non_one_hot": 1, "classvar": [1, 2], "If": [1, 2, 3, 5, 7, 9, 11, 13, 14], "some": [1, 2, 11], "correctli": 1, "one": [1, 12, 14], "hot": [1, 12], "encod": [1, 7, 12], "discard": 1, "those": [1, 11], "expand_label": 1, "label_typ": 1, "expand": 1, "form": [1, 11], "index": [1, 2, 12, 13], "all": [1, 2, 5, 6, 7, 8, 9, 11, 15], "subfeatur": 1, "panda": [1, 5, 11, 12, 14], "seri": [1, 11, 12], "contain": [1, 8, 10, 12], "liter": [1, 8, 9, 11], "filepath": [1, 8], "which": [1, 2, 5, 8, 9, 11, 12, 13, 14], "get_filename_or_path": 1, "filenam": [1, 8, 9], "pathlib": 1, "get_label_spec": 1, "spec": 1, "labelspecspair": 1, "get_num_sampl": 1, "sampl": [1, 5, 7, 11, 12], "invert_sens_attr": 1, "whether": [1, 2, 5, 12], "invert": [1, 11], "load_aif": 1, "aif360": [1, 7], "experiment": 1, "requir": 1, "librari": 1, "ignor": [1, 12], "check": [1, 2, 5, 12], "i": [1, 2, 3, 5, 6, 7, 9, 11, 12, 14], "yet": [1, 12], "defin": [1, 2, 8], "load_discrete_onli": 1, "onli": [1, 5, 9, 11, 12], "map_to_binari": 1, "convert": [1, 12], "1": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14], "0": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14], "unfiltered_disc_feat_group": 1, "valu": [1, 2, 5, 8, 9, 12, 14], "enum": [1, 2, 5, 7], "adultsplit": 1, "binarize_nation": 1, "binarize_rac": 1, "staticcsvdataset": 1, "uci": [1, 14], "drop": [1, 14], "default": [1, 3, 5, 7, 8, 9, 11, 12, 14], "binari": [1, 14], "what": [1, 12], "us": [1, 2, 3, 5, 7, 8, 9, 11, 12, 14], "nation": 1, "usa": 1, "v": [1, 2], "rest": [1, 11], "race": [1, 14], "white": [1, 14], "avail": [1, 9], "csvdataset": 1, "abc": [1, 2, 3, 5, 6, 7, 11, 12], "abstract": [1, 2, 3, 5, 6, 7, 12], "csvdatasetdc": 1, "compa": [1, 5, 9], "compassplit": 1, "propublica": 1, "credit": 1, "creditsplit": 1, "card": 1, "crime": 1, "crimesplit": 1, "race_binari": [1, 14], "commun": 1, "structur": [1, 10, 15], "hold": 1, "inform": [1, 2], "need": [1, 14], "given": [1, 3, 5, 6, 7, 8, 9, 11, 12], "typeddict": 1, "A": [1, 2, 5, 7, 8, 9, 11, 12], "column": [1, 8, 11, 12, 14], "belong": [1, 12], "len": [1, 12], "self": [1, 2, 5, 6, 7, 12], "clear": 1, "none": [1, 2, 3, 5, 7, 8, 9, 11, 12, 14], "d": 1, "copi": [1, 12], "shallow": 1, "fromkei": 1, "creat": [1, 5, 7, 8, 9, 12], "new": [1, 11, 12], "set": [1, 2, 5, 6, 7, 9, 11], "els": [1, 11, 12], "like": 1, "provid": [1, 8], "view": 1, "pop": 1, "k": [1, 9], "specifi": [1, 3, 5, 7, 9], "correspond": 1, "found": [1, 5], "otherwis": [1, 8, 9], "rais": [1, 12, 14], "keyerror": 1, "popitem": 1, "pair": [1, 9], "2": [1, 2, 5, 7, 9, 12, 14], "tupl": [1, 5, 7, 8, 9, 11, 12], "lifo": 1, "last": [1, 5], "out": [1, 14], "empti": 1, "setdefault": 1, "insert": 1, "updat": 1, "e": [1, 3, 5, 7, 12], "f": [1, 9], "present": [1, 12], "ha": [1, 11, 14], "method": [1, 2, 4, 6, 8, 12, 13, 14], "doe": [1, 2, 5, 8], "lack": 1, "In": [1, 5, 11, 14], "either": [1, 5], "case": 1, "follow": 1, "german": 1, "germansplit": 1, "health": 1, "healthsplit": 1, "heritag": 1, "labelgroup": 1, "multipli": [1, 5], "namedtupl": [1, 12], "definit": [1, 4], "interpret": 1, "singl": [1, 2], "field": [1, 12], "count": [1, 12], "occurr": [1, 12], "start": [1, 12], "stop": [1, 12], "9223372036854775807": [1, 12], "valueerror": [1, 12], "to_remov": 1, "map": [1, 2, 9, 12], "build": 1, "becaus": [1, 8, 12], "thei": [1, 2, 9, 11, 14], "block": 1, "law": 1, "lawsplit": 1, "lsac": 1, "school": 1, "filename_or_path": 1, "cont_featur": 1, "sens_attr_spec": 1, "class_label_spec": 1, "num_sampl": 1, "s_feature_group": 1, "class_feature_group": 1, "discrete_feature_group": 1, "sequenc": [1, 9, 11, 12], "labelspec": 1, "lipton": 1, "synthet": 1, "et": [1, 5, 6, 7], "al": [1, 5, 6, 7], "2018": 1, "describ": [1, 11], "section": 1, "4": [1, 9, 14], "mitig": 1, "ml": 1, "impact": 1, "dispar": 1, "treatment": 1, "articl": 1, "lipton2018do": 1, "titl": [1, 2], "author": 1, "zachari": 1, "mcaulei": 1, "julian": 1, "chouldechova": 1, "alexandra": 1, "journal": 1, "advanc": 1, "neural": 1, "process": [1, 3, 5, 6, 7, 9, 11], "system": 1, "volum": 1, "31": 1, "page": [1, 13], "8125": 1, "8135": 1, "nonbinarytoi": 1, "toi": [1, 7], "test": [1, 5, 6, 7, 9, 11, 12], "nurseri": 1, "nurserysplit": 1, "financ": 1, "sqf": 1, "sqfsplit": 1, "question": 1, "frisk": 1, "2016": 1, "sourc": 1, "http": [1, 2, 5, 13], "www1": 1, "nyc": 1, "gov": 1, "site": 1, "nypd": 1, "stat": 1, "report": [1, 5], "analysi": 1, "stopfrisk": 1, "whose": [1, 2], "size": [1, 5, 7, 8], "locat": 1, "depend": [1, 2, 5], "constructor": [1, 12], "argument": [1, 3, 5, 7], "scenario": 1, "syntheticscenario": 1, "s1": 1, "target": [1, 2], "synthetictarget": 1, "y3": 1, "fair": [1, 5, 6, 7, 9, 12, 13, 14], "1000": 1, "independ": [1, 11], "ancestor": 1, "causal": 1, "model": [1, 7, 9, 12, 13, 15], "gener": [1, 5, 7, 8, 11], "complet": 1, "x_2": 1, "y_2": 1, "x_1": 1, "y_1": 1, "y_3": 1, "where": [1, 5, 7, 8, 9, 11, 12], "input": 1, "bias": [1, 11], "propog": 1, "through": [1, 8], "3": [1, 5, 9, 14], "both": [1, 9, 11], "directli": [1, 9, 12], "available_tabular": 1, "tabular": 1, "create_data_obj": 1, "s_column": [1, 12], "y_column": [1, 12], "additional_to_drop": 1, "configurabledataset": 1, "repres": [1, 8], "labl": 1, "option": [1, 2, 3, 5, 7, 8, 9, 11, 12], "other": 1, "filter_features_by_prefix": 1, "prefix": [1, 2], "filter": [1, 12], "flatten_dict": 1, "flatten": 1, "join": 1, "big": 1, "from_dummi": 1, "categorical_col": 1, "categor": 1, "get_dataset_obj_by_nam": 1, "callabl": [1, 2, 12], "get_discrete_featur": 1, "all_feat": 1, "feats_to_remov": 1, "cont_feat": 1, "aren": 1, "mark": 1, "group_disc_feat_indic": 1, "disc_feat_nam": 1, "prefix_sep": 1, "_": [1, 12], "accord": [1, 9], "segment": 1, "slice": 1, "assum": 1, "maintain": 1, "between": 1, "label_spec_to_feature_list": 1, "extract": 1, "specif": 1, "load_data": 1, "backward": 1, "compat": 1, "instead": [1, 2, 5, 9, 11, 12, 14], "come": 1, "reduce_feature_group": 1, "feature_group": 1, "to_keep": 1, "remaining_feature_nam": 1, "except": [1, 2, 3, 5, 7], "ones": [1, 12], "replac": [1, 11, 12], "kept": 1, "dummi": 1, "summar": 1, "modifi": 1, "single_col_spec": 1, "col": 1, "feature_nam": 1, "spec_from_binary_col": 1, "label_def": 1, "most": [1, 9], "common": [1, 14], "appli": [2, 9, 12], "predict": [2, 5, 6, 9, 12], "result": [2, 8, 9, 12, 13, 14], "exampl": [2, 11, 14], "code": [2, 5], "import": [2, 9, 13, 14], "run": [2, 3, 5, 6, 7, 13, 14, 15], "run_metr": [2, 9], "test_data": 2, "accuraci": [2, 9, 13, 14], "tpr": [2, 13, 14], "AS": 2, "metricstaticnam": 2, "anti": 2, "spuriou": 2, "comput": [2, 5, 9], "p": [2, 11], "hat": 2, "neq": 2, "apply_per_sensit": 2, "per": [2, 9], "get_nam": [2, 12], "score": [2, 9, 12], "actual": [2, 9], "union": [2, 5, 6, 8, 12], "labeltupl": [2, 12], "evaltupl": [2, 9, 12], "float": [2, 5, 7, 8, 9, 11, 12], "abscv": [2, 9], "pos_class": 2, "cv": [2, 9, 14], "absolut": [2, 9], "calder": [2, 4, 5, 14], "verwer": 2, "suppos": 2, "make": [2, 5, 6, 7, 8, 11, 12], "easier": 2, "compar": 2, "possibl": [2, 9, 11], "infer": 2, "data": [2, 5, 6, 7, 8, 9, 10, 12, 13, 15], "when": [2, 5, 9], "treat": 2, "being": 2, "posit": [2, 8], "sklearnmetr": 2, "classif": 2, "averageoddsdiff": 2, "cfmmetric": 2, "averag": [2, 9], "odd": [2, 5], "differ": 2, "tfrac": 2, "left": 2, "fpr_": 2, "tpr_": 2, "right": 2, "indic": 2, "equal": [2, 5], "bcr": 2, "balanc": [2, 5, 7, 11], "rate": 2, "balancedaccuraci": 2, "respect": 2, "confus": 2, "matrix": 2, "dependencytarget": 2, "arg": [2, 7, 11, 12], "kwarg": [2, 7, 11, 12], "strenum": [2, 7, 12], "variabl": [2, 3, 5, 7, 9], "how": [2, 9, 11, 12], "similar": 2, "ani": [2, 7, 9, 12, 14], "f1": 2, "harmon": 2, "mean": [2, 8, 9, 12, 14], "precis": 2, "recal": 2, "fnr": 2, "neg": 2, "fpr": 2, "hsic": 2, "seed": [2, 5, 6, 7, 9, 11, 14], "888": [2, 5, 6, 7, 11], "we": [2, 5, 14], "add": 2, "abil": 2, "take": [2, 5, 6, 7, 9, 11, 12], "As": 2, "larger": [2, 7], "kill": 2, "your": 2, "machin": [2, 13], "labeloutofbound": 2, "Not": 2, "applic": 2, "whole": [2, 11], "with_traceback": 2, "tb": 2, "__traceback__": 2, "metricnotapplic": 2, "instanc": [2, 5, 9, 12], "nmi": 2, "auto": [2, 5, 7], "_dependencemeasur": 2, "normal": [2, 11], "mutual": 2, "also": [2, 8], "call": [2, 3, 5, 7], "measur": [2, 9], "paper": [2, 5, 14], "www": 2, "aclweb": 2, "org": [2, 5], "anthologi": 2, "d07": 2, "1043": 2, "pdf": [2, 8], "npv": 2, "ppv": 2, "persen": [2, 9], "aggreg": [2, 9, 12, 14], "frozenset": [2, 9], "per_sensitive_attribut": 2, "diff": [2, 9], "diff_per_sen": [2, 9], "ratio": [2, 9], "ratio_per_sen": [2, 9], "min": 2, "min_per_sen": 2, "max": 2, "max_per_sen": 2, "diffs_ratio": [2, 9], "equival": 2, "maximum": [2, 9], "minimum": 2, "min_max": 2, "probneg": 2, "probabl": [2, 5, 12], "proboutcom": 2, "logit": [2, 12], "probpo": [2, 13, 14], "renyicorrel": 2, "renyi": 2, "correl": 2, "two": [2, 11], "random": [2, 5, 7, 11], "link": 2, "springer": 2, "com": [2, 5], "content": 2, "10": [2, 5, 7], "1007": 2, "bf02024507": 2, "On": 2, "alfr\u00e9d": 2, "r\u00e9nyi": 2, "robustaccuraci": 2, "across": [2, 9], "wrapper": [2, 5], "around": [2, 5], "sklearn": [2, 5, 9, 11], "tnr": 2, "theil": 2, "yanovich": 2, "arxiv": [2, 5], "ab": [2, 5], "1008": 2, "0492": 2, "aggregate_over_sen": 2, "per_sens_r": 2, "infix": 2, "suffix": 2, "over": [2, 9, 12], "metric_per_sen": 2, "use_sens_nam": [2, 9], "repeatedli": 2, "subset": [2, 9, 11, 12], "share": 2, "senstit": 2, "subprocessalgorithmmixin": [3, 5], "mixin": 3, "subprocess": [3, 5, 7], "call_script": [3, 5, 7], "cmd_arg": [3, 5, 7], "env": [3, 5, 7], "cwd": [3, 5, 7], "python": [3, 5, 7, 14], "script": [3, 5, 7], "thrown": [3, 5, 7], "fail": [3, 5, 7], "string": [3, 5, 7, 8, 9], "pass": [3, 5, 7], "commandlin": [3, 5, 7], "execut": [3, 5, 7], "environ": [3, 5, 7], "g": [3, 5, 7, 12], "usr": [3, 5, 7], "bin": [3, 5, 7, 11], "chang": [3, 5, 7, 12, 14, 15], "work": [3, 5, 7], "directori": [3, 5, 7, 9], "befor": [3, 5, 7], "command": [3, 5, 7], "By": [3, 5, 7, 14], "algorithm": [4, 9, 11, 12, 13, 15], "inprocess": [4, 9, 13], "agarw": 4, "distribution": 4, "robust": 4, "optim": [4, 9], "instal": 4, "kamiran": [4, 7, 13, 14], "kamishima": 4, "logist": [4, 14], "regress": [4, 14], "major": [4, 7], "manual": [4, 14], "mlp": 4, "oracl": 4, "svm": [4, 12, 13, 14], "zafar": 4, "postprocess": [4, 13], "dp": [4, 5], "flip": 4, "hardt": 4, "preprocess": [4, 8, 9, 10, 13], "beutel": 4, "upsampl": [4, 13, 14], "vfae": 4, "zemel": 4, "train": [5, 6, 7, 9, 11, 12], "framework": [5, 6, 7], "inalgorithm": [5, 9], "middl": 5, "pipelin": 5, "fit": [5, 6, 7, 11], "initi": [5, 7, 12], "_i": 5, "hyperparamet": [5, 9], "hyperparamtyp": [5, 12], "subgrouptupl": [5, 6, 12], "evalu": [5, 9, 13, 15], "final": 5, "run_test": [5, 7], "reduc": [5, 7], "finish": [5, 7, 14], "quicker": [5, 7], "inalgorithmdc": 5, "dataclass": 5, "inalgorithmnoparam": 5, "implement": [5, 7], "dir": [5, 7], "factori": [5, 7], "classifi": [5, 12], "ep": 5, "50": [5, 7, 11, 12], "c": [5, 9, 14], "kernel": [5, 12, 14], "inalgorithmsubprocess": 5, "exponenti": 5, "gradient": 5, "websit": 5, "fairnesstyp": [5, 7, 12], "enforc": 5, "classifiertyp": [5, 12], "epsilon": [5, 7], "fo": 5, "kerneltyp": [5, 12, 14], "model_path": [5, 7], "store": [5, 7, 9, 14], "demograph": [5, 6], "dro": 5, "eta": 5, "5": [5, 7, 9, 11, 13, 14], "epoch": [5, 7], "batch_siz": [5, 7], "32": [5, 7], "network_s": 5, "1806": 5, "08010": 5, "toler": 5, "batch": 5, "network": 5, "kind": [5, 12], "complic": 5, "incredibli": 5, "sai": 5, "find": [5, 11, 13], "few": 5, "ago": 5, "It": 5, "unreason": 5, "might": 5, "clash": 5, "galor": 5, "approach": [5, 6, 9], "download": 5, "own": [5, 8], "venv": 5, "everyon": 5, "happi": 5, "installedmodel": 5, "dir_nam": 5, "top_dir": 5, "url": 5, "use_poetri": 5, "magic": [5, 12], "pip": [5, 14], "pipfil": 5, "chosen": [5, 11], "freeli": 5, "top": [5, 9, 15], "repositori": 5, "usual": 5, "simpli": 5, "part": 5, "try": [5, 11], "poetri": 5, "pipenv": 5, "virtualenv": 5, "associ": 5, "_clone_directori": 5, "2012": [5, 7], "reweight": [5, 14], "reweigh": 5, "each": [5, 8, 9, 12, 14], "assign": 5, "weight": 5, "jo": 5, "dure": 5, "select": [5, 9], "compute_instance_weight": 5, "balance_group": 5, "upweight": 5, "numer": 5, "downweight": 5, "them": [5, 6, 8], "done": [5, 8, 14], "invers": [5, 11], "more": 5, "stabl": 5, "small": [5, 9], "algo": [5, 9], "github": 5, "algofair": 5, "comparison": 5, "blob": 5, "master": 5, "kamishimaalgorithm": 5, "py": [5, 14], "sci": 5, "kit": 5, "learn": [5, 7, 13], "lr": [5, 9, 14], "hard": [5, 12], "logisticregress": 5, "see": [5, 7], "detail": [5, 7], "regular": 5, "softpredict": [5, 12], "lrcv": 5, "n_split": 5, "cheap": 5, "hack": 5, "now": [5, 15], "give": 5, "proper": 5, "cross": [5, 8, 9], "valudet": 5, "valid": [5, 9], "corel": 5, "certifi": 5, "rule": 5, "statement": 5, "1704": 5, "01701": 5, "hidden_layer_s": 5, "001": 5, "multi": 5, "layer": 5, "perceptron": 5, "wraper": 5, "scikit": 5, "neural_network": 5, "mlpclassifi": 5, "html": 5, "neuron": 5, "hidden": 5, "perfect": [5, 6], "predictor": 5, "dporacl": 5, "pariti": [5, 6], "rather": 5, "than": 5, "testtupl": [5, 12], "isn": [5, 9], "intend": 5, "want": [5, 14], "do": [5, 6, 7, 11, 14], "saniti": 5, "potenti": 5, "scikitlearn": 5, "support": 5, "vector": 5, "svc": 5, "underli": [5, 12], "penalti": 5, "error": [5, 14], "term": 5, "zafaraccuraci": 5, "gamma": 5, "_zafaralgorithmbas": 5, "zafarbaselin": 5, "zafareqodd": 5, "tau": 5, "mu": 5, "0001": 5, "zafareqopp": 5, "equalis": 5, "opportun": 5, "zafarfair": 5, "post": [6, 11], "transform": [6, 7, 8, 9, 11, 12, 14], "postalgorithm": 6, "train_predict": 6, "correct": [6, 12], "_pa": [6, 7], "test_predict": 6, "dpflip": 6, "randomli": 6, "decis": [6, 12], "achiev": 6, "unfavorable_label": 6, "favorable_label": 6, "pre": [7, 11, 13, 14, 15], "prealgorithm": [7, 9], "util": [7, 10, 11, 13], "data_structur": [7, 11, 12], "out_siz": 7, "posixpath": [7, 9], "enc_siz": 7, "adv_siz": 7, "pred_siz": 7, "enc_activ": 7, "sigmoid": 7, "adv_activ": 7, "64": 7, "y_loss": 7, "crossentropyloss": 7, "s_loss": 7, "bceloss": 7, "adv_weight": 7, "validation_pcnt": 7, "prealgorithmsubprocess": 7, "adversari": 7, "represent": 7, "_p": 7, "massag": 7, "preferable_class": 7, "disadvantaged_group": 7, "simpl": [7, 9], "subgroup": 7, "same": [7, 9, 11], "upsamplestrategi": 7, "strategi": 7, "variat": 7, "louizo": 7, "supervis": 7, "latent_dim": 7, "z1_enc_siz": 7, "z2_enc_siz": 7, "z1_dec_siz": 7, "threshold": 7, "cluster": 7, "ax": [7, 8], "01": 7, "ai": [7, 13], "az": 7, "max_it": 7, "5000": 7, "maxfun": 7, "1e": [7, 9], "05": 7, "lfr": 7, "tool": 8, "plot_result": [8, 13], "metric_i": 8, "metric_x": 8, "ptype": 8, "box": 8, "save": [8, 12], "dpi": 8, "300": 8, "transforms_separ": 8, "standard": [8, 11], "deviat": 8, "alreadi": 8, "metric": [8, 9, 12, 13, 14, 15], "axi": 8, "scatter": 8, "line": 8, "figur": 8, "matplotlib": 8, "pyplot": 8, "save_2d_plot": 8, "2d": 8, "save_jointplot": 8, "dim": 8, "joint": 8, "save_label_plot": 8, "save_multijointplot": 8, "single_plot": 8, "xaxi": 8, "yaxi": 8, "legend_po": 8, "outsid": 8, "legend_yanchor": 8, "markers": 8, "6": [8, 9, 14, 15], "alternating_styl": 8, "include_nan_entri": 8, "individu": 8, "nice": 8, "interfac": 8, "multipl": 8, "itself": 8, "identifi": [8, 9], "insid": 8, "legend": 8, "vertic": 8, "direct": 8, "begin": 8, "marker": 8, "altern": 8, "style": [8, 9], "nan": [8, 14], "still": 8, "appear": 8, "someth": 8, "wa": [8, 9], "obtain": 9, "cvresult": 9, "experi": [9, 13], "meant": 9, "raw_storag": 9, "access": 9, "fold": 9, "Or": 9, "mean_storag": 9, "em": [9, 14], "train_test_split": [9, 11], "hyperparam": 9, "crossvalid": 9, "primari": 9, "fair_measur": 9, "cv_result": 9, "best_result": 9, "get_best_in_top_k": 9, "top_k": 9, "print": 9, "best": 9, "param": 9, "resulttupl": 9, "initialis": [9, 12], "hyper": 9, "perform": [9, 13], "best_hyper_param": 9, "interest": 9, "secondari": 9, "sort": [9, 14], "second": 9, "time": 9, "consid": 9, "get_best_result": 9, "combin": 9, "max_parallel": 9, "lr_cv": 9, "parallel": [9, 14], "cpu": 9, "run_async": 9, "asynchron": 9, "arrange_in_parallel": 9, "num_job": 9, "arrang": 9, "embarrassingli": 9, "_rt": 9, "consist": 9, "dataseq": 9, "job": 9, "mani": [9, 11, 12], "evaluate_model": [9, 12, 13, 14], "preprocess_model": [9, 13, 14], "inprocess_model": [9, 13, 14], "per_sens_metr": [9, 13, 14], "repeat": [9, 12, 13, 14], "test_mod": 9, "delete_previ": 9, "splitter": 9, "topic": 9, "fair_pipelin": 9, "scaler": [9, 11, 14], "repeat_on": 9, "faster": 9, "delet": 9, "previou": 9, "datasplitt": [9, 11], "custom": 9, "prepend": [9, 12], "output": 9, "scalertyp": [9, 11], "vari": 9, "load_result": 9, "dataset_nam": 9, "transform_nam": 9, "outdir": 9, "run_in_parallel": 9, "inseq": 9, "preseq": 9, "inresult": 9, "preresult": 9, "abstractset": 9, "sen": 9, "senisit": 9, "refer": 9, "main": 10, "namespac": [10, 15], "alias": 10, "wai": 11, "balancedtestsplit": 11, "balance_typ": 11, "train_percentag": 11, "8": [11, 12, 14], "start_se": 11, "randomsplit": 11, "proport": 11, "25": 11, "much": 11, "biaseddebiasedsubset": 11, "unbiased_pcnt": 11, "mixing_factor": 11, "42": 11, "fixed_unbias": 11, "debias": 11, "mix": 11, "factor": 11, "id": 11, "reserv": 11, "unbias": 11, "biasedsubset": 11, "data_effici": 11, "keep": 11, "point": 11, "labelbinar": 11, "adjust": 11, "post_only_label": 11, "proportionalsplit": 11, "while": 11, "preserv": 11, "protocol": 11, "df": [11, 12], "fit_transform": 11, "inverse_transform": 11, "sequentialsplit": 11, "n": 11, "shuffl": [11, 12], "bin_cont_feat": 11, "fetur": 11, "ordin": 11, "afresh": 11, "been": 11, "dataset_from_cond": 11, "cond": 11, "meet": 11, "condit": 11, "domain_split": 11, "datatup": 11, "tr_cond": 11, "te_cond": 11, "plu": 11, "percentag": 11, "again": 11, "get_biased_and_debiased_subset": 11, "contrast": 11, "get_biased_subset": 11, "realli": [11, 12], "don": [11, 12], "sum": 11, "behavior": 11, "everywher": 11, "just": [11, 12], "maxim": 11, "query_dt": 11, "query_str": 11, "queri": 11, "scale_continu": 11, "sclae": 11, "scale": 11, "must": 11, "api": 11, "revers": 11, "oper": 11, "random_se": 11, "num_test_sampl": 11, "along": 11, "row": 11, "reproduc": 11, "thing": 12, "anywher": 12, "activ": 12, "soft_output": 12, "soft": 12, "numpi": 12, "ndarrai": 12, "s_in_x": 12, "subsetmixin": 12, "overwrit": 12, "apply_to_joined_df": 12, "mapper": 12, "concaten": 12, "classmethod": 12, "from_df": 12, "pd": 12, "from_fil": 12, "data_path": 12, "npz": 12, "get_n_sampl": 12, "num": 12, "500": 12, "get_s_subset": 12, "remove_i": 12, "renam": 12, "replace_data": 12, "getter": 12, "save_to_fil": 12, "heavisid": 12, "accept": 12, "abov": 12, "from_np": 12, "s_name": 12, "y_name": 12, "arrai": 12, "modeltyp": 12, "info": 12, "length": 12, "npz_path": 12, "pred": 12, "construct": 12, "s_data": 12, "addit": 12, "about": 12, "resultsaggreg": 12, "append_df": 12, "data_fram": 12, "append": [12, 14], "append_from_csv": 12, "csv_file": 12, "save_as_csv": 12, "file_path": 12, "np": 12, "traintestpair": 12, "trainvalpair": 12, "aggregate_result": 12, "std": [12, 14], "aggreat": 12, "concat": [12, 14], "datatup_list": 12, "ignore_index": [12, 14], "filter_and_map_result": 12, "old": 12, "filter_result": 12, "pandasindex": 12, "make_result": 12, "alwai": 12, "map_over_results_index": 12, "shuffle_df": 12, "random_st": 12, "undo_one_hot": 12, "new_column_nam": 12, "undo": 12, "hyperparamvalu": 12, "wearep": 13, "packag": 13, "aim": 13, "increas": 13, "account": 13, "transpar": 13, "plot": [13, 15], "prob_pos_male_0": 13, "male_1": 13, "migrat": 13, "guid": 13, "runn": 13, "search": 13, "pypi": 14, "often": 14, "literatur": 14, "assert": 14, "45222": 14, "101": 14, "shape": 14, "compris": 14, "member": 14, "sex_mal": 14, "to_fram": 14, "head": 14, "could": 14, "task": 14, "98": 14, "howev": 14, "re": 14, "go": 14, "fairgp": 14, "not_whit": 14, "fortun": 14, "race_whit": 14, "linear": 14, "n_job": 14, "backend": 14, "sequentialbackend": 14, "concurr": 14, "worker": 14, "elaps": 14, "remain": 14, "9": 14, "home": 14, "tmk": 14, "dev": 14, "325": 14, "futurewarn": 14, "frame": 14, "deprec": 14, "futur": 14, "version": [14, 15], "results_df": 14, "df_row": 14, "7": 14, "accuracy_race_white_0": 14, "race_white_1": 14, "accuracy_race_white_1": 14, "tpr_race_white_0": 14, "tpr_race_white_1": 14, "model_se": 14, "prob_pos_race_white_0": 14, "prob_pos_race_white_1": 14, "split_id": 14, "no_transform": 14, "851078": 14, "899126": 14, "055818": 14, "937920": 14, "843309": 14, "925891": 14, "621495": 14, "008103": 14, "986962": 14, "613392": 14, "142176": 14, "074109": 14, "657354": 14, "216286": 14, "851962": 14, "898332": 14, "053868": 14, "940036": 14, "844464": 14, "914970": 14, "593458": 14, "026288": 14, "957583": 14, "619746": 14, "133439": 14, "085030": 14, "610792": 14, "218469": 14, "amp": 14, "850636": 14, "894361": 14, "050795": 14, "943205": 14, "843565": 14, "931427": 14, "009081": 14, "985389": 14, "612414": 14, "146942": 14, "068573": 14, "681818": 14, "215515": 14, "841902": 14, "884365": 14, "049134": 14, "944442": 14, "835231": 14, "553922": 14, "016474": 14, "971119": 14, "570395": 14, "133550": 14, "660737": 14, "202124": 14, "2410": 14, "843449": 14, "888436": 14, "052054": 14, "941409": 14, "836382": 14, "929112": 14, "558824": 14, "013500": 14, "976411": 14, "572324": 14, "131107": 14, "070888": 14, "649061": 14, "201996": 14, "844002": 14, "887622": 14, "050472": 14, "943138": 14, "837150": 14, "932603": 14, "578431": 14, "002572": 14, "995574": 14, "581003": 14, "138436": 14, "067397": 14, "672566": 14, "205833": 14, "uniform": 14, "849309": 14, "895155": 14, "053259": 14, "940503": 14, "841896": 14, "923988": 14, "612150": 14, "003686": 14, "994014": 14, "615836": 14, "142971": 14, "076012": 14, "652885": 14, "218983": 14, "850083": 14, "896743": 14, "054206": 14, "939553": 14, "842538": 14, "929254": 14, "616822": 14, "009784": 14, "984138": 14, "607038": 14, "070746": 14, "668972": 14, "213717": 14, "051718": 14, "942225": 14, "843437": 14, "925529": 14, "074471": 14, "657513": 14, "217442": 14, "842565": 14, "885179": 14, "049309": 14, "944295": 14, "835871": 14, "936138": 14, "568627": 14, "001768": 14, "996901": 14, "137622": 14, "063862": 14, "683043": 14, "201484": 14, "840575": 14, "885993": 14, "052554": 14, "940684": 14, "833440": 14, "946316": 14, "588235": 14, "030858": 14, "947541": 14, "557377": 14, "143322": 14, "053684": 14, "727501": 14, "197007": 14, "11": 14, "groupbi": 14, "level": [14, 15], "agg": 14, "tmp": 14, "ipykernel_77604": 14, "1188678509": 14, "39": 14, "did": 14, "successfulli": 14, "op": 14, "avoid": 14, "warn": 14, "845955": 14, "004519": 14, "941926": 14, "002026": 14, "985585": 14, "019223": 14, "678826": 14, "026941": 14, "847172": 14, "004514": 14, "941692": 14, "002408": 14, "978839": 14, "013463": 14, "655388": 14, "024718": 14, "There": 15, "were": 15, "break": 15, "longer": 15, "directrli": 15, "etc": 15, "helper": 15, "visual": 15}, "objects": {"": [[10, 0, 0, "-", "ethicml"]], "ethicml": [[1, 0, 0, "-", "data"], [2, 0, 0, "-", "metrics"], [4, 0, 0, "-", "models"], [8, 0, 0, "-", "plot"], [11, 0, 0, "-", "preprocessing"], [9, 0, 0, "-", "run"], [12, 0, 0, "-", "utility"]], "ethicml.data": [[1, 1, 1, "", "AcsEmployment"], [1, 1, 1, "", "AcsIncome"], [1, 1, 1, "", "Admissions"], [1, 1, 1, "", "AdmissionsSplits"], [1, 1, 1, "", "Adult"], [1, 1, 1, "", "AdultSplits"], [1, 1, 1, "", "CSVDataset"], [1, 1, 1, "", "CSVDatasetDC"], [1, 1, 1, "", "Compas"], [1, 1, 1, "", "CompasSplits"], [1, 1, 1, "", "Credit"], [1, 1, 1, "", "CreditSplits"], [1, 1, 1, "", "Crime"], [1, 1, 1, "", "CrimeSplits"], [1, 1, 1, "", "Dataset"], [1, 1, 1, "", "FeatureOrder"], [1, 1, 1, "", "FeatureSplit"], [1, 1, 1, "", "German"], [1, 1, 1, "", "GermanSplits"], [1, 1, 1, "", "Health"], [1, 1, 1, "", "HealthSplits"], [1, 1, 1, "", "LabelGroup"], [1, 1, 1, "", "LabelSpecsPair"], [1, 1, 1, "", "Law"], [1, 1, 1, "", "LawSplits"], [1, 1, 1, "", "LegacyDataset"], [1, 1, 1, "", "Lipton"], [1, 1, 1, "", "NonBinaryToy"], [1, 1, 1, "", "Nursery"], [1, 1, 1, "", "NurserySplits"], [1, 1, 1, "", "Sqf"], [1, 1, 1, "", "SqfSplits"], [1, 1, 1, "", "StaticCSVDataset"], [1, 1, 1, "", "Synthetic"], [1, 1, 1, "", "SyntheticScenarios"], [1, 1, 1, "", "SyntheticTargets"], [1, 1, 1, "", "Toy"], [1, 5, 1, "", "available_tabular"], [1, 5, 1, "", "create_data_obj"], [1, 5, 1, "", "filter_features_by_prefixes"], [1, 5, 1, "", "flatten_dict"], [1, 5, 1, "", "from_dummies"], [1, 5, 1, "", "get_dataset_obj_by_name"], [1, 5, 1, "", "get_discrete_features"], [1, 5, 1, "", "group_disc_feat_indices"], [1, 5, 1, "", "label_spec_to_feature_list"], [1, 5, 1, "", "load_data"], [1, 5, 1, "", "reduce_feature_group"], [1, 5, 1, "", "single_col_spec"], [1, 5, 1, "", "spec_from_binary_cols"]], "ethicml.data.AcsEmployment": [[1, 2, 1, "", "__len__"], [1, 2, 1, "", "cat_lookup"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "features_to_remove"], [1, 2, 1, "", "load"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"]], "ethicml.data.AcsIncome": [[1, 2, 1, "", "__len__"], [1, 2, 1, "", "cat_lookup"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "features_to_remove"], [1, 2, 1, "", "load"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"]], "ethicml.data.Admissions": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "expand_labels"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Adult": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "expand_labels"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.CSVDataset": [[1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "expand_labels"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.CSVDatasetDC": [[1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "expand_labels"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Compas": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "expand_labels"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Credit": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "expand_labels"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Crime": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "expand_labels"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Dataset": [[1, 2, 1, "", "__len__"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "feature_split"], [1, 2, 1, "", "load"], [1, 3, 1, "", "name"]], "ethicml.data.FeatureSplit": [[1, 2, 1, "", "__len__"], [1, 2, 1, "", "clear"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "fromkeys"], [1, 2, 1, "", "get"], [1, 2, 1, "", "items"], [1, 2, 1, "", "keys"], [1, 2, 1, "", "pop"], [1, 2, 1, "", "popitem"], [1, 2, 1, "", "setdefault"], [1, 2, 1, "", "update"], [1, 2, 1, "", "values"]], "ethicml.data.German": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "expand_labels"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Health": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "expand_labels"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.LabelGroup": [[1, 2, 1, "", "__len__"], [1, 4, 1, "", "columns"], [1, 2, 1, "", "count"], [1, 2, 1, "", "index"], [1, 4, 1, "", "multiplier"]], "ethicml.data.LabelSpecsPair": [[1, 2, 1, "", "__len__"], [1, 2, 1, "", "count"], [1, 2, 1, "", "index"], [1, 4, 1, "", "s"], [1, 4, 1, "", "to_remove"], [1, 4, 1, "", "y"]], "ethicml.data.Law": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "expand_labels"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.LegacyDataset": [[1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "expand_labels"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Lipton": [[1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "expand_labels"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.NonBinaryToy": [[1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "expand_labels"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Nursery": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "expand_labels"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Sqf": [[1, 4, 1, "", "Splits"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "expand_labels"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.StaticCSVDataset": [[1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "expand_labels"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Synthetic": [[1, 4, 1, "", "Scenarios"], [1, 4, 1, "", "Targets"], [1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "expand_labels"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.data.Toy": [[1, 2, 1, "", "__len__"], [1, 3, 1, "", "class_labels"], [1, 3, 1, "", "continuous_features"], [1, 3, 1, "", "disc_feature_groups"], [1, 4, 1, "", "discard_non_one_hot"], [1, 3, 1, "", "discrete_features"], [1, 2, 1, "", "expand_labels"], [1, 2, 1, "", "feature_split"], [1, 3, 1, "", "filepath"], [1, 2, 1, "", "get_filename_or_path"], [1, 2, 1, "", "get_label_specs"], [1, 2, 1, "", "get_num_samples"], [1, 3, 1, "", "invert_sens_attr"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_aif"], [1, 3, 1, "", "load_discrete_only"], [1, 4, 1, "", "map_to_binary"], [1, 3, 1, "", "name"], [1, 3, 1, "", "sens_attrs"], [1, 3, 1, "", "unfiltered_disc_feat_groups"]], "ethicml.metrics": [[2, 1, 1, "", "AS"], [2, 1, 1, "", "AbsCV"], [2, 1, 1, "", "Accuracy"], [2, 1, 1, "", "AverageOddsDiff"], [2, 1, 1, "", "BCR"], [2, 1, 1, "", "BalancedAccuracy"], [2, 1, 1, "", "CV"], [2, 1, 1, "", "CfmMetric"], [2, 1, 1, "", "DependencyTarget"], [2, 1, 1, "", "F1"], [2, 1, 1, "", "FNR"], [2, 1, 1, "", "FPR"], [2, 1, 1, "", "Hsic"], [2, 6, 1, "", "LabelOutOfBounds"], [2, 1, 1, "", "Metric"], [2, 6, 1, "", "MetricNotApplicable"], [2, 1, 1, "", "MetricStaticName"], [2, 1, 1, "", "NMI"], [2, 1, 1, "", "NPV"], [2, 1, 1, "", "PPV"], [2, 1, 1, "", "PerSens"], [2, 1, 1, "", "ProbNeg"], [2, 1, 1, "", "ProbOutcome"], [2, 1, 1, "", "ProbPos"], [2, 1, 1, "", "RenyiCorrelation"], [2, 1, 1, "", "RobustAccuracy"], [2, 1, 1, "", "SklearnMetric"], [2, 1, 1, "", "TNR"], [2, 1, 1, "", "TPR"], [2, 1, 1, "", "Theil"], [2, 1, 1, "", "Yanovich"], [2, 5, 1, "", "aggregate_over_sens"], [2, 5, 1, "", "diff_per_sens"], [2, 5, 1, "", "max_per_sens"], [2, 5, 1, "", "metric_per_sens"], [2, 5, 1, "", "min_per_sens"], [2, 5, 1, "", "ratio_per_sens"]], "ethicml.metrics.AS": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.AbsCV": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.Accuracy": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.AverageOddsDiff": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.BCR": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.BalancedAccuracy": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.CV": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.CfmMetric": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.F1": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.FNR": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.FPR": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.Hsic": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.LabelOutOfBounds": [[2, 2, 1, "", "with_traceback"]], "ethicml.metrics.Metric": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.MetricNotApplicable": [[2, 2, 1, "", "with_traceback"]], "ethicml.metrics.MetricStaticName": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.NMI": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.NPV": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.PPV": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.PerSens": [[2, 4, 1, "", "ALL"], [2, 4, 1, "", "DIFFS"], [2, 4, 1, "", "DIFFS_RATIOS"], [2, 4, 1, "", "MAX"], [2, 4, 1, "", "MIN"], [2, 4, 1, "", "MIN_MAX"], [2, 4, 1, "", "RATIOS"]], "ethicml.metrics.ProbNeg": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.ProbOutcome": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.ProbPos": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.RenyiCorrelation": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.RobustAccuracy": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.SklearnMetric": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.TNR": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.TPR": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 4, 1, "", "labels"], [2, 3, 1, "", "name"], [2, 4, 1, "", "pos_class"], [2, 2, 1, "", "score"]], "ethicml.metrics.Theil": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.metrics.Yanovich": [[2, 4, 1, "", "apply_per_sensitive"], [2, 2, 1, "", "get_name"], [2, 3, 1, "", "name"], [2, 2, 1, "", "score"]], "ethicml.models": [[3, 0, 0, "-", "algorithm_base"], [5, 0, 0, "-", "inprocess"], [6, 0, 0, "-", "postprocess"], [7, 0, 0, "-", "preprocess"]], "ethicml.models.algorithm_base": [[3, 1, 1, "", "Algorithm"], [3, 1, 1, "", "SubprocessAlgorithmMixin"]], "ethicml.models.algorithm_base.Algorithm": [[3, 3, 1, "", "name"]], "ethicml.models.algorithm_base.SubprocessAlgorithmMixin": [[3, 2, 1, "", "call_script"], [3, 3, 1, "", "executable"]], "ethicml.models.inprocess": [[5, 0, 0, "-", "agarwal_reductions"], [5, 0, 0, "-", "fairness_wo_demographics"], [5, 0, 0, "-", "in_algorithm"], [5, 0, 0, "-", "installed_model"], [5, 0, 0, "-", "kamiran"], [5, 0, 0, "-", "kamishima"], [5, 0, 0, "-", "logistic_regression"], [5, 0, 0, "-", "majority"], [5, 0, 0, "-", "manual"], [5, 0, 0, "-", "mlp"], [5, 0, 0, "-", "oracle"], [5, 0, 0, "-", "svm"], [5, 0, 0, "-", "zafar"]], "ethicml.models.inprocess.agarwal_reductions": [[5, 1, 1, "", "Agarwal"]], "ethicml.models.inprocess.agarwal_reductions.Agarwal": [[5, 2, 1, "", "call_script"], [5, 3, 1, "", "executable"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "model_path"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.fairness_wo_demographics": [[5, 1, 1, "", "DRO"]], "ethicml.models.inprocess.fairness_wo_demographics.DRO": [[5, 2, 1, "", "call_script"], [5, 3, 1, "", "executable"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "model_path"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.in_algorithm": [[5, 1, 1, "", "InAlgorithm"], [5, 1, 1, "", "InAlgorithmDC"], [5, 1, 1, "", "InAlgorithmNoParams"]], "ethicml.models.inprocess.in_algorithm.InAlgorithm": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.in_algorithm.InAlgorithmDC": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.in_algorithm.InAlgorithmNoParams": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.installed_model": [[5, 1, 1, "", "InstalledModel"]], "ethicml.models.inprocess.installed_model.InstalledModel": [[5, 2, 1, "", "call_script"], [5, 3, 1, "", "executable"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.kamiran": [[5, 1, 1, "", "Reweighting"], [5, 5, 1, "", "compute_instance_weights"]], "ethicml.models.inprocess.kamiran.Reweighting": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.kamishima": [[5, 1, 1, "", "Kamishima"]], "ethicml.models.inprocess.kamishima.Kamishima": [[5, 2, 1, "", "call_script"], [5, 3, 1, "", "executable"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.logistic_regression": [[5, 1, 1, "", "LR"], [5, 1, 1, "", "LRCV"]], "ethicml.models.inprocess.logistic_regression.LR": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.logistic_regression.LRCV": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.majority": [[5, 1, 1, "", "Majority"]], "ethicml.models.inprocess.majority.Majority": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.manual": [[5, 1, 1, "", "Corels"]], "ethicml.models.inprocess.manual.Corels": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.mlp": [[5, 1, 1, "", "MLP"]], "ethicml.models.inprocess.mlp.MLP": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.oracle": [[5, 1, 1, "", "DPOracle"], [5, 1, 1, "", "Oracle"]], "ethicml.models.inprocess.oracle.DPOracle": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.oracle.Oracle": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.svm": [[5, 1, 1, "", "SVM"]], "ethicml.models.inprocess.svm.SVM": [[5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.zafar": [[5, 1, 1, "", "ZafarAccuracy"], [5, 1, 1, "", "ZafarBaseline"], [5, 1, 1, "", "ZafarEqOdds"], [5, 1, 1, "", "ZafarEqOpp"], [5, 1, 1, "", "ZafarFairness"]], "ethicml.models.inprocess.zafar.ZafarAccuracy": [[5, 2, 1, "", "call_script"], [5, 3, 1, "", "executable"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.zafar.ZafarBaseline": [[5, 2, 1, "", "call_script"], [5, 3, 1, "", "executable"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.zafar.ZafarEqOdds": [[5, 2, 1, "", "call_script"], [5, 3, 1, "", "executable"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.zafar.ZafarEqOpp": [[5, 2, 1, "", "call_script"], [5, 3, 1, "", "executable"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.inprocess.zafar.ZafarFairness": [[5, 2, 1, "", "call_script"], [5, 3, 1, "", "executable"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "hyperparameters"], [5, 3, 1, "", "name"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "run"], [5, 2, 1, "", "run_test"]], "ethicml.models.postprocess": [[6, 0, 0, "-", "dp_flip"], [6, 0, 0, "-", "hardt"], [6, 0, 0, "-", "post_algorithm"]], "ethicml.models.postprocess.dp_flip": [[6, 1, 1, "", "DPFlip"]], "ethicml.models.postprocess.dp_flip.DPFlip": [[6, 2, 1, "", "fit"], [6, 3, 1, "", "name"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "run"]], "ethicml.models.postprocess.hardt": [[6, 1, 1, "", "Hardt"]], "ethicml.models.postprocess.hardt.Hardt": [[6, 2, 1, "", "fit"], [6, 3, 1, "", "name"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "run"]], "ethicml.models.postprocess.post_algorithm": [[6, 1, 1, "", "PostAlgorithm"]], "ethicml.models.postprocess.post_algorithm.PostAlgorithm": [[6, 2, 1, "", "fit"], [6, 3, 1, "", "name"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "run"]], "ethicml.models.preprocess": [[7, 0, 0, "-", "beutel"], [7, 0, 0, "-", "calders"], [7, 0, 0, "-", "pre_algorithm"], [7, 0, 0, "-", "upsampler"], [7, 0, 0, "-", "vfae"], [7, 0, 0, "-", "zemel"]], "ethicml.models.preprocess.beutel": [[7, 1, 1, "", "Beutel"]], "ethicml.models.preprocess.beutel.Beutel": [[7, 2, 1, "", "call_script"], [7, 3, 1, "", "executable"], [7, 2, 1, "", "fit"], [7, 3, 1, "", "model_path"], [7, 3, 1, "", "name"], [7, 3, 1, "", "out_size"], [7, 2, 1, "", "run"], [7, 2, 1, "", "run_test"], [7, 2, 1, "", "transform"]], "ethicml.models.preprocess.calders": [[7, 1, 1, "", "Calders"]], "ethicml.models.preprocess.calders.Calders": [[7, 2, 1, "", "fit"], [7, 3, 1, "", "name"], [7, 3, 1, "", "out_size"], [7, 2, 1, "", "run"], [7, 2, 1, "", "run_test"], [7, 2, 1, "", "transform"]], "ethicml.models.preprocess.pre_algorithm": [[7, 1, 1, "", "PreAlgorithm"]], "ethicml.models.preprocess.pre_algorithm.PreAlgorithm": [[7, 2, 1, "", "fit"], [7, 3, 1, "", "name"], [7, 3, 1, "", "out_size"], [7, 2, 1, "", "run"], [7, 2, 1, "", "run_test"], [7, 2, 1, "", "transform"]], "ethicml.models.preprocess.upsampler": [[7, 1, 1, "", "UpsampleStrategy"], [7, 1, 1, "", "Upsampler"]], "ethicml.models.preprocess.upsampler.Upsampler": [[7, 2, 1, "", "fit"], [7, 3, 1, "", "name"], [7, 3, 1, "", "out_size"], [7, 2, 1, "", "run"], [7, 2, 1, "", "run_test"], [7, 2, 1, "", "transform"]], "ethicml.models.preprocess.vfae": [[7, 1, 1, "", "VFAE"]], "ethicml.models.preprocess.vfae.VFAE": [[7, 2, 1, "", "call_script"], [7, 3, 1, "", "executable"], [7, 2, 1, "", "fit"], [7, 3, 1, "", "model_path"], [7, 3, 1, "", "name"], [7, 3, 1, "", "out_size"], [7, 2, 1, "", "run"], [7, 2, 1, "", "run_test"], [7, 2, 1, "", "transform"]], "ethicml.models.preprocess.zemel": [[7, 1, 1, "", "Zemel"]], "ethicml.models.preprocess.zemel.Zemel": [[7, 2, 1, "", "call_script"], [7, 3, 1, "", "executable"], [7, 2, 1, "", "fit"], [7, 3, 1, "", "model_path"], [7, 3, 1, "", "name"], [7, 3, 1, "", "out_size"], [7, 2, 1, "", "run"], [7, 2, 1, "", "run_test"], [7, 2, 1, "", "transform"]], "ethicml.plot": [[8, 5, 1, "", "plot_results"], [8, 5, 1, "", "save_2d_plot"], [8, 5, 1, "", "save_jointplot"], [8, 5, 1, "", "save_label_plot"], [8, 5, 1, "", "save_multijointplot"], [8, 5, 1, "", "single_plot"]], "ethicml.preprocessing": [[11, 1, 1, "", "BalancedTestSplit"], [11, 1, 1, "", "BiasedDebiasedSubsets"], [11, 1, 1, "", "BiasedSubset"], [11, 1, 1, "", "DataSplitter"], [11, 1, 1, "", "LabelBinarizer"], [11, 1, 1, "", "ProportionalSplit"], [11, 1, 1, "", "RandomSplit"], [11, 1, 1, "", "ScalerType"], [11, 1, 1, "", "SequentialSplit"], [11, 5, 1, "", "bin_cont_feats"], [11, 5, 1, "", "dataset_from_cond"], [11, 5, 1, "", "domain_split"], [11, 5, 1, "", "get_biased_and_debiased_subsets"], [11, 5, 1, "", "get_biased_subset"], [11, 5, 1, "", "query_dt"], [11, 5, 1, "", "scale_continuous"], [11, 5, 1, "", "train_test_split"]], "ethicml.preprocessing.LabelBinarizer": [[11, 2, 1, "", "adjust"], [11, 2, 1, "", "post"], [11, 2, 1, "", "post_only_labels"]], "ethicml.preprocessing.ScalerType": [[11, 2, 1, "", "fit"], [11, 2, 1, "", "fit_transform"], [11, 2, 1, "", "inverse_transform"], [11, 2, 1, "", "transform"]], "ethicml.run": [[9, 1, 1, "", "CVResults"], [9, 1, 1, "", "CrossValidator"], [9, 5, 1, "", "arrange_in_parallel"], [9, 5, 1, "", "evaluate_models"], [9, 5, 1, "", "load_results"], [9, 5, 1, "", "run_in_parallel"], [9, 5, 1, "", "run_metrics"]], "ethicml.run.CVResults": [[9, 2, 1, "", "best"], [9, 2, 1, "", "best_hyper_params"], [9, 2, 1, "", "get_best_in_top_k"], [9, 2, 1, "", "get_best_result"]], "ethicml.run.CrossValidator": [[9, 2, 1, "", "run"], [9, 2, 1, "", "run_async"]], "ethicml.utility": [[12, 1, 1, "", "Activation"], [12, 1, 1, "", "ClassifierType"], [12, 1, 1, "", "DataTuple"], [12, 1, 1, "", "FairnessType"], [12, 1, 1, "", "Heaviside"], [12, 1, 1, "", "KernelType"], [12, 1, 1, "", "LabelTuple"], [12, 1, 1, "", "ModelType"], [12, 1, 1, "", "Prediction"], [12, 1, 1, "", "ResultsAggregator"], [12, 1, 1, "", "SoftPrediction"], [12, 1, 1, "", "SubgroupTuple"], [12, 1, 1, "", "TrainTestPair"], [12, 1, 1, "", "TrainValPair"], [12, 5, 1, "", "aggregate_results"], [12, 5, 1, "", "concat"], [12, 5, 1, "", "filter_and_map_results"], [12, 5, 1, "", "filter_results"], [12, 5, 1, "", "make_results"], [12, 5, 1, "", "map_over_results_index"], [12, 5, 1, "", "shuffle_df"], [12, 5, 1, "", "undo_one_hot"]], "ethicml.utility.Activation": [[12, 2, 1, "", "apply"], [12, 2, 1, "", "get_name"]], "ethicml.utility.DataTuple": [[12, 2, 1, "", "__len__"], [12, 2, 1, "", "apply_to_joined_df"], [12, 2, 1, "", "from_df"], [12, 2, 1, "", "from_file"], [12, 2, 1, "", "get_n_samples"], [12, 2, 1, "", "get_s_subset"], [12, 2, 1, "", "remove_y"], [12, 2, 1, "", "rename"], [12, 2, 1, "", "replace"], [12, 2, 1, "", "replace_data"], [12, 3, 1, "", "s"], [12, 2, 1, "", "save_to_file"], [12, 3, 1, "", "x"], [12, 3, 1, "", "y"]], "ethicml.utility.Heaviside": [[12, 2, 1, "", "apply"], [12, 2, 1, "", "get_name"]], "ethicml.utility.LabelTuple": [[12, 2, 1, "", "__len__"], [12, 2, 1, "", "from_df"], [12, 2, 1, "", "from_np"], [12, 2, 1, "", "get_n_samples"], [12, 2, 1, "", "get_s_subset"], [12, 2, 1, "", "rename"], [12, 2, 1, "", "replace"], [12, 2, 1, "", "replace_data"], [12, 3, 1, "", "s"], [12, 3, 1, "", "y"]], "ethicml.utility.Prediction": [[12, 2, 1, "", "__len__"], [12, 2, 1, "", "from_file"], [12, 2, 1, "", "from_np"], [12, 2, 1, "", "get_s_subset"], [12, 3, 1, "", "hard"], [12, 3, 1, "", "info"], [12, 2, 1, "", "save_to_file"]], "ethicml.utility.ResultsAggregator": [[12, 2, 1, "", "append_df"], [12, 2, 1, "", "append_from_csv"], [12, 3, 1, "", "results"], [12, 2, 1, "", "save_as_csv"]], "ethicml.utility.SoftPrediction": [[12, 2, 1, "", "__len__"], [12, 2, 1, "", "from_file"], [12, 2, 1, "", "from_np"], [12, 2, 1, "", "get_s_subset"], [12, 3, 1, "", "hard"], [12, 3, 1, "", "info"], [12, 2, 1, "", "save_to_file"], [12, 3, 1, "", "soft"]], "ethicml.utility.SubgroupTuple": [[12, 2, 1, "", "__len__"], [12, 2, 1, "", "from_df"], [12, 2, 1, "", "from_file"], [12, 2, 1, "", "get_n_samples"], [12, 2, 1, "", "get_s_subset"], [12, 2, 1, "", "rename"], [12, 2, 1, "", "replace"], [12, 2, 1, "", "replace_data"], [12, 3, 1, "", "s"], [12, 2, 1, "", "save_to_file"], [12, 3, 1, "", "x"]], "ethicml.utility.TrainTestPair": [[12, 2, 1, "", "__len__"], [12, 2, 1, "", "count"], [12, 2, 1, "", "index"], [12, 4, 1, "", "test"], [12, 4, 1, "", "train"]], "ethicml.utility.TrainValPair": [[12, 2, 1, "", "__len__"], [12, 2, 1, "", "count"], [12, 2, 1, "", "index"], [12, 4, 1, "", "test"], [12, 4, 1, "", "train"]], "ethicml.utility.data_structures": [[12, 4, 1, "", "EvalTuple"], [12, 4, 1, "", "HyperParamType"], [12, 4, 1, "", "HyperParamValue"], [12, 1, 1, "", "Results"], [12, 4, 1, "", "TestTuple"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"miss": 0, "page": 0, "ethicml": [1, 2, 4, 8, 9, 10, 13], "data": [1, 11, 14], "metric": 2, "algorithm": [3, 5, 6, 7], "base": [3, 5, 6, 7], "model": [4, 5, 14], "inprocess": 5, "agarw": 5, "distribution": 5, "robust": 5, "optim": 5, "instal": [5, 14], "kamiran": 5, "kamishima": 5, "logist": 5, "regress": 5, "major": 5, "manual": 5, "method": 5, "mlp": 5, "oracl": 5, "svm": 5, "zafar": 5, "postprocess": 6, "dp": 6, "flip": 6, "hardt": 6, "preprocess": [7, 11], "beutel": 7, "calder": 7, "upsampl": 7, "vfae": 7, "zemel": 7, "plot": 8, "run": 9, "util": 12, "alias": 12, "welcom": 13, "": 13, "document": 13, "exampl": 13, "tabl": 13, "content": 13, "api": 13, "tutori": 13, "indic": 13, "runn": 14, "experi": 14, "adult": 14, "dataset": 14, "load": 14, "evalu": 14, "some": 14, "migrat": 15, "guid": 15, "1": 15, "0": 15, "modular": 15, "import": 15}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 56}})